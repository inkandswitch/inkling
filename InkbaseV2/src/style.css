:root {
  --bg-color: color(display-p3 0.9 0.9 0.9);
  --ink-color: #000a;

  --meta-black: transparent;
  --meta-dark-grey: transparent;
  --meta-grey: transparent;
  --meta-light-grey: transparent;
  --meta-white: transparent;

  --meta-green: transparent;
  --meta-yellow: transparent;
  --meta-light-blue: transparent;

  --meta-toggle: var(--ink-color);

  --handle-fill: var(--ink-color);
  --handle-stroke: transparent;

  /* --pseudo-touch: color(display-p3 0 1 0.8); */
  --pseudo-touch: transparent;

  --transition-fill: fill 1.4s cubic-bezier(0, 1.4, 0, 1);
  --transition-stroke: stroke 1.4s cubic-bezier(0, 1.4, 0, 1);
}

:root[meta-mode] {
  --bg-color: color(display-p3 0.85 0.85 0.85);
  --ink-color: #0002;

  --meta-black: #000;
  --meta-dark-grey: color(display-p3 0.3 0.3 0.3);
  --meta-grey: color(display-p3 0.5 0.5 0.5);
  --meta-light-grey: color(display-p3 0.7 0.7 0.7);
  --meta-white: color(display-p3 0.9 0.9 0.9);

  --meta-green: color(display-p3 0 1 0.8);
  --meta-yellow: color(display-p3 1 0.7 0);
  --meta-light-blue: color(display-p3 0.8 0.9 1);

  --meta-toggle: var(--meta-black);

  --handle-fill: var(--meta-black);
  --handle-stroke: var(--meta-black);
}

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  overflow-wrap: break-word;
  hyphens: auto;
  touch-action: none;
  -webkit-user-drag: none;
  -webkit-user-select: none;
  user-select: none;
}

html,
body {
  width: 100%;
  height: 100%;
  overflow: hidden;
}

body {
  font-family: system-ui;
  stroke-linecap: round;
  background-color: var(--bg-color);
  transition: background-color 0.6s cubic-bezier(0.3, 1.4, 0.3, 1);
}

svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
}

svg * {
  transition: var(--transition-fill), var(--transition-stroke);
}

#meta-toggle {
  animation: zoom-in 0.7s cubic-bezier(0, 1.2, 0, 1) backwards;

  transition:
    scale 0.8s cubic-bezier(1, 0, 0, 1.3),
    translate 0.5s cubic-bezier(0.4, 1.3, 0.1, 0.98);

  &.dragging {
    scale: 1.8;
    transition:
      scale 2s cubic-bezier(0, 1.2, 0, 1),
      translate 0.05s linear;
  }

  & circle {
    fill: var(--meta-toggle);
    transition:
      scale 0.8s cubic-bezier(0, 1.5, 0, 1),
      var(--transition-fill);
  }

  .inner {
    fill: var(--bg-color);
    scale: 0.75;
  }

  .secret {
    scale: 0.15;
  }

  &.active {
    .inner {
      scale: 0.85;
    }

    .secret {
      scale: 0.7;
    }
  }
}

.pseudo-touch {
  fill: var(--pseudo-touch);
}

.stroke {
  fill: none;
  stroke: var(--ink-color);
  stroke-width: 2;
}

.formula.stroke {
  stroke: var(--meta-black);
}

.handle {
  fill: var(--handle-fill);
  stroke: var(--handle-stroke);
  stroke-width: 3;
}

.gizmo {
  fill: none;
  stroke: var(--meta-black);
  stroke-width: 2;

  & path {
    transition: transform 0.4s cubic-bezier(0, 1.2, 0, 1);
  }

  & polyline {
    stroke-width: 2;
  }
}

.component {
  fill: none;
  stroke: var(--meta-black);
  stroke-width: 2;
}

.formula-editor {
  fill: var(--meta-light-grey);
}

.formula-editor-cell {
  fill: var(--meta-white);

  &[is-default-type='false'] {
    fill: var(--meta-light-blue);
  }
}

.formula-editor-cell-text {
  fill: var(--meta-dark-grey);
}

.label-box {
  fill: var(--meta-light-blue);
}

.label-text {
  fill: var(--meta-white);
}

.token-box {
  fill: var(--meta-dark-grey);

  &[is-locked='true'] {
    fill: var(--meta-grey);
  }
}

.token-text {
  fill: var(--meta-white);
}

.token-frac-text {
  fill: var(--meta-light-grey);
}

.op.token {
  fill: var(--meta-dark-grey);
}

.parsed-formula {
  fill: var(--meta-light-grey);
}

.property-picker-box {
  fill: var(--meta-black);
}

.property-picker-text {
  fill: var(--meta-white);
}

.property-picker-editor-box {
  fill: var(--meta-black);
}

.property-picker-editor-text {
  fill: var(--meta-white);
}

.wire {
  fill: none;
  stroke: var(--meta-black);
  stroke-width: 0.5;
}

@keyframes zoom-in {
  from {
    scale: 0;
  }
}
