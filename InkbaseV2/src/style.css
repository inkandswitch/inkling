/* THEME LIGHTNESS VALUES *************************************************************************
 * 0 is lowest contrast and 5 is highest contrast against the background.
 * Do tweak these, or add new themes in index.html
 */

:root[theme*='light'] {
  --L0: 90%;
  --L1: 80%;
  --L2: 70%;
  --L3: 50%;
  --L4: 30%;
  --L5: 0%;
}

:root[theme*='dark'] {
  --L0: 10%;
  --L1: 30%;
  --L2: 50%;
  --L3: 70%;
  --L4: 80%;
  --L5: 90%;
}

/* Generate a range of greyscale colors based on the above lightness values */
:root {
  --grey0: lch(var(--L0) 0 0);
  --grey1: lch(var(--L1) 0 0);
  --grey2: lch(var(--L2) 0 0);
  --grey3: lch(var(--L3) 0 0);
  --grey4: lch(var(--L4) 0 0);
  --grey5: lch(var(--L5) 0 0);
}

/* SEMANTIC VARIABLES *****************************************************************************
 * Here we assign the greyscale colors established above onto meaningful names for our elements.
 * We'll use these names throughout the rest of the stylesheet, and not refer to specific colors.
 */

:root {
  /* These colors are the same in concrete and meta mode */
  --bg-color: var(--grey0);
  --handle-fill: var(--grey5);
  --handle-stroke: lch(var(--L5) 0 0 / 0.03);
  --status-text: var(--grey3);
  --pseudo-touch: var(--grey2);
  --gesture-circle: var(--grey2);
  --gesture-text: var(--grey2);

  /* These colors are different in concrete and meta mode */
  --component: transparent;
  --constrained: transparent;
  --formula-editor-cell-non-default: transparent;
  --formula-editor-cell-text: transparent;
  --formula-editor-cell: transparent;
  --formula-editor: transparent;
  --formula-ink: transparent;
  --gizmo-line: transparent;
  --gizmo-arcs: transparent;
  --ink-color: lch(var(--L5) 0 0 / 0.65);
  --label-box: transparent;
  --label-stroke: transparent;
  --label-text: transparent;
  --meta-toggle: var(--grey5);
  --meta-wire: transparent;
  --op-token: transparent;
  --parsed-formula: transparent;
  --property-picker-box: transparent;
  --property-picker-editor-box: transparent;
  --property-picker-editor-text: transparent;
  --property-picker-text: transparent;
  --token-embedded-fill: transparent;
  --token-fill: transparent;
  --token-frac-text: transparent;
  --token-locked-fill: transparent;
  --token-stroke: transparent;
  --token-text: transparent;

  &[meta-mode] {
    --component: var(--grey5);
    --constrained: var(--grey5);
    --formula-editor-cell-non-default: var(--grey3);
    --formula-editor-cell-text: var(--grey4);
    --formula-editor-cell: var(--grey1);
    --formula-editor: var(--grey2);
    --formula-ink: var(--grey5);
    --gizmo-line: var(--grey5);
    --gizmo-arcs: lch(var(--L5) 0 0 / 0.1);
    --ink-color: lch(var(--L5) 0 0 / 0.1);
    --label-box: var(--grey3);
    --label-stroke: var(--grey1);
    --label-text: var(--grey1);
    --meta-toggle: var(--grey5);
    --meta-wire: var(--grey4);
    --op-token: var(--grey4);
    --parsed-formula: var(--grey5);
    --property-picker-box: var(--grey5);
    --property-picker-editor-box: var(--grey5);
    --property-picker-editor-text: var(--grey0);
    --property-picker-text: var(--grey5);
    --token-embedded-fill: var(--grey1);
    --token-fill: var(--bg-color);
    --token-frac-text: var(--grey4);
    --token-locked-fill: var(--grey1);
    --token-stroke: var(--grey5);
    --token-text: var(--grey5);
  }
}

/* THEME-SPECIFIC OVERRIDES ***********************************************************************
 * The above assignments are the default used regardless of theme, but you can override them here.
 */

:root[theme*='color'] {
  --blue: color(display-p3 0.8 0.9 1);
  --green: color(display-p3 0 1 0.8);
  --yellow: color(display-p3 1 0.7 0);

  --pseudo-touch: var(--yellow);
  --gesture-circle: var(--yellow);
  --gesture-text: var(--yellow);

  &[meta-mode] {
    --constrained: var(--green);
    --formula-editor-cell-non-default: var(--blue);
    --label-box: var(--blue);
    --meta-toggle: var(--yellow);
  }
}

/* MISC CONFIG ***********************************************************************************/

:root {
  --transition-fill: fill 1.4s cubic-bezier(0, 1.4, 0, 1);
  --transition-stroke: stroke 1.4s cubic-bezier(0, 1.4, 0, 1);
}

/* RESETS & BASICS *******************************************************************************/

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  overflow-wrap: break-word;
  hyphens: auto;
  touch-action: none;
  -webkit-user-drag: none;
  -webkit-user-select: none;
  user-select: none;
}

html,
body,
svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  overflow: hidden;
}

body {
  font-family: system-ui;
  stroke-linecap: round;
  background-color: var(--bg-color);
  transition: background-color 0.8s cubic-bezier(0.5, 1, 0.5, 1);
}

svg * {
  transition: var(--transition-fill), var(--transition-stroke);
}

/* ALL THE THINGS ********************************************************************************/

.status-text {
  fill: transparent;
  text-anchor: middle;
  translate: 50vw calc(100vh - 15px);

  &[is-visible] {
    fill: var(--status-text);
  }
}

#meta-toggle {
  animation: zoom-in 0.7s cubic-bezier(0, 1.2, 0, 1) backwards;

  transition:
    scale 0.8s cubic-bezier(1, 0, 0, 1.3),
    translate 0.5s cubic-bezier(0.4, 1.3, 0.1, 0.98);

  &.dragging {
    scale: 1.8;
    transition:
      scale 2s cubic-bezier(0, 1.2, 0, 1),
      translate 0.05s linear;
  }

  & circle {
    fill: var(--meta-toggle);
    transition:
      scale 0.8s cubic-bezier(0, 1.5, 0, 1),
      var(--transition-fill);
  }

  .inner {
    fill: var(--bg-color);
    scale: 0.75;
  }

  .secret {
    scale: 0.15;
  }

  &.active {
    .inner {
      scale: 0.85;
    }

    .secret {
      scale: 0.7;
    }
  }
}

.pseudo-touch {
  fill: var(--pseudo-touch);
}

.stroke {
  fill: none;
  stroke: var(--ink-color);
  stroke-width: 2;
}

.formula.stroke {
  stroke: var(--formula-ink);
}

.handle {
  fill: var(--handle-fill);
  stroke: var(--handle-stroke);
  stroke-width: 30;
}

.gizmo {
  fill: none;
  stroke-width: 2;

  & polyline {
    stroke: var(--gizmo-line);
    stroke-width: 2;
  }

  & path {
    stroke: var(--gizmo-arcs);
    transition:
      transform 0.4s cubic-bezier(0, 1.2, 0, 1),
      var(--transition-stroke);
  }

  & [is-constrained] path {
    stroke: var(--constrained);
  }
}

.component {
  fill: none;
  stroke: var(--component);
  stroke-width: 2;
}

.formula-editor {
  fill: var(--formula-editor);
}

.formula-editor-cell {
  stroke: var(--formula-editor-cell);
  fill: none;

  &:not([is-default-type]) {
    fill: none;
  }
}

.formula-editor-cell-text {
  fill: var(--formula-editor-cell-text);
  font-size: 30px;
}

.label-box {
  fill: var(--label-box);
}

.label-text {
  fill: var(--label-text);
  font-size: 24px;
}

.label-stroke {
  fill: none;
  stroke: var(--label-stroke);
  stroke-width: 2;
}

.token-box {
  fill: var(--token-fill);
  stroke: var(--token-stroke);
  stroke-width: 0.5;

  [is-embedded]>& {
    stroke: none;
    fill: var(--token-embedded-fill);
  }

  [is-locked]>& {
    fill: var(--token-locked-fill);
  }
}

.token-text {
  fill: var(--token-text);
  translate: 5px 24px;
  font-size: 24px;
  font-family: monospace;
}

.token-frac-text {
  fill: var(--token-frac-text);
  translate: 5px 24px;
  font-size: 10px;
  font-family: monospace;
}

.op.token {
  fill: var(--op-token);
  font-size: 24px;
}

.parsed-formula {
  fill: none;
  stroke: var(--parsed-formula);
  stroke-width: 0.5;
}

.property-picker-box {
  stroke: var(--property-picker-box);
  fill: var(--token-fill);
  stroke-width: 0.5;
}

.property-picker-text {
  fill: var(--property-picker-text);
  font-size: 18px;
  font-family: monospace;
}

.property-picker-editor-box {
  fill: var(--property-picker-editor-box);
}

.property-picker-editor-text {
  fill: var(--property-picker-editor-text);
  font-size: 24px;
  font-family: monospace;
}

.wire {
  fill: none;
  stroke: var(--meta-wire);
  stroke-width: 0.5;
  stroke-dasharray: 10;
}

.gesture {
  & circle {
    fill: var(--gesture-circle);
  }

  & text {
    fill: var(--gesture-text);
    transform: translate(0, -50px);
    text-anchor: middle;
  }
}

@keyframes zoom-in {
  from {
    scale: 0;
  }
}