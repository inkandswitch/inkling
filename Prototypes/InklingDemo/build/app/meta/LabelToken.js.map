{
  "version": 3,
  "sources": ["/Users/admin/Work/Inkling/InkbaseV2/src/app/meta/LabelToken.ts"],
  "sourcesContent": ["import Token from './Token';\nimport SVG from '../Svg';\nimport * as ohm from 'ohm-js';\nimport { WirePort } from './Wire';\nimport { MetaLabel } from './MetaSemantics';\nimport { boundingBoxFromStrokes } from '../../lib/bounding_box';\nimport { generateId } from '../../lib/helpers';\nimport { GameObject } from '../GameObject';\n\nexport default class LabelToken extends Token {\n  readonly id = generateId();\n\n  private lastRenderedValue = '';\n\n  protected readonly boxElement = SVG.add('rect', SVG.metaElm, {\n    x: this.position.x,\n    y: this.position.y,\n    width: this.width,\n    height: this.height,\n    rx: 3,\n    class: 'label-box',\n  });\n\n  protected readonly textElement = SVG.add('text', SVG.metaElm, {\n    x: this.position.x + 5,\n    y: this.position.y + 24,\n    class: 'label-text',\n  });\n\n  readonly strokeElements: SVGElement[] = [];\n\n  wirePort: WirePort;\n\n  constructor(\n    public readonly label: MetaLabel,\n    source?: ohm.Interval\n  ) {\n    super(source);\n    if (typeof label.display === 'string') {\n      // getComputedTextLength() is slow, so we're gonna do some dirty checking here\n      const content = label.display;\n      if (content !== this.lastRenderedValue) {\n        this.lastRenderedValue = content;\n        SVG.update(this.textElement, { content });\n        this.width = this.textElement.getComputedTextLength() + 10;\n      }\n    } else {\n      for (const stroke of label.display) {\n        const strokeElement = SVG.add('polyline', SVG.labelElm, {\n          class: 'label-stroke',\n          points: SVG.points(stroke),\n          transform: SVG.positionToTransform(this.position),\n        });\n        this.strokeElements.push(strokeElement);\n      }\n\n      const bb = boundingBoxFromStrokes(label.display);\n      const leftPadding = bb.minX;\n      this.width = bb.width + leftPadding * 2;\n    }\n    SVG.update(this.boxElement, { width: this.width });\n\n    this.wirePort = this.adopt(new WirePort(this.position, this.label));\n  }\n\n  isPrimary() {\n    return true;\n  }\n\n  render() {\n    SVG.update(this.boxElement, {\n      x: this.position.x,\n      y: this.position.y,\n      'is-hidden': this.hidden,\n    });\n\n    SVG.update(this.textElement, {\n      x: this.position.x + 5,\n      y: this.position.y + 24,\n      'is-hidden': this.hidden,\n    });\n\n    for (const strokeElement of this.strokeElements) {\n      SVG.update(strokeElement, {\n        transform: SVG.positionToTransform(this.position),\n        'is-hidden': this.hidden,\n      });\n    }\n\n    this.wirePort.position = this.midPoint();\n  }\n\n  getVariable() {\n    return this.label.variable;\n  }\n}\n\nexport const aLabelToken = (gameObj: GameObject) =>\n  gameObj instanceof LabelToken ? gameObj : null;\n"],
  "mappings": "AAAA;AACA;AAEA;AAEA;AACA;AAGA,wCAAwC,MAAM;AAAA,EAwB5C,YACkB,OAChB,QACA;AACA,UAAM;AAHU;AAxBT,cAAK;AAEN,6BAAoB;AAET,sBAAa,IAAI,IAAI,QAAQ,IAAI,SAAS;AAAA,MAC3D,GAAG,KAAK,SAAS;AAAA,MACjB,GAAG,KAAK,SAAS;AAAA,MACjB,OAAO,KAAK;AAAA,MACZ,QAAQ,KAAK;AAAA,MACb,IAAI;AAAA,MACJ,OAAO;AAAA;AAGU,uBAAc,IAAI,IAAI,QAAQ,IAAI,SAAS;AAAA,MAC5D,GAAG,KAAK,SAAS,IAAI;AAAA,MACrB,GAAG,KAAK,SAAS,IAAI;AAAA,MACrB,OAAO;AAAA;AAGA,0BAA+B;AAStC,QAAI,OAAO,MAAM,YAAY,UAAU;AAErC,YAAM,UAAU,MAAM;AACtB,UAAI,YAAY,KAAK,mBAAmB;AACtC,aAAK,oBAAoB;AACzB,YAAI,OAAO,KAAK,aAAa,CAAE;AAC/B,aAAK,QAAQ,KAAK,YAAY,0BAA0B;AAAA;AAAA,WAErD;AACL,iBAAW,UAAU,MAAM,SAAS;AAClC,cAAM,gBAAgB,IAAI,IAAI,YAAY,IAAI,UAAU;AAAA,UACtD,OAAO;AAAA,UACP,QAAQ,IAAI,OAAO;AAAA,UACnB,WAAW,IAAI,oBAAoB,KAAK;AAAA;AAE1C,aAAK,eAAe,KAAK;AAAA;AAG3B,YAAM,KAAK,uBAAuB,MAAM;AACxC,YAAM,cAAc,GAAG;AACvB,WAAK,QAAQ,GAAG,QAAQ,cAAc;AAAA;AAExC,QAAI,OAAO,KAAK,YAAY,CAAE,OAAO,KAAK;AAE1C,SAAK,WAAW,KAAK,MAAM,IAAI,SAAS,KAAK,UAAU,KAAK;AAAA;AAAA,EAG9D,YAAY;AACV,WAAO;AAAA;AAAA,EAGT,SAAS;AACP,QAAI,OAAO,KAAK,YAAY;AAAA,MAC1B,GAAG,KAAK,SAAS;AAAA,MACjB,GAAG,KAAK,SAAS;AAAA,MACjB,aAAa,KAAK;AAAA;AAGpB,QAAI,OAAO,KAAK,aAAa;AAAA,MAC3B,GAAG,KAAK,SAAS,IAAI;AAAA,MACrB,GAAG,KAAK,SAAS,IAAI;AAAA,MACrB,aAAa,KAAK;AAAA;AAGpB,eAAW,iBAAiB,KAAK,gBAAgB;AAC/C,UAAI,OAAO,eAAe;AAAA,QACxB,WAAW,IAAI,oBAAoB,KAAK;AAAA,QACxC,aAAa,KAAK;AAAA;AAAA;AAItB,SAAK,SAAS,WAAW,KAAK;AAAA;AAAA,EAGhC,cAAc;AACZ,WAAO,KAAK,MAAM;AAAA;AAAA;AAIf,aAAM,cAAc,CAAC,YAC1B,mBAAmB,aAAa,UAAU;",
  "names": []
}
