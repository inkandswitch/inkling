{
  "version": 3,
  "sources": ["/Users/admin/Work/Inkling/InkbaseV2/src/app/meta/PropertyPicker.ts"],
  "sourcesContent": ["import Token from './Token';\nimport SVG from '../Svg';\nimport { Position } from '../../lib/types';\nimport { WirePort } from './Wire';\nimport * as constraints from '../constraints';\nimport Vec from '../../lib/vec';\nimport {\n  MetaStruct,\n  MetaLabel,\n  MetaNumber,\n  MetaConnection,\n  MetaNumberConnection,\n} from './MetaSemantics';\nimport { generateId } from '../../lib/helpers';\nimport { GameObject } from '../GameObject';\n\nconst TAB_SIZE = 5;\n\nfunction PropertyPickerPath(pos: Position, w: number, h: number) {\n  return `\n    M ${pos.x + TAB_SIZE} ${pos.y}\n    L ${pos.x + w} ${pos.y}\n    L ${pos.x + w} ${pos.y + h}\n    L ${pos.x + TAB_SIZE} ${pos.y + h}\n    L ${pos.x} ${pos.y + h / 2}\n    L ${pos.x + TAB_SIZE} ${pos.y}\n  `;\n}\n\nexport default class PropertyPicker extends Token {\n  readonly id = generateId();\n\n  private lastRenderedValue = '';\n\n  protected readonly boxElement = SVG.add('path', SVG.metaElm, {\n    d: PropertyPickerPath(this.position, this.width, this.height),\n    class: 'property-picker-box',\n  });\n\n  protected readonly textElement = SVG.add('text', SVG.metaElm, {\n    x: this.position.x + 5 + TAB_SIZE,\n    y: this.position.y + 21,\n    class: 'property-picker-text',\n  });\n\n  readonly inputVariable = new MetaStruct([]);\n  readonly inputPort = this.adopt(\n    new WirePort(this.position, this.inputVariable)\n  );\n\n  readonly outputVariable = new MetaNumber(constraints.variable());\n  readonly wirePort = this.adopt(\n    new WirePort(this.position, this.outputVariable)\n  );\n\n  // Alias this so we conform to TokenWithVariable\n\n  private property: MetaLabel | null = null;\n\n  internalConnection: MetaConnection | null = null;\n\n  isPrimary(): boolean {\n    return true;\n  }\n\n  getVariable(): constraints.Variable {\n    return this.outputVariable.variable;\n  }\n\n  render() {\n    // getComputedTextLength() is slow, so we're gonna do some dirty checking here\n    const content = this.property?.display as string;\n    if (content !== this.lastRenderedValue) {\n      this.lastRenderedValue = content;\n      SVG.update(this.textElement, { content });\n      this.width = this.textElement.getComputedTextLength() + 10 + TAB_SIZE;\n    }\n\n    SVG.update(this.boxElement, {\n      d: PropertyPickerPath(this.position, this.width, this.height),\n      'is-embedded': this.embedded,\n    });\n\n    SVG.update(this.textElement, {\n      x: this.position.x + 5 + TAB_SIZE,\n      y: this.position.y + 21,\n    });\n\n    this.inputPort.position = Vec.add(this.position, Vec(0, this.height / 2));\n    this.wirePort.position = this.midPoint();\n  }\n\n  setProperty(newValue: MetaLabel) {\n    this.property = newValue;\n    this.update();\n  }\n\n  update() {\n    if (!this.property) {\n      return;\n    }\n\n    this.internalConnection = new MetaNumberConnection(\n      this.property,\n      this.outputVariable\n    );\n  }\n\n  remove() {\n    this.boxElement.remove();\n    this.textElement.remove();\n    super.remove();\n  }\n}\n\nexport const aPropertyPicker = (gameObj: GameObject) =>\n  gameObj instanceof PropertyPicker ? gameObj : null;\n"],
  "mappings": "AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAOA;AAGA,MAAM,WAAW;AAEjB,4BAA4B,KAAe,GAAW,GAAW;AAC/D,SAAO;AAAA,QACD,IAAI,IAAI,YAAY,IAAI;AAAA,QACxB,IAAI,IAAI,KAAK,IAAI;AAAA,QACjB,IAAI,IAAI,KAAK,IAAI,IAAI;AAAA,QACrB,IAAI,IAAI,YAAY,IAAI,IAAI;AAAA,QAC5B,IAAI,KAAK,IAAI,IAAI,IAAI;AAAA,QACrB,IAAI,IAAI,YAAY,IAAI;AAAA;AAAA;AAIhC,4CAA4C,MAAM;AAAA,EAAlD,cA7BA;AA6BA;AACW,cAAK;AAEN,6BAAoB;AAET,sBAAa,IAAI,IAAI,QAAQ,IAAI,SAAS;AAAA,MAC3D,GAAG,mBAAmB,KAAK,UAAU,KAAK,OAAO,KAAK;AAAA,MACtD,OAAO;AAAA;AAGU,uBAAc,IAAI,IAAI,QAAQ,IAAI,SAAS;AAAA,MAC5D,GAAG,KAAK,SAAS,IAAI,IAAI;AAAA,MACzB,GAAG,KAAK,SAAS,IAAI;AAAA,MACrB,OAAO;AAAA;AAGA,yBAAgB,IAAI,WAAW;AAC/B,qBAAY,KAAK,MACxB,IAAI,SAAS,KAAK,UAAU,KAAK;AAG1B,0BAAiB,IAAI,WAAW,YAAY;AAC5C,oBAAW,KAAK,MACvB,IAAI,SAAS,KAAK,UAAU,KAAK;AAK3B,oBAA6B;AAErC,8BAA4C;AAAA;AAAA,EAE5C,YAAqB;AACnB,WAAO;AAAA;AAAA,EAGT,cAAoC;AAClC,WAAO,KAAK,eAAe;AAAA;AAAA,EAG7B,SAAS;AAEP,UAAM,UAAU,KAAK,UAAU;AAC/B,QAAI,YAAY,KAAK,mBAAmB;AACtC,WAAK,oBAAoB;AACzB,UAAI,OAAO,KAAK,aAAa,CAAE;AAC/B,WAAK,QAAQ,KAAK,YAAY,0BAA0B,KAAK;AAAA;AAG/D,QAAI,OAAO,KAAK,YAAY;AAAA,MAC1B,GAAG,mBAAmB,KAAK,UAAU,KAAK,OAAO,KAAK;AAAA,MACtD,eAAe,KAAK;AAAA;AAGtB,QAAI,OAAO,KAAK,aAAa;AAAA,MAC3B,GAAG,KAAK,SAAS,IAAI,IAAI;AAAA,MACzB,GAAG,KAAK,SAAS,IAAI;AAAA;AAGvB,SAAK,UAAU,WAAW,IAAI,IAAI,KAAK,UAAU,IAAI,GAAG,KAAK,SAAS;AACtE,SAAK,SAAS,WAAW,KAAK;AAAA;AAAA,EAGhC,YAAY,UAAqB;AAC/B,SAAK,WAAW;AAChB,SAAK;AAAA;AAAA,EAGP,SAAS;AACP,QAAI,CAAC,KAAK,UAAU;AAClB;AAAA;AAGF,SAAK,qBAAqB,IAAI,qBAC5B,KAAK,UACL,KAAK;AAAA;AAAA,EAIT,SAAS;AACP,SAAK,WAAW;AAChB,SAAK,YAAY;AACjB,UAAM;AAAA;AAAA;AAIH,aAAM,kBAAkB,CAAC,YAC9B,mBAAmB,iBAAiB,UAAU;",
  "names": []
}
