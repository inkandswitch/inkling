{
  "version": 3,
  "sources": ["/Users/admin/Work/Inkling/InkbaseV2/src/app/meta/PropertyPickerEditor.ts"],
  "sourcesContent": ["import PropertyPicker from './PropertyPicker';\nimport SVG from '../Svg';\nimport { Position } from '../../lib/types';\nimport { MetaLabel, MetaStruct } from './MetaSemantics';\nimport { GameObject } from '../GameObject';\nimport { signedDistanceToBox } from '../../lib/SignedDistance';\n\nconst LINEHEIGHT = 30;\n\nexport default class PropertyPickerEditor extends GameObject {\n  width = 200;\n  height = 44;\n  position: Position = { x: 100, y: 100 };\n\n  props: Array<MetaLabel>;\n\n  protected readonly boxElement: SVGElement;\n\n  svgTextElements: Array<SVGElement> = [];\n  propertyPicker: PropertyPicker;\n\n  constructor(propertyPicker: PropertyPicker) {\n    super();\n\n    this.propertyPicker = propertyPicker;\n\n    this.props = (propertyPicker.inputPort.value as MetaStruct).list();\n    this.height = this.props.length * LINEHEIGHT;\n    this.position = propertyPicker.position;\n\n    this.boxElement = SVG.add('rect', SVG.metaElm, {\n      x: this.position.x,\n      y: this.position.y,\n      width: this.width,\n      height: this.height,\n      rx: 3,\n      class: 'property-picker-editor-box',\n    });\n\n    this.svgTextElements = this.props.map((label, index) => {\n      const text = SVG.add('text', SVG.metaElm, {\n        x: this.position.x + 5,\n        y: this.position.y + 24 + index * LINEHEIGHT,\n        class: 'property-picker-editor-text',\n        content: label.display as string,\n      });\n      return text;\n    });\n  }\n\n  onTapInside(position: Position) {\n    const index = Math.floor((position.y - this.position.y) / LINEHEIGHT);\n\n    this.propertyPicker.setProperty(this.props[index]);\n    this.remove(false);\n  }\n\n  distanceToPoint(pos: Position) {\n    return signedDistanceToBox(\n      this.position.x,\n      this.position.y,\n      this.width,\n      this.height,\n      pos.x,\n      pos.y\n    );\n  }\n\n  render() {\n    // NOOP\n  }\n\n  remove(isErase = true) {\n    if (isErase) {\n      this.propertyPicker.remove();\n    }\n\n    for (const element of this.svgTextElements) {\n      element.remove();\n    }\n\n    this.boxElement.remove();\n    super.remove();\n  }\n}\n\nexport const aPropertyPickerEditor = (gameObj: GameObject) =>\n  gameObj instanceof PropertyPickerEditor ? gameObj : null;\n"],
  "mappings": "AACA;AAGA;AACA;AAEA,MAAM,aAAa;AAEnB,kDAAkD,WAAW;AAAA,EAY3D,YAAY,gBAAgC;AAC1C;AAZF,iBAAQ;AACR,kBAAS;AACT,oBAAqB,CAAE,GAAG,KAAK,GAAG;AAMlC,2BAAqC;AAMnC,SAAK,iBAAiB;AAEtB,SAAK,QAAS,eAAe,UAAU,MAAqB;AAC5D,SAAK,SAAS,KAAK,MAAM,SAAS;AAClC,SAAK,WAAW,eAAe;AAE/B,SAAK,aAAa,IAAI,IAAI,QAAQ,IAAI,SAAS;AAAA,MAC7C,GAAG,KAAK,SAAS;AAAA,MACjB,GAAG,KAAK,SAAS;AAAA,MACjB,OAAO,KAAK;AAAA,MACZ,QAAQ,KAAK;AAAA,MACb,IAAI;AAAA,MACJ,OAAO;AAAA;AAGT,SAAK,kBAAkB,KAAK,MAAM,IAAI,CAAC,OAAO,UAAU;AACtD,YAAM,OAAO,IAAI,IAAI,QAAQ,IAAI,SAAS;AAAA,QACxC,GAAG,KAAK,SAAS,IAAI;AAAA,QACrB,GAAG,KAAK,SAAS,IAAI,KAAK,QAAQ;AAAA,QAClC,OAAO;AAAA,QACP,SAAS,MAAM;AAAA;AAEjB,aAAO;AAAA;AAAA;AAAA,EAIX,YAAY,UAAoB;AAC9B,UAAM,QAAQ,KAAK,MAAO,UAAS,IAAI,KAAK,SAAS,KAAK;AAE1D,SAAK,eAAe,YAAY,KAAK,MAAM;AAC3C,SAAK,OAAO;AAAA;AAAA,EAGd,gBAAgB,KAAe;AAC7B,WAAO,oBACL,KAAK,SAAS,GACd,KAAK,SAAS,GACd,KAAK,OACL,KAAK,QACL,IAAI,GACJ,IAAI;AAAA;AAAA,EAIR,SAAS;AAAA;AAAA,EAIT,OAAO,UAAU,MAAM;AACrB,QAAI,SAAS;AACX,WAAK,eAAe;AAAA;AAGtB,eAAW,WAAW,KAAK,iBAAiB;AAC1C,cAAQ;AAAA;AAGV,SAAK,WAAW;AAChB,UAAM;AAAA;AAAA;AAIH,aAAM,wBAAwB,CAAC,YACpC,mBAAmB,uBAAuB,UAAU;",
  "names": []
}
