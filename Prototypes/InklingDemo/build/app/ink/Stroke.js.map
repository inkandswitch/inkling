{
  "version": 3,
  "sources": ["/Users/admin/Work/Inkling/InkbaseV2/src/app/ink/Stroke.ts"],
  "sourcesContent": ["import SVG from '../Svg';\nimport { Position } from '../../lib/types';\nimport { GameObject } from '../GameObject';\nimport Rect from '../../lib/rect';\nimport { distanceToPath } from '../../lib/helpers';\nimport StrokeGroup from './StrokeGroup';\n\nexport default class Stroke extends GameObject {\n  public points: Position[] = [];\n\n  protected element = SVG.add('polyline', SVG.inkElm, {\n    class: 'stroke',\n  });\n\n  updatePath(newPoints: Array<Position>) {\n    this.points = newPoints;\n  }\n\n  render() {\n    SVG.update(this.element, {\n      points: SVG.points(this.points),\n    });\n  }\n\n  becomeGroup() {\n    return this.parent?.adopt(new StrokeGroup(new Set([this])));\n  }\n\n  distanceToPoint(point: Position) {\n    return distanceToPath(point, this.points);\n  }\n\n  overlapsRect(rect: Rect): boolean {\n    for (const point of this.points) {\n      if (Rect.isPointInside(rect, point)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  remove() {\n    this.element.remove();\n    super.remove();\n  }\n}\n\nexport const aStroke = (gameObj: GameObject) =>\n  gameObj instanceof Stroke ? gameObj : null;\n"],
  "mappings": "AAAA;AAEA;AACA;AACA;AACA;AAEA,oCAAoC,WAAW;AAAA,EAA/C,cAPA;AAOA;AACS,kBAAqB;AAElB,mBAAU,IAAI,IAAI,YAAY,IAAI,QAAQ;AAAA,MAClD,OAAO;AAAA;AAAA;AAAA,EAGT,WAAW,WAA4B;AACrC,SAAK,SAAS;AAAA;AAAA,EAGhB,SAAS;AACP,QAAI,OAAO,KAAK,SAAS;AAAA,MACvB,QAAQ,IAAI,OAAO,KAAK;AAAA;AAAA;AAAA,EAI5B,cAAc;AACZ,WAAO,KAAK,QAAQ,MAAM,IAAI,YAAY,IAAI,IAAI,CAAC;AAAA;AAAA,EAGrD,gBAAgB,OAAiB;AAC/B,WAAO,eAAe,OAAO,KAAK;AAAA;AAAA,EAGpC,aAAa,MAAqB;AAChC,eAAW,SAAS,KAAK,QAAQ;AAC/B,UAAI,KAAK,cAAc,MAAM,QAAQ;AACnC,eAAO;AAAA;AAAA;AAGX,WAAO;AAAA;AAAA,EAGT,SAAS;AACP,SAAK,QAAQ;AACb,UAAM;AAAA;AAAA;AAIH,aAAM,UAAU,CAAC,YACtB,mBAAmB,SAAS,UAAU;",
  "names": []
}
