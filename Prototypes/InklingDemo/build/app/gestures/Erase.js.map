{
  "version": 3,
  "sources": ["/Users/admin/Work/Inkling/InkbaseV2/src/app/gestures/Erase.ts"],
  "sourcesContent": ["import { EventContext, Gesture } from './Gesture';\nimport { rand } from '../../lib/math';\nimport SVG from '../Svg';\nimport { Position } from '../../lib/types';\nimport { GameObject, aGameObject } from '../GameObject';\nimport Stroke, { aStroke } from '../ink/Stroke';\nimport StrokeGroup from '../ink/StrokeGroup';\n\nexport function erase(ctx: EventContext): Gesture | void {\n  if (ctx.pseudoCount === 2) {\n    return new Gesture('Erase', {\n      moved(ctx) {\n        spawn(ctx.event.position);\n\n        const gos = ctx.root.findAll({\n          what: ctx.metaToggle.active ? aGameObject : aStrokeOrGroup,\n          near: ctx.event.position,\n          tooFar: 10,\n        });\n\n        for (const go of gos) {\n          go.hp--;\n          if (go.hp <= 0) {\n            go.remove();\n          }\n        }\n      },\n    });\n  }\n}\n\nfunction spawn(p: Position) {\n  const elm = SVG.add('g', SVG.guiElm, {\n    class: 'eraser',\n    transform: `${SVG.positionToTransform(p)} rotate(${rand(0, 360)}) `,\n  });\n  SVG.add('line', elm, { y2: 6 });\n  elm.onanimationend = () => elm.remove();\n}\n\nexport const aStrokeOrGroup = (gameObj: GameObject) =>\n  gameObj instanceof StrokeGroup || gameObj instanceof Stroke ? gameObj : null;\n"],
  "mappings": "AAAA;AACA;AACA;AAEA;AACA;AACA;AAEO,sBAAe,KAAmC;AACvD,MAAI,IAAI,gBAAgB,GAAG;AACzB,WAAO,IAAI,QAAQ,SAAS;AAAA,MAC1B,MAAM,MAAK;AACT,cAAM,KAAI,MAAM;AAEhB,cAAM,MAAM,KAAI,KAAK,QAAQ;AAAA,UAC3B,MAAM,KAAI,WAAW,SAAS,cAAc;AAAA,UAC5C,MAAM,KAAI,MAAM;AAAA,UAChB,QAAQ;AAAA;AAGV,mBAAW,MAAM,KAAK;AACpB,aAAG;AACH,cAAI,GAAG,MAAM,GAAG;AACd,eAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQf,eAAe,GAAa;AAC1B,QAAM,MAAM,IAAI,IAAI,KAAK,IAAI,QAAQ;AAAA,IACnC,OAAO;AAAA,IACP,WAAW,GAAG,IAAI,oBAAoB,aAAa,KAAK,GAAG;AAAA;AAE7D,MAAI,IAAI,QAAQ,KAAK,CAAE,IAAI;AAC3B,MAAI,iBAAiB,MAAM,IAAI;AAAA;AAG1B,aAAM,iBAAiB,CAAC,YAC7B,mBAAmB,eAAe,mBAAmB,SAAS,UAAU;",
  "names": []
}
