{
  "version": 3,
  "sources": ["/Users/admin/Work/Inkling/InkbaseV2/src/app/gestures/CreateWire.ts"],
  "sourcesContent": ["import { aGizmo } from '../meta/Gizmo';\nimport NumberToken from '../meta/NumberToken';\nimport Token, { aPrimaryToken, aToken } from '../meta/Token';\nimport { EventContext, Gesture } from './Gesture';\nimport PropertyPickerEditor from '../meta/PropertyPickerEditor';\nimport { aComponent } from '../meta/Component';\nimport { isPropertyPicker, isTokenWithVariable } from '../meta/token-helpers';\nimport Wire from '../meta/Wire';\nimport { MetaNumber, MetaStruct } from '../meta/MetaSemantics';\nimport PropertyPicker from '../meta/PropertyPicker';\nimport Vec from '../../lib/vec';\nimport Formula from '../meta/Formula';\nimport EmptyToken from '../meta/EmptyToken';\nimport { aMetaToggle } from '../gui/MetaToggle';\n\nexport function createWire(ctx: EventContext): Gesture | void {\n  if (ctx.metaToggle.active) {\n    // If the touch begins on the Meta Toggle, don't create a wire\n    if (\n      ctx.root.find({\n        what: aMetaToggle,\n        near: ctx.event.position,\n        recursive: false,\n        tooFar: 35,\n      })\n    ) {\n      return;\n    }\n\n    // Rebind for concision\n    const find = ctx.page.find.bind(ctx.page);\n    const near = ctx.event.position;\n\n    const primaryToken = find({ what: aPrimaryToken, near, recursive: true });\n    const component = find({ what: aComponent, near, recursive: false });\n    const token = find({ what: aToken, near, recursive: false });\n    const gizmo = find({\n      what: aGizmo,\n      that: g => g.centerDistanceToPoint(ctx.event.position) < 30,\n    });\n\n    const wire: Wire = ctx.page.adopt(new Wire());\n\n    if (isTokenWithVariable(primaryToken)) {\n      wire.attachFront(primaryToken.wirePort);\n    } else if (component) {\n      wire.attachFront(component.getWirePortNear(ctx.event.position));\n    } else if (isPropertyPicker(token)) {\n      wire.attachFront(token.wirePort);\n    } else if (gizmo) {\n      wire.attachFront(gizmo.wirePort);\n    } else {\n      // For now, we disallow wiring from empty space\n      return;\n      // wire.points = [{ ...ctx.event.position }, { ...ctx.event.position }];\n    }\n\n    return new Gesture('Create Wire', {\n      moved(ctx) {\n        wire.points[1] = ctx.event.position;\n      },\n      ended(ctx) {\n        const near = ctx.event.position;\n        const primaryToken = find({ what: aPrimaryToken, near });\n        const gizmo = find({ what: aGizmo, near });\n\n        // If you tapped something and didn't perform a drag, don't create anything\n        // if ((primaryToken || component || token || gizmo) && !ctx.state.drag) {\n        //   wire.remove();\n        //   return;\n        // }\n\n        // Instantiate a formula\n        if (wire.isCollapsable()) {\n          console.log(wire);\n          if (wire.a && wire.a.deref()) {\n            const token = wire.a.deref()?.parent; // Find the token\n\n            if (token instanceof Formula) {\n              // TODO: not a reachable path\n              token.edit();\n            } else if (token?.parent instanceof Formula) {\n              token.parent.edit();\n            } else if (token instanceof Token) {\n              const formula = Formula.createFromContext(ctx, token);\n              formula.position = Vec.sub(token.position, Vec(-3, -3));\n              formula.edit();\n            }\n          } else {\n            Formula.createFromContext(ctx);\n          }\n          wire.remove();\n        } else if (isTokenWithVariable(primaryToken)) {\n          wire.attachEnd(primaryToken.wirePort);\n          if (wire.a === null) {\n            const n = ctx.page.adopt(new NumberToken());\n            n.variable.value = primaryToken.getVariable().value;\n            wire.attachFront(n.wirePort);\n            // Force a render, which computes the token width\n            n.render(0, 0);\n            // Position the token so that it's centered on the pencil\n            n.position = Vec.sub(\n              wire.points[0],\n              Vec(n.width / 2, n.height / 2)\n            );\n            // Re-add the wire, so it renders after the token (avoids a flicker)\n            ctx.page.adopt(wire);\n          }\n        } else if (gizmo) {\n          wire.attachEnd(gizmo.wirePort);\n        } else if (primaryToken instanceof EmptyToken) {\n          // Wire into a formula field\n          if (wire.a?.deref()?.value instanceof MetaStruct) {\n            const p = ctx.page.adopt(new PropertyPicker());\n            p.position = ctx.event.position;\n            (primaryToken.parent as Formula).insertInto(primaryToken, p);\n            wire.attachEnd(p.inputPort);\n            ctx.page.adopt(new PropertyPickerEditor(p));\n          } else {\n            const n = new NumberToken();\n            (primaryToken.parent as Formula).insertInto(primaryToken, n);\n            wire.attachEnd(n.wirePort);\n            n.editValue = (\n              wire.a?.deref()?.value as MetaNumber\n            ).variable.value.toFixed();\n          }\n        } else if (wire.a?.deref()?.value instanceof MetaStruct) {\n          const p = ctx.page.adopt(new PropertyPicker());\n          p.position = ctx.event.position;\n          wire.attachEnd(p.inputPort);\n          ctx.page.adopt(new PropertyPickerEditor(p));\n        } else {\n          if (!wire.a) {\n            // TODO: In lieu of a seed, let's just do nothing for now\n            wire.remove();\n          } else {\n            const n = ctx.page.adopt(new NumberToken());\n            wire.attachEnd(n.wirePort);\n            // Force a render, which computes the token width\n            n.render(0, 0);\n            // Position the token so that it's centered on the pencil\n            n.position = Vec.sub(\n              ctx.event.position,\n              Vec(n.width / 2, n.height / 2)\n            );\n            // Re-add the wire, so it renders after the token (avoids a flicker)\n            ctx.page.adopt(wire);\n          }\n        }\n      },\n    });\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
