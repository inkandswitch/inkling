{
  "version": 3,
  "sources": ["/Users/admin/Work/Inkling/InkbaseV2/src/app/VarMover.ts"],
  "sourcesContent": ["import { Variable } from './constraints';\n\ninterface Move {\n  variable: Variable;\n  unlockWhenDone: boolean;\n  initialValue: number;\n  finalValue: number;\n  durationSeconds: number;\n  easeFn: (t: number) => number;\n  initialTime: number;\n  done: boolean;\n}\n\nlet moves: Move[] = [];\n\nfunction move(\n  variable: Variable,\n  finalValue: number,\n  durationSeconds: number,\n  easeFn: (t: number) => number = t => t\n) {\n  // cancel any moves that are already in progress and affect this variable\n  moves = moves.filter(\n    move => move.variable.canonicalInstance !== variable.canonicalInstance\n  );\n\n  moves.push({\n    variable,\n    unlockWhenDone: !variable.isLocked,\n    initialValue: variable.value,\n    finalValue,\n    durationSeconds,\n    easeFn,\n    initialTime: 0,\n    done: false,\n  });\n}\n\nfunction update(dt: number, t: number) {\n  for (const move of moves) {\n    const {\n      variable,\n      unlockWhenDone,\n      initialValue,\n      finalValue,\n      durationSeconds,\n      easeFn,\n      done,\n    } = move;\n\n    if (done) {\n      if (unlockWhenDone) {\n        variable.unlock();\n      }\n      moves.splice(moves.indexOf(move), 1);\n      continue;\n    }\n\n    if (move.initialTime === 0) {\n      move.initialTime = t;\n    }\n    const t0 = move.initialTime;\n\n    const pct = Math.min((t - t0) / durationSeconds, 1);\n    variable.lock(initialValue + (finalValue - initialValue) * easeFn(pct));\n\n    if (pct === 1) {\n      move.done = true;\n    }\n  }\n}\n\nexport default {\n  move,\n  update,\n};\n"],
  "mappings": "AAaA,IAAI,QAAgB;AAEpB,cACE,UACA,YACA,iBACA,SAAgC,OAAK,GACrC;AAEA,UAAQ,MAAM,OACZ,WAAQ,MAAK,SAAS,sBAAsB,SAAS;AAGvD,QAAM,KAAK;AAAA,IACT;AAAA,IACA,gBAAgB,CAAC,SAAS;AAAA,IAC1B,cAAc,SAAS;AAAA,IACvB;AAAA,IACA;AAAA,IACA;AAAA,IACA,aAAa;AAAA,IACb,MAAM;AAAA;AAAA;AAIV,gBAAgB,IAAY,GAAW;AACrC,aAAW,SAAQ,OAAO;AACxB,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,QACE;AAEJ,QAAI,MAAM;AACR,UAAI,gBAAgB;AAClB,iBAAS;AAAA;AAEX,YAAM,OAAO,MAAM,QAAQ,QAAO;AAClC;AAAA;AAGF,QAAI,MAAK,gBAAgB,GAAG;AAC1B,YAAK,cAAc;AAAA;AAErB,UAAM,KAAK,MAAK;AAEhB,UAAM,MAAM,KAAK,IAAK,KAAI,MAAM,iBAAiB;AACjD,aAAS,KAAK,eAAgB,cAAa,gBAAgB,OAAO;AAElE,QAAI,QAAQ,GAAG;AACb,YAAK,OAAO;AAAA;AAAA;AAAA;AAKlB,eAAe;AAAA,EACb;AAAA,EACA;AAAA;",
  "names": []
}
