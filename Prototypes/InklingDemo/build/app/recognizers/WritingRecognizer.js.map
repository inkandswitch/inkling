{
  "version": 3,
  "sources": ["/Users/admin/Work/Inkling/InkbaseV2/src/app/recognizers/WritingRecognizer.ts"],
  "sourcesContent": ["import { Position } from '../../lib/types';\n\nimport QDollarRecognizer from '../../lib/qdollar';\nimport WritingRecognizerChars from './WritingRecognizerChars';\nimport Vec from '../../lib/vec';\n\nexport default class WritingRecognizer {\n  //@ts-ignore\n  qdollar: any = new QDollarRecognizer();\n\n  constructor() {\n    WritingRecognizerChars.forEach(gesture => {\n      this.qdollar.AddGestureLoad(gesture.name, gesture.strokes);\n    });\n  }\n\n  recognize(strokes: Array<Array<Position>>) {\n    const r = this.qdollar.RecognizeStrokes(strokes);\n\n    const isNumeric =\n      ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'].indexOf(r.Name) > -1;\n\n    r.isNumeric = isNumeric;\n\n    return r;\n  }\n\n  addGesture(name: string, strokes: Array<Array<Position>>) {\n    this.qdollar.AddGestureStrokes(name, strokes);\n\n    // Normalize and store gestures\n    let gesture = {\n      name,\n      strokes: strokes.map(points => {\n        return points.map(pt => {\n          return { x: pt.x, y: pt.y };\n        });\n      }),\n    };\n\n    // Normallize Points\n    let total = gesture.strokes.reduce(\n      (acc, st) => {\n        return Vec.add(\n          st.reduce((acc, v) => Vec.add(acc, v), Vec(0, 0)),\n          acc\n        );\n      },\n      Vec(0, 0)\n    );\n    let totalLen = gesture.strokes.reduce((acc, st) => acc + st.length, 0);\n    let midPoint = Vec.divS(total, totalLen);\n\n    gesture.strokes = gesture.strokes.map(st => {\n      return st.map(pt => Vec.sub(pt, midPoint));\n    });\n\n    // Add to chars\n    WritingRecognizerChars.push(gesture);\n  }\n\n  printGestures() {\n    console.log(JSON.stringify(WritingRecognizerChars));\n  }\n}\n"],
  "mappings": "AAEA;AACA;AACA;AAEA,uCAAuC;AAAA,EAIrC,cAAc;AAFd,mBAAe,IAAI;AAGjB,2BAAuB,QAAQ,aAAW;AACxC,WAAK,QAAQ,eAAe,QAAQ,MAAM,QAAQ;AAAA;AAAA;AAAA,EAItD,UAAU,SAAiC;AACzC,UAAM,IAAI,KAAK,QAAQ,iBAAiB;AAExC,UAAM,YACJ,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,QAAQ,EAAE,QAAQ;AAEvE,MAAE,YAAY;AAEd,WAAO;AAAA;AAAA,EAGT,WAAW,MAAc,SAAiC;AACxD,SAAK,QAAQ,kBAAkB,MAAM;AAGrC,QAAI,UAAU;AAAA,MACZ;AAAA,MACA,SAAS,QAAQ,IAAI,YAAU;AAC7B,eAAO,OAAO,IAAI,QAAM;AACtB,iBAAO,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG;AAAA;AAAA;AAAA;AAM9B,QAAI,QAAQ,QAAQ,QAAQ,OAC1B,CAAC,KAAK,OAAO;AACX,aAAO,IAAI,IACT,GAAG,OAAO,CAAC,MAAK,MAAM,IAAI,IAAI,MAAK,IAAI,IAAI,GAAG,KAC9C;AAAA,OAGJ,IAAI,GAAG;AAET,QAAI,WAAW,QAAQ,QAAQ,OAAO,CAAC,KAAK,OAAO,MAAM,GAAG,QAAQ;AACpE,QAAI,WAAW,IAAI,KAAK,OAAO;AAE/B,YAAQ,UAAU,QAAQ,QAAQ,IAAI,QAAM;AAC1C,aAAO,GAAG,IAAI,QAAM,IAAI,IAAI,IAAI;AAAA;AAIlC,2BAAuB,KAAK;AAAA;AAAA,EAG9B,gBAAgB;AACd,YAAQ,IAAI,KAAK,UAAU;AAAA;AAAA;",
  "names": []
}
