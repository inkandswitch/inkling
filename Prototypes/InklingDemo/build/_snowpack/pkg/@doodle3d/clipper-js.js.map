{"version":3,"file":"clipper-js.js","sources":["../../../../node_modules/@doodle3d/clipper-lib/clipper.js","../../../../node_modules/@doodle3d/clipper-js/module/index.js"],"sourcesContent":["/*******************************************************************************\n *                                                                              *\n * Author    :  Angus Johnson                                                   *\n * Version   :  6.4.2                                                           *\n * Date      :  27 February 2017                                                *\n * Website   :  http://www.angusj.com                                           *\n * Copyright :  Angus Johnson 2010-2017                                         *\n *                                                                              *\n * License:                                                                     *\n * Use, modification & distribution is subject to Boost Software License Ver 1. *\n * http://www.boost.org/LICENSE_1_0.txt                                         *\n *                                                                              *\n * Attributions:                                                                *\n * The code in this library is an extension of Bala Vatti's clipping algorithm: *\n * \"A generic solution to polygon clipping\"                                     *\n * Communications of the ACM, Vol 35, Issue 7 (July 1992) pp 56-63.             *\n * http://portal.acm.org/citation.cfm?id=129906                                 *\n *                                                                              *\n * Computer graphics and geometric modeling: implementation and algorithms      *\n * By Max K. Agoston                                                            *\n * Springer; 1 edition (January 4, 2005)                                        *\n * http://books.google.com/books?q=vatti+clipping+agoston                       *\n *                                                                              *\n * See also:                                                                    *\n * \"Polygon Offsetting by Computing Winding Numbers\"                            *\n * Paper no. DETC2005-85513 pp. 565-575                                         *\n * ASME 2005 International Design Engineering Technical Conferences             *\n * and Computers and Information in Engineering Conference (IDETC/CIE2005)      *\n * September 24-28, 2005 , Long Beach, California, USA                          *\n * http://www.me.berkeley.edu/~mcmains/pubs/DAC05OffsetPolygon.pdf              *\n *                                                                              *\n *******************************************************************************/\n/*******************************************************************************\n *                                                                              *\n * Author    :  Timo                                                            *\n * Version   :  6.4.2.2                                                         *\n * Date      :  8 September 2017                                                 *\n *                                                                              *\n * This is a translation of the C# Clipper library to Javascript.               *\n * Int128 struct of C# is implemented using JSBN of Tom Wu.                     *\n * Because Javascript lacks support for 64-bit integers, the space              *\n * is a little more restricted than in C# version.                              *\n *                                                                              *\n * C# version has support for coordinate space:                                 *\n * +-4611686018427387903 ( sqrt(2^127 -1)/2 )                                   *\n * while Javascript version has support for space:                              *\n * +-4503599627370495 ( sqrt(2^106 -1)/2 )                                      *\n *                                                                              *\n * Tom Wu's JSBN proved to be the fastest big integer library:                  *\n * http://jsperf.com/big-integer-library-test                                   *\n *                                                                              *\n * This class can be made simpler when (if ever) 64-bit integer support comes   *\n * or floating point Clipper is released.                                       *\n *                                                                              *\n *******************************************************************************/\n/*******************************************************************************\n *                                                                              *\n * Basic JavaScript BN library - subset useful for RSA encryption.              *\n * http://www-cs-students.stanford.edu/~tjw/jsbn/                               *\n * Copyright (c) 2005  Tom Wu                                                   *\n * All Rights Reserved.                                                         *\n * See \"LICENSE\" for details:                                                   *\n * http://www-cs-students.stanford.edu/~tjw/jsbn/LICENSE                        *\n *                                                                              *\n *******************************************************************************/\n(function ()\n{\n\t\"use strict\";\n\tvar ClipperLib = {};\n\tClipperLib.version = '6.4.2.2';\n\n\t//UseLines: Enables open path clipping. Adds a very minor cost to performance.\n\tClipperLib.use_lines = true;\n\n\t//ClipperLib.use_xyz: adds a Z member to IntPoint. Adds a minor cost to performance.\n\tClipperLib.use_xyz = false;\n\n\tvar isNode = false;\n\tif (typeof module !== 'undefined' && module.exports)\n\t{\n\t\tmodule.exports = ClipperLib;\n\t\tisNode = true;\n\t}\n\telse\n\t{\n\t\tif (typeof (document) !== \"undefined\") window.ClipperLib = ClipperLib;\n\t\telse self['ClipperLib'] = ClipperLib;\n\t}\n\tvar navigator_appName;\n\tif (!isNode)\n\t{\n\t\tvar nav = navigator.userAgent.toString().toLowerCase();\n\t\tnavigator_appName = navigator.appName;\n\t}\n\telse\n\t{\n\t\tvar nav = \"chrome\"; // Node.js uses Chrome's V8 engine\n\t\tnavigator_appName = \"Netscape\"; // Firefox, Chrome and Safari returns \"Netscape\", so Node.js should also\n\t}\n\t// Browser test to speedup performance critical functions\n\tvar browser = {};\n\n\tif (nav.indexOf(\"chrome\") != -1 && nav.indexOf(\"chromium\") == -1) browser.chrome = 1;\n\telse browser.chrome = 0;\n\tif (nav.indexOf(\"chromium\") != -1) browser.chromium = 1;\n\telse browser.chromium = 0;\n\tif (nav.indexOf(\"safari\") != -1 && nav.indexOf(\"chrome\") == -1 && nav.indexOf(\"chromium\") == -1) browser.safari = 1;\n\telse browser.safari = 0;\n\tif (nav.indexOf(\"firefox\") != -1) browser.firefox = 1;\n\telse browser.firefox = 0;\n\tif (nav.indexOf(\"firefox/17\") != -1) browser.firefox17 = 1;\n\telse browser.firefox17 = 0;\n\tif (nav.indexOf(\"firefox/15\") != -1) browser.firefox15 = 1;\n\telse browser.firefox15 = 0;\n\tif (nav.indexOf(\"firefox/3\") != -1) browser.firefox3 = 1;\n\telse browser.firefox3 = 0;\n\tif (nav.indexOf(\"opera\") != -1) browser.opera = 1;\n\telse browser.opera = 0;\n\tif (nav.indexOf(\"msie 10\") != -1) browser.msie10 = 1;\n\telse browser.msie10 = 0;\n\tif (nav.indexOf(\"msie 9\") != -1) browser.msie9 = 1;\n\telse browser.msie9 = 0;\n\tif (nav.indexOf(\"msie 8\") != -1) browser.msie8 = 1;\n\telse browser.msie8 = 0;\n\tif (nav.indexOf(\"msie 7\") != -1) browser.msie7 = 1;\n\telse browser.msie7 = 0;\n\tif (nav.indexOf(\"msie \") != -1) browser.msie = 1;\n\telse browser.msie = 0;\n\tClipperLib.biginteger_used = null;\n\n\t// Copyright (c) 2005  Tom Wu\n\t// All Rights Reserved.\n\t// See \"LICENSE\" for details.\n\t// Basic JavaScript BN library - subset useful for RSA encryption.\n\t// Bits per digit\n\tvar dbits;\n\t// JavaScript engine analysis\n\tvar canary = 0xdeadbeefcafe;\n\tvar j_lm = ((canary & 0xffffff) == 0xefcafe);\n\t// (public) Constructor\n\t/**\n\t* @constructor\n\t*/\n\tfunction BigInteger(a, b, c)\n\t{\n\t\t// This test variable can be removed,\n\t\t// but at least for performance tests it is useful piece of knowledge\n\t\t// This is the only ClipperLib related variable in BigInteger library\n\t\tClipperLib.biginteger_used = 1;\n\t\tif (a != null)\n\t\t\tif (\"number\" == typeof a && \"undefined\" == typeof (b)) this.fromInt(a); // faster conversion\n\t\t\telse if (\"number\" == typeof a) this.fromNumber(a, b, c);\n\t\telse if (b == null && \"string\" != typeof a) this.fromString(a, 256);\n\t\telse this.fromString(a, b);\n\t}\n\t// return new, unset BigInteger\n\tfunction nbi()\n\t{\n\t\treturn new BigInteger(null, undefined, undefined);\n\t}\n\t// am: Compute w_j += (x*this_i), propagate carries,\n\t// c is initial carry, returns final carry.\n\t// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n\t// We need to select the fastest one that works in this environment.\n\t// am1: use a single mult and divide to get the high bits,\n\t// max digit bits should be 26 because\n\t// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\n\tfunction am1(i, x, w, j, c, n)\n\t{\n\t\twhile (--n >= 0)\n\t\t{\n\t\t\tvar v = x * this[i++] + w[j] + c;\n\t\t\tc = Math.floor(v / 0x4000000);\n\t\t\tw[j++] = v & 0x3ffffff;\n\t\t}\n\t\treturn c;\n\t}\n\t// am2 avoids a big mult-and-extract completely.\n\t// Max digit bits should be <= 30 because we do bitwise ops\n\t// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\n\tfunction am2(i, x, w, j, c, n)\n\t{\n\t\tvar xl = x & 0x7fff,\n\t\t\txh = x >> 15;\n\t\twhile (--n >= 0)\n\t\t{\n\t\t\tvar l = this[i] & 0x7fff;\n\t\t\tvar h = this[i++] >> 15;\n\t\t\tvar m = xh * l + h * xl;\n\t\t\tl = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\n\t\t\tc = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n\t\t\tw[j++] = l & 0x3fffffff;\n\t\t}\n\t\treturn c;\n\t}\n\t// Alternately, set max digit bits to 28 since some\n\t// browsers slow down when dealing with 32-bit numbers.\n\tfunction am3(i, x, w, j, c, n)\n\t{\n\t\tvar xl = x & 0x3fff,\n\t\t\txh = x >> 14;\n\t\twhile (--n >= 0)\n\t\t{\n\t\t\tvar l = this[i] & 0x3fff;\n\t\t\tvar h = this[i++] >> 14;\n\t\t\tvar m = xh * l + h * xl;\n\t\t\tl = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\n\t\t\tc = (l >> 28) + (m >> 14) + xh * h;\n\t\t\tw[j++] = l & 0xfffffff;\n\t\t}\n\t\treturn c;\n\t}\n\tif (j_lm && (navigator_appName == \"Microsoft Internet Explorer\"))\n\t{\n\t\tBigInteger.prototype.am = am2;\n\t\tdbits = 30;\n\t}\n\telse if (j_lm && (navigator_appName != \"Netscape\"))\n\t{\n\t\tBigInteger.prototype.am = am1;\n\t\tdbits = 26;\n\t}\n\telse\n\t{ // Mozilla/Netscape seems to prefer am3\n\t\tBigInteger.prototype.am = am3;\n\t\tdbits = 28;\n\t}\n\tBigInteger.prototype.DB = dbits;\n\tBigInteger.prototype.DM = ((1 << dbits) - 1);\n\tBigInteger.prototype.DV = (1 << dbits);\n\tvar BI_FP = 52;\n\tBigInteger.prototype.FV = Math.pow(2, BI_FP);\n\tBigInteger.prototype.F1 = BI_FP - dbits;\n\tBigInteger.prototype.F2 = 2 * dbits - BI_FP;\n\t// Digit conversions\n\tvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n\tvar BI_RC = new Array();\n\tvar rr, vv;\n\trr = \"0\".charCodeAt(0);\n\tfor (vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\n\trr = \"a\".charCodeAt(0);\n\tfor (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\trr = \"A\".charCodeAt(0);\n\tfor (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\n\tfunction int2char(n)\n\t{\n\t\treturn BI_RM.charAt(n);\n\t}\n\n\tfunction intAt(s, i)\n\t{\n\t\tvar c = BI_RC[s.charCodeAt(i)];\n\t\treturn (c == null) ? -1 : c;\n\t}\n\t// (protected) copy this to r\n\tfunction bnpCopyTo(r)\n\t{\n\t\tfor (var i = this.t - 1; i >= 0; --i) r[i] = this[i];\n\t\tr.t = this.t;\n\t\tr.s = this.s;\n\t}\n\t// (protected) set from integer value x, -DV <= x < DV\n\tfunction bnpFromInt(x)\n\t{\n\t\tthis.t = 1;\n\t\tthis.s = (x < 0) ? -1 : 0;\n\t\tif (x > 0) this[0] = x;\n\t\telse if (x < -1) this[0] = x + this.DV;\n\t\telse this.t = 0;\n\t}\n\t// return bigint initialized to value\n\tfunction nbv(i)\n\t{\n\t\tvar r = nbi();\n\t\tr.fromInt(i);\n\t\treturn r;\n\t}\n\t// (protected) set from string and radix\n\tfunction bnpFromString(s, b)\n\t{\n\t\tvar k;\n\t\tif (b == 16) k = 4;\n\t\telse if (b == 8) k = 3;\n\t\telse if (b == 256) k = 8; // byte array\n\t\telse if (b == 2) k = 1;\n\t\telse if (b == 32) k = 5;\n\t\telse if (b == 4) k = 2;\n\t\telse\n\t\t{\n\t\t\tthis.fromRadix(s, b);\n\t\t\treturn;\n\t\t}\n\t\tthis.t = 0;\n\t\tthis.s = 0;\n\t\tvar i = s.length,\n\t\t\tmi = false,\n\t\t\tsh = 0;\n\t\twhile (--i >= 0)\n\t\t{\n\t\t\tvar x = (k == 8) ? s[i] & 0xff : intAt(s, i);\n\t\t\tif (x < 0)\n\t\t\t{\n\t\t\t\tif (s.charAt(i) == \"-\") mi = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tmi = false;\n\t\t\tif (sh == 0)\n\t\t\t\tthis[this.t++] = x;\n\t\t\telse if (sh + k > this.DB)\n\t\t\t{\n\t\t\t\tthis[this.t - 1] |= (x & ((1 << (this.DB - sh)) - 1)) << sh;\n\t\t\t\tthis[this.t++] = (x >> (this.DB - sh));\n\t\t\t}\n\t\t\telse\n\t\t\t\tthis[this.t - 1] |= x << sh;\n\t\t\tsh += k;\n\t\t\tif (sh >= this.DB) sh -= this.DB;\n\t\t}\n\t\tif (k == 8 && (s[0] & 0x80) != 0)\n\t\t{\n\t\t\tthis.s = -1;\n\t\t\tif (sh > 0) this[this.t - 1] |= ((1 << (this.DB - sh)) - 1) << sh;\n\t\t}\n\t\tthis.clamp();\n\t\tif (mi) BigInteger.ZERO.subTo(this, this);\n\t}\n\t// (protected) clamp off excess high words\n\tfunction bnpClamp()\n\t{\n\t\tvar c = this.s & this.DM;\n\t\twhile (this.t > 0 && this[this.t - 1] == c) --this.t;\n\t}\n\t// (public) return string representation in given radix\n\tfunction bnToString(b)\n\t{\n\t\tif (this.s < 0) return \"-\" + this.negate().toString(b);\n\t\tvar k;\n\t\tif (b == 16) k = 4;\n\t\telse if (b == 8) k = 3;\n\t\telse if (b == 2) k = 1;\n\t\telse if (b == 32) k = 5;\n\t\telse if (b == 4) k = 2;\n\t\telse return this.toRadix(b);\n\t\tvar km = (1 << k) - 1,\n\t\t\td, m = false,\n\t\t\tr = \"\",\n\t\t\ti = this.t;\n\t\tvar p = this.DB - (i * this.DB) % k;\n\t\tif (i-- > 0)\n\t\t{\n\t\t\tif (p < this.DB && (d = this[i] >> p) > 0)\n\t\t\t{\n\t\t\t\tm = true;\n\t\t\t\tr = int2char(d);\n\t\t\t}\n\t\t\twhile (i >= 0)\n\t\t\t{\n\t\t\t\tif (p < k)\n\t\t\t\t{\n\t\t\t\t\td = (this[i] & ((1 << p) - 1)) << (k - p);\n\t\t\t\t\td |= this[--i] >> (p += this.DB - k);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\td = (this[i] >> (p -= k)) & km;\n\t\t\t\t\tif (p <= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tp += this.DB;\n\t\t\t\t\t\t--i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (d > 0) m = true;\n\t\t\t\tif (m) r += int2char(d);\n\t\t\t}\n\t\t}\n\t\treturn m ? r : \"0\";\n\t}\n\t// (public) -this\n\tfunction bnNegate()\n\t{\n\t\tvar r = nbi();\n\t\tBigInteger.ZERO.subTo(this, r);\n\t\treturn r;\n\t}\n\t// (public) |this|\n\tfunction bnAbs()\n\t{\n\t\treturn (this.s < 0) ? this.negate() : this;\n\t}\n\t// (public) return + if this > a, - if this < a, 0 if equal\n\tfunction bnCompareTo(a)\n\t{\n\t\tvar r = this.s - a.s;\n\t\tif (r != 0) return r;\n\t\tvar i = this.t;\n\t\tr = i - a.t;\n\t\tif (r != 0) return (this.s < 0) ? -r : r;\n\t\twhile (--i >= 0)\n\t\t\tif ((r = this[i] - a[i]) != 0) return r;\n\t\treturn 0;\n\t}\n\t// returns bit length of the integer x\n\tfunction nbits(x)\n\t{\n\t\tvar r = 1,\n\t\t\tt;\n\t\tif ((t = x >>> 16) != 0)\n\t\t{\n\t\t\tx = t;\n\t\t\tr += 16;\n\t\t}\n\t\tif ((t = x >> 8) != 0)\n\t\t{\n\t\t\tx = t;\n\t\t\tr += 8;\n\t\t}\n\t\tif ((t = x >> 4) != 0)\n\t\t{\n\t\t\tx = t;\n\t\t\tr += 4;\n\t\t}\n\t\tif ((t = x >> 2) != 0)\n\t\t{\n\t\t\tx = t;\n\t\t\tr += 2;\n\t\t}\n\t\tif ((t = x >> 1) != 0)\n\t\t{\n\t\t\tx = t;\n\t\t\tr += 1;\n\t\t}\n\t\treturn r;\n\t}\n\t// (public) return the number of bits in \"this\"\n\tfunction bnBitLength()\n\t{\n\t\tif (this.t <= 0) return 0;\n\t\treturn this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ (this.s & this.DM));\n\t}\n\t// (protected) r = this << n*DB\n\tfunction bnpDLShiftTo(n, r)\n\t{\n\t\tvar i;\n\t\tfor (i = this.t - 1; i >= 0; --i) r[i + n] = this[i];\n\t\tfor (i = n - 1; i >= 0; --i) r[i] = 0;\n\t\tr.t = this.t + n;\n\t\tr.s = this.s;\n\t}\n\t// (protected) r = this >> n*DB\n\tfunction bnpDRShiftTo(n, r)\n\t{\n\t\tfor (var i = n; i < this.t; ++i) r[i - n] = this[i];\n\t\tr.t = Math.max(this.t - n, 0);\n\t\tr.s = this.s;\n\t}\n\t// (protected) r = this << n\n\tfunction bnpLShiftTo(n, r)\n\t{\n\t\tvar bs = n % this.DB;\n\t\tvar cbs = this.DB - bs;\n\t\tvar bm = (1 << cbs) - 1;\n\t\tvar ds = Math.floor(n / this.DB),\n\t\t\tc = (this.s << bs) & this.DM,\n\t\t\ti;\n\t\tfor (i = this.t - 1; i >= 0; --i)\n\t\t{\n\t\t\tr[i + ds + 1] = (this[i] >> cbs) | c;\n\t\t\tc = (this[i] & bm) << bs;\n\t\t}\n\t\tfor (i = ds - 1; i >= 0; --i) r[i] = 0;\n\t\tr[ds] = c;\n\t\tr.t = this.t + ds + 1;\n\t\tr.s = this.s;\n\t\tr.clamp();\n\t}\n\t// (protected) r = this >> n\n\tfunction bnpRShiftTo(n, r)\n\t{\n\t\tr.s = this.s;\n\t\tvar ds = Math.floor(n / this.DB);\n\t\tif (ds >= this.t)\n\t\t{\n\t\t\tr.t = 0;\n\t\t\treturn;\n\t\t}\n\t\tvar bs = n % this.DB;\n\t\tvar cbs = this.DB - bs;\n\t\tvar bm = (1 << bs) - 1;\n\t\tr[0] = this[ds] >> bs;\n\t\tfor (var i = ds + 1; i < this.t; ++i)\n\t\t{\n\t\t\tr[i - ds - 1] |= (this[i] & bm) << cbs;\n\t\t\tr[i - ds] = this[i] >> bs;\n\t\t}\n\t\tif (bs > 0) r[this.t - ds - 1] |= (this.s & bm) << cbs;\n\t\tr.t = this.t - ds;\n\t\tr.clamp();\n\t}\n\t// (protected) r = this - a\n\tfunction bnpSubTo(a, r)\n\t{\n\t\tvar i = 0,\n\t\t\tc = 0,\n\t\t\tm = Math.min(a.t, this.t);\n\t\twhile (i < m)\n\t\t{\n\t\t\tc += this[i] - a[i];\n\t\t\tr[i++] = c & this.DM;\n\t\t\tc >>= this.DB;\n\t\t}\n\t\tif (a.t < this.t)\n\t\t{\n\t\t\tc -= a.s;\n\t\t\twhile (i < this.t)\n\t\t\t{\n\t\t\t\tc += this[i];\n\t\t\t\tr[i++] = c & this.DM;\n\t\t\t\tc >>= this.DB;\n\t\t\t}\n\t\t\tc += this.s;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc += this.s;\n\t\t\twhile (i < a.t)\n\t\t\t{\n\t\t\t\tc -= a[i];\n\t\t\t\tr[i++] = c & this.DM;\n\t\t\t\tc >>= this.DB;\n\t\t\t}\n\t\t\tc -= a.s;\n\t\t}\n\t\tr.s = (c < 0) ? -1 : 0;\n\t\tif (c < -1) r[i++] = this.DV + c;\n\t\telse if (c > 0) r[i++] = c;\n\t\tr.t = i;\n\t\tr.clamp();\n\t}\n\t// (protected) r = this * a, r != this,a (HAC 14.12)\n\t// \"this\" should be the larger one if appropriate.\n\tfunction bnpMultiplyTo(a, r)\n\t{\n\t\tvar x = this.abs(),\n\t\t\ty = a.abs();\n\t\tvar i = x.t;\n\t\tr.t = i + y.t;\n\t\twhile (--i >= 0) r[i] = 0;\n\t\tfor (i = 0; i < y.t; ++i) r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\n\t\tr.s = 0;\n\t\tr.clamp();\n\t\tif (this.s != a.s) BigInteger.ZERO.subTo(r, r);\n\t}\n\t// (protected) r = this^2, r != this (HAC 14.16)\n\tfunction bnpSquareTo(r)\n\t{\n\t\tvar x = this.abs();\n\t\tvar i = r.t = 2 * x.t;\n\t\twhile (--i >= 0) r[i] = 0;\n\t\tfor (i = 0; i < x.t - 1; ++i)\n\t\t{\n\t\t\tvar c = x.am(i, x[i], r, 2 * i, 0, 1);\n\t\t\tif ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV)\n\t\t\t{\n\t\t\t\tr[i + x.t] -= x.DV;\n\t\t\t\tr[i + x.t + 1] = 1;\n\t\t\t}\n\t\t}\n\t\tif (r.t > 0) r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\n\t\tr.s = 0;\n\t\tr.clamp();\n\t}\n\t// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n\t// r != q, this != m.  q or r may be null.\n\tfunction bnpDivRemTo(m, q, r)\n\t{\n\t\tvar pm = m.abs();\n\t\tif (pm.t <= 0) return;\n\t\tvar pt = this.abs();\n\t\tif (pt.t < pm.t)\n\t\t{\n\t\t\tif (q != null) q.fromInt(0);\n\t\t\tif (r != null) this.copyTo(r);\n\t\t\treturn;\n\t\t}\n\t\tif (r == null) r = nbi();\n\t\tvar y = nbi(),\n\t\t\tts = this.s,\n\t\t\tms = m.s;\n\t\tvar nsh = this.DB - nbits(pm[pm.t - 1]); // normalize modulus\n\t\tif (nsh > 0)\n\t\t{\n\t\t\tpm.lShiftTo(nsh, y);\n\t\t\tpt.lShiftTo(nsh, r);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpm.copyTo(y);\n\t\t\tpt.copyTo(r);\n\t\t}\n\t\tvar ys = y.t;\n\t\tvar y0 = y[ys - 1];\n\t\tif (y0 == 0) return;\n\t\tvar yt = y0 * (1 << this.F1) + ((ys > 1) ? y[ys - 2] >> this.F2 : 0);\n\t\tvar d1 = this.FV / yt,\n\t\t\td2 = (1 << this.F1) / yt,\n\t\t\te = 1 << this.F2;\n\t\tvar i = r.t,\n\t\t\tj = i - ys,\n\t\t\tt = (q == null) ? nbi() : q;\n\t\ty.dlShiftTo(j, t);\n\t\tif (r.compareTo(t) >= 0)\n\t\t{\n\t\t\tr[r.t++] = 1;\n\t\t\tr.subTo(t, r);\n\t\t}\n\t\tBigInteger.ONE.dlShiftTo(ys, t);\n\t\tt.subTo(y, y); // \"negative\" y so we can replace sub with am later\n\t\twhile (y.t < ys) y[y.t++] = 0;\n\t\twhile (--j >= 0)\n\t\t{\n\t\t\t// Estimate quotient digit\n\t\t\tvar qd = (r[--i] == y0) ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n\t\t\tif ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd)\n\t\t\t{ // Try it out\n\t\t\t\ty.dlShiftTo(j, t);\n\t\t\t\tr.subTo(t, r);\n\t\t\t\twhile (r[i] < --qd) r.subTo(t, r);\n\t\t\t}\n\t\t}\n\t\tif (q != null)\n\t\t{\n\t\t\tr.drShiftTo(ys, q);\n\t\t\tif (ts != ms) BigInteger.ZERO.subTo(q, q);\n\t\t}\n\t\tr.t = ys;\n\t\tr.clamp();\n\t\tif (nsh > 0) r.rShiftTo(nsh, r); // Denormalize remainder\n\t\tif (ts < 0) BigInteger.ZERO.subTo(r, r);\n\t}\n\t// (public) this mod a\n\tfunction bnMod(a)\n\t{\n\t\tvar r = nbi();\n\t\tthis.abs().divRemTo(a, null, r);\n\t\tif (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r);\n\t\treturn r;\n\t}\n\t// Modular reduction using \"classic\" algorithm\n\t/**\n\t* @constructor\n\t*/\n\tfunction Classic(m)\n\t{\n\t\tthis.m = m;\n\t}\n\n\tfunction cConvert(x)\n\t{\n\t\tif (x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n\t\telse return x;\n\t}\n\n\tfunction cRevert(x)\n\t{\n\t\treturn x;\n\t}\n\n\tfunction cReduce(x)\n\t{\n\t\tx.divRemTo(this.m, null, x);\n\t}\n\n\tfunction cMulTo(x, y, r)\n\t{\n\t\tx.multiplyTo(y, r);\n\t\tthis.reduce(r);\n\t}\n\n\tfunction cSqrTo(x, r)\n\t{\n\t\tx.squareTo(r);\n\t\tthis.reduce(r);\n\t}\n\tClassic.prototype.convert = cConvert;\n\tClassic.prototype.revert = cRevert;\n\tClassic.prototype.reduce = cReduce;\n\tClassic.prototype.mulTo = cMulTo;\n\tClassic.prototype.sqrTo = cSqrTo;\n\t// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n\t// justification:\n\t//         xy == 1 (mod m)\n\t//         xy =  1+km\n\t//   xy(2-xy) = (1+km)(1-km)\n\t// x[y(2-xy)] = 1-k^2m^2\n\t// x[y(2-xy)] == 1 (mod m^2)\n\t// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n\t// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n\t// JS multiply \"overflows\" differently from C/C++, so care is needed here.\n\tfunction bnpInvDigit()\n\t{\n\t\tif (this.t < 1) return 0;\n\t\tvar x = this[0];\n\t\tif ((x & 1) == 0) return 0;\n\t\tvar y = x & 3; // y == 1/x mod 2^2\n\t\ty = (y * (2 - (x & 0xf) * y)) & 0xf; // y == 1/x mod 2^4\n\t\ty = (y * (2 - (x & 0xff) * y)) & 0xff; // y == 1/x mod 2^8\n\t\ty = (y * (2 - (((x & 0xffff) * y) & 0xffff))) & 0xffff; // y == 1/x mod 2^16\n\t\t// last step - calculate inverse mod DV directly;\n\t\t// assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n\t\ty = (y * (2 - x * y % this.DV)) % this.DV; // y == 1/x mod 2^dbits\n\t\t// we really want the negative inverse, and -DV < y < DV\n\t\treturn (y > 0) ? this.DV - y : -y;\n\t}\n\t// Montgomery reduction\n\t/**\n\t* @constructor\n\t*/\n\tfunction Montgomery(m)\n\t{\n\t\tthis.m = m;\n\t\tthis.mp = m.invDigit();\n\t\tthis.mpl = this.mp & 0x7fff;\n\t\tthis.mph = this.mp >> 15;\n\t\tthis.um = (1 << (m.DB - 15)) - 1;\n\t\tthis.mt2 = 2 * m.t;\n\t}\n\t// xR mod m\n\tfunction montConvert(x)\n\t{\n\t\tvar r = nbi();\n\t\tx.abs().dlShiftTo(this.m.t, r);\n\t\tr.divRemTo(this.m, null, r);\n\t\tif (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r);\n\t\treturn r;\n\t}\n\t// x/R mod m\n\tfunction montRevert(x)\n\t{\n\t\tvar r = nbi();\n\t\tx.copyTo(r);\n\t\tthis.reduce(r);\n\t\treturn r;\n\t}\n\t// x = x/R mod m (HAC 14.32)\n\tfunction montReduce(x)\n\t{\n\t\twhile (x.t <= this.mt2) // pad x so am has enough room later\n\t\t\tx[x.t++] = 0;\n\t\tfor (var i = 0; i < this.m.t; ++i)\n\t\t{\n\t\t\t// faster way of calculating u0 = x[i]*mp mod DV\n\t\t\tvar j = x[i] & 0x7fff;\n\t\t\tvar u0 = (j * this.mpl + (((j * this.mph + (x[i] >> 15) * this.mpl) & this.um) << 15)) & x.DM;\n\t\t\t// use am to combine the multiply-shift-add into one call\n\t\t\tj = i + this.m.t;\n\t\t\tx[j] += this.m.am(0, u0, x, i, 0, this.m.t);\n\t\t\t// propagate carry\n\t\t\twhile (x[j] >= x.DV)\n\t\t\t{\n\t\t\t\tx[j] -= x.DV;\n\t\t\t\tx[++j]++;\n\t\t\t}\n\t\t}\n\t\tx.clamp();\n\t\tx.drShiftTo(this.m.t, x);\n\t\tif (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\n\t}\n\t// r = \"x^2/R mod m\"; x != r\n\tfunction montSqrTo(x, r)\n\t{\n\t\tx.squareTo(r);\n\t\tthis.reduce(r);\n\t}\n\t// r = \"xy/R mod m\"; x,y != r\n\tfunction montMulTo(x, y, r)\n\t{\n\t\tx.multiplyTo(y, r);\n\t\tthis.reduce(r);\n\t}\n\tMontgomery.prototype.convert = montConvert;\n\tMontgomery.prototype.revert = montRevert;\n\tMontgomery.prototype.reduce = montReduce;\n\tMontgomery.prototype.mulTo = montMulTo;\n\tMontgomery.prototype.sqrTo = montSqrTo;\n\t// (protected) true iff this is even\n\tfunction bnpIsEven()\n\t{\n\t\treturn ((this.t > 0) ? (this[0] & 1) : this.s) == 0;\n\t}\n\t// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\n\tfunction bnpExp(e, z)\n\t{\n\t\tif (e > 0xffffffff || e < 1) return BigInteger.ONE;\n\t\tvar r = nbi(),\n\t\t\tr2 = nbi(),\n\t\t\tg = z.convert(this),\n\t\t\ti = nbits(e) - 1;\n\t\tg.copyTo(r);\n\t\twhile (--i >= 0)\n\t\t{\n\t\t\tz.sqrTo(r, r2);\n\t\t\tif ((e & (1 << i)) > 0) z.mulTo(r2, g, r);\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar t = r;\n\t\t\t\tr = r2;\n\t\t\t\tr2 = t;\n\t\t\t}\n\t\t}\n\t\treturn z.revert(r);\n\t}\n\t// (public) this^e % m, 0 <= e < 2^32\n\tfunction bnModPowInt(e, m)\n\t{\n\t\tvar z;\n\t\tif (e < 256 || m.isEven()) z = new Classic(m);\n\t\telse z = new Montgomery(m);\n\t\treturn this.exp(e, z);\n\t}\n\t// protected\n\tBigInteger.prototype.copyTo = bnpCopyTo;\n\tBigInteger.prototype.fromInt = bnpFromInt;\n\tBigInteger.prototype.fromString = bnpFromString;\n\tBigInteger.prototype.clamp = bnpClamp;\n\tBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\n\tBigInteger.prototype.drShiftTo = bnpDRShiftTo;\n\tBigInteger.prototype.lShiftTo = bnpLShiftTo;\n\tBigInteger.prototype.rShiftTo = bnpRShiftTo;\n\tBigInteger.prototype.subTo = bnpSubTo;\n\tBigInteger.prototype.multiplyTo = bnpMultiplyTo;\n\tBigInteger.prototype.squareTo = bnpSquareTo;\n\tBigInteger.prototype.divRemTo = bnpDivRemTo;\n\tBigInteger.prototype.invDigit = bnpInvDigit;\n\tBigInteger.prototype.isEven = bnpIsEven;\n\tBigInteger.prototype.exp = bnpExp;\n\t// public\n\tBigInteger.prototype.toString = bnToString;\n\tBigInteger.prototype.negate = bnNegate;\n\tBigInteger.prototype.abs = bnAbs;\n\tBigInteger.prototype.compareTo = bnCompareTo;\n\tBigInteger.prototype.bitLength = bnBitLength;\n\tBigInteger.prototype.mod = bnMod;\n\tBigInteger.prototype.modPowInt = bnModPowInt;\n\t// \"constants\"\n\tBigInteger.ZERO = nbv(0);\n\tBigInteger.ONE = nbv(1);\n\t// Copyright (c) 2005-2009  Tom Wu\n\t// All Rights Reserved.\n\t// See \"LICENSE\" for details.\n\t// Extended JavaScript BN functions, required for RSA private ops.\n\t// Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n\t// Version 1.2: square() API, isProbablePrime fix\n\t// (public)\n\tfunction bnClone()\n\t{\n\t\tvar r = nbi();\n\t\tthis.copyTo(r);\n\t\treturn r;\n\t}\n\t// (public) return value as integer\n\tfunction bnIntValue()\n\t{\n\t\tif (this.s < 0)\n\t\t{\n\t\t\tif (this.t == 1) return this[0] - this.DV;\n\t\t\telse if (this.t == 0) return -1;\n\t\t}\n\t\telse if (this.t == 1) return this[0];\n\t\telse if (this.t == 0) return 0;\n\t\t// assumes 16 < DB < 32\n\t\treturn ((this[1] & ((1 << (32 - this.DB)) - 1)) << this.DB) | this[0];\n\t}\n\t// (public) return value as byte\n\tfunction bnByteValue()\n\t{\n\t\treturn (this.t == 0) ? this.s : (this[0] << 24) >> 24;\n\t}\n\t// (public) return value as short (assumes DB>=16)\n\tfunction bnShortValue()\n\t{\n\t\treturn (this.t == 0) ? this.s : (this[0] << 16) >> 16;\n\t}\n\t// (protected) return x s.t. r^x < DV\n\tfunction bnpChunkSize(r)\n\t{\n\t\treturn Math.floor(Math.LN2 * this.DB / Math.log(r));\n\t}\n\t// (public) 0 if this == 0, 1 if this > 0\n\tfunction bnSigNum()\n\t{\n\t\tif (this.s < 0) return -1;\n\t\telse if (this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;\n\t\telse return 1;\n\t}\n\t// (protected) convert to radix string\n\tfunction bnpToRadix(b)\n\t{\n\t\tif (b == null) b = 10;\n\t\tif (this.signum() == 0 || b < 2 || b > 36) return \"0\";\n\t\tvar cs = this.chunkSize(b);\n\t\tvar a = Math.pow(b, cs);\n\t\tvar d = nbv(a),\n\t\t\ty = nbi(),\n\t\t\tz = nbi(),\n\t\t\tr = \"\";\n\t\tthis.divRemTo(d, y, z);\n\t\twhile (y.signum() > 0)\n\t\t{\n\t\t\tr = (a + z.intValue()).toString(b).substr(1) + r;\n\t\t\ty.divRemTo(d, y, z);\n\t\t}\n\t\treturn z.intValue().toString(b) + r;\n\t}\n\t// (protected) convert from radix string\n\tfunction bnpFromRadix(s, b)\n\t{\n\t\tthis.fromInt(0);\n\t\tif (b == null) b = 10;\n\t\tvar cs = this.chunkSize(b);\n\t\tvar d = Math.pow(b, cs),\n\t\t\tmi = false,\n\t\t\tj = 0,\n\t\t\tw = 0;\n\t\tfor (var i = 0; i < s.length; ++i)\n\t\t{\n\t\t\tvar x = intAt(s, i);\n\t\t\tif (x < 0)\n\t\t\t{\n\t\t\t\tif (s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tw = b * w + x;\n\t\t\tif (++j >= cs)\n\t\t\t{\n\t\t\t\tthis.dMultiply(d);\n\t\t\t\tthis.dAddOffset(w, 0);\n\t\t\t\tj = 0;\n\t\t\t\tw = 0;\n\t\t\t}\n\t\t}\n\t\tif (j > 0)\n\t\t{\n\t\t\tthis.dMultiply(Math.pow(b, j));\n\t\t\tthis.dAddOffset(w, 0);\n\t\t}\n\t\tif (mi) BigInteger.ZERO.subTo(this, this);\n\t}\n\t// (protected) alternate constructor\n\tfunction bnpFromNumber(a, b, c)\n\t{\n\t\tif (\"number\" == typeof b)\n\t\t{\n\t\t\t// new BigInteger(int,int,RNG)\n\t\t\tif (a < 2) this.fromInt(1);\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.fromNumber(a, c);\n\t\t\t\tif (!this.testBit(a - 1)) // force MSB set\n\t\t\t\t\tthis.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, this);\n\t\t\t\tif (this.isEven()) this.dAddOffset(1, 0); // force odd\n\t\t\t\twhile (!this.isProbablePrime(b))\n\t\t\t\t{\n\t\t\t\t\tthis.dAddOffset(2, 0);\n\t\t\t\t\tif (this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a - 1), this);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// new BigInteger(int,RNG)\n\t\t\tvar x = new Array(),\n\t\t\t\tt = a & 7;\n\t\t\tx.length = (a >> 3) + 1;\n\t\t\tb.nextBytes(x);\n\t\t\tif (t > 0) x[0] &= ((1 << t) - 1);\n\t\t\telse x[0] = 0;\n\t\t\tthis.fromString(x, 256);\n\t\t}\n\t}\n\t// (public) convert to bigendian byte array\n\tfunction bnToByteArray()\n\t{\n\t\tvar i = this.t,\n\t\t\tr = new Array();\n\t\tr[0] = this.s;\n\t\tvar p = this.DB - (i * this.DB) % 8,\n\t\t\td, k = 0;\n\t\tif (i-- > 0)\n\t\t{\n\t\t\tif (p < this.DB && (d = this[i] >> p) != (this.s & this.DM) >> p)\n\t\t\t\tr[k++] = d | (this.s << (this.DB - p));\n\t\t\twhile (i >= 0)\n\t\t\t{\n\t\t\t\tif (p < 8)\n\t\t\t\t{\n\t\t\t\t\td = (this[i] & ((1 << p) - 1)) << (8 - p);\n\t\t\t\t\td |= this[--i] >> (p += this.DB - 8);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\td = (this[i] >> (p -= 8)) & 0xff;\n\t\t\t\t\tif (p <= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tp += this.DB;\n\t\t\t\t\t\t--i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((d & 0x80) != 0) d |= -256;\n\t\t\t\tif (k == 0 && (this.s & 0x80) != (d & 0x80)) ++k;\n\t\t\t\tif (k > 0 || d != this.s) r[k++] = d;\n\t\t\t}\n\t\t}\n\t\treturn r;\n\t}\n\n\tfunction bnEquals(a)\n\t{\n\t\treturn (this.compareTo(a) == 0);\n\t}\n\n\tfunction bnMin(a)\n\t{\n\t\treturn (this.compareTo(a) < 0) ? this : a;\n\t}\n\n\tfunction bnMax(a)\n\t{\n\t\treturn (this.compareTo(a) > 0) ? this : a;\n\t}\n\t// (protected) r = this op a (bitwise)\n\tfunction bnpBitwiseTo(a, op, r)\n\t{\n\t\tvar i, f, m = Math.min(a.t, this.t);\n\t\tfor (i = 0; i < m; ++i) r[i] = op(this[i], a[i]);\n\t\tif (a.t < this.t)\n\t\t{\n\t\t\tf = a.s & this.DM;\n\t\t\tfor (i = m; i < this.t; ++i) r[i] = op(this[i], f);\n\t\t\tr.t = this.t;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tf = this.s & this.DM;\n\t\t\tfor (i = m; i < a.t; ++i) r[i] = op(f, a[i]);\n\t\t\tr.t = a.t;\n\t\t}\n\t\tr.s = op(this.s, a.s);\n\t\tr.clamp();\n\t}\n\t// (public) this & a\n\tfunction op_and(x, y)\n\t{\n\t\treturn x & y;\n\t}\n\n\tfunction bnAnd(a)\n\t{\n\t\tvar r = nbi();\n\t\tthis.bitwiseTo(a, op_and, r);\n\t\treturn r;\n\t}\n\t// (public) this | a\n\tfunction op_or(x, y)\n\t{\n\t\treturn x | y;\n\t}\n\n\tfunction bnOr(a)\n\t{\n\t\tvar r = nbi();\n\t\tthis.bitwiseTo(a, op_or, r);\n\t\treturn r;\n\t}\n\t// (public) this ^ a\n\tfunction op_xor(x, y)\n\t{\n\t\treturn x ^ y;\n\t}\n\n\tfunction bnXor(a)\n\t{\n\t\tvar r = nbi();\n\t\tthis.bitwiseTo(a, op_xor, r);\n\t\treturn r;\n\t}\n\t// (public) this & ~a\n\tfunction op_andnot(x, y)\n\t{\n\t\treturn x & ~y;\n\t}\n\n\tfunction bnAndNot(a)\n\t{\n\t\tvar r = nbi();\n\t\tthis.bitwiseTo(a, op_andnot, r);\n\t\treturn r;\n\t}\n\t// (public) ~this\n\tfunction bnNot()\n\t{\n\t\tvar r = nbi();\n\t\tfor (var i = 0; i < this.t; ++i) r[i] = this.DM & ~this[i];\n\t\tr.t = this.t;\n\t\tr.s = ~this.s;\n\t\treturn r;\n\t}\n\t// (public) this << n\n\tfunction bnShiftLeft(n)\n\t{\n\t\tvar r = nbi();\n\t\tif (n < 0) this.rShiftTo(-n, r);\n\t\telse this.lShiftTo(n, r);\n\t\treturn r;\n\t}\n\t// (public) this >> n\n\tfunction bnShiftRight(n)\n\t{\n\t\tvar r = nbi();\n\t\tif (n < 0) this.lShiftTo(-n, r);\n\t\telse this.rShiftTo(n, r);\n\t\treturn r;\n\t}\n\t// return index of lowest 1-bit in x, x < 2^31\n\tfunction lbit(x)\n\t{\n\t\tif (x == 0) return -1;\n\t\tvar r = 0;\n\t\tif ((x & 0xffff) == 0)\n\t\t{\n\t\t\tx >>= 16;\n\t\t\tr += 16;\n\t\t}\n\t\tif ((x & 0xff) == 0)\n\t\t{\n\t\t\tx >>= 8;\n\t\t\tr += 8;\n\t\t}\n\t\tif ((x & 0xf) == 0)\n\t\t{\n\t\t\tx >>= 4;\n\t\t\tr += 4;\n\t\t}\n\t\tif ((x & 3) == 0)\n\t\t{\n\t\t\tx >>= 2;\n\t\t\tr += 2;\n\t\t}\n\t\tif ((x & 1) == 0) ++r;\n\t\treturn r;\n\t}\n\t// (public) returns index of lowest 1-bit (or -1 if none)\n\tfunction bnGetLowestSetBit()\n\t{\n\t\tfor (var i = 0; i < this.t; ++i)\n\t\t\tif (this[i] != 0) return i * this.DB + lbit(this[i]);\n\t\tif (this.s < 0) return this.t * this.DB;\n\t\treturn -1;\n\t}\n\t// return number of 1 bits in x\n\tfunction cbit(x)\n\t{\n\t\tvar r = 0;\n\t\twhile (x != 0)\n\t\t{\n\t\t\tx &= x - 1;\n\t\t\t++r;\n\t\t}\n\t\treturn r;\n\t}\n\t// (public) return number of set bits\n\tfunction bnBitCount()\n\t{\n\t\tvar r = 0,\n\t\t\tx = this.s & this.DM;\n\t\tfor (var i = 0; i < this.t; ++i) r += cbit(this[i] ^ x);\n\t\treturn r;\n\t}\n\t// (public) true iff nth bit is set\n\tfunction bnTestBit(n)\n\t{\n\t\tvar j = Math.floor(n / this.DB);\n\t\tif (j >= this.t) return (this.s != 0);\n\t\treturn ((this[j] & (1 << (n % this.DB))) != 0);\n\t}\n\t// (protected) this op (1<<n)\n\tfunction bnpChangeBit(n, op)\n\t{\n\t\tvar r = BigInteger.ONE.shiftLeft(n);\n\t\tthis.bitwiseTo(r, op, r);\n\t\treturn r;\n\t}\n\t// (public) this | (1<<n)\n\tfunction bnSetBit(n)\n\t{\n\t\treturn this.changeBit(n, op_or);\n\t}\n\t// (public) this & ~(1<<n)\n\tfunction bnClearBit(n)\n\t{\n\t\treturn this.changeBit(n, op_andnot);\n\t}\n\t// (public) this ^ (1<<n)\n\tfunction bnFlipBit(n)\n\t{\n\t\treturn this.changeBit(n, op_xor);\n\t}\n\t// (protected) r = this + a\n\tfunction bnpAddTo(a, r)\n\t{\n\t\tvar i = 0,\n\t\t\tc = 0,\n\t\t\tm = Math.min(a.t, this.t);\n\t\twhile (i < m)\n\t\t{\n\t\t\tc += this[i] + a[i];\n\t\t\tr[i++] = c & this.DM;\n\t\t\tc >>= this.DB;\n\t\t}\n\t\tif (a.t < this.t)\n\t\t{\n\t\t\tc += a.s;\n\t\t\twhile (i < this.t)\n\t\t\t{\n\t\t\t\tc += this[i];\n\t\t\t\tr[i++] = c & this.DM;\n\t\t\t\tc >>= this.DB;\n\t\t\t}\n\t\t\tc += this.s;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc += this.s;\n\t\t\twhile (i < a.t)\n\t\t\t{\n\t\t\t\tc += a[i];\n\t\t\t\tr[i++] = c & this.DM;\n\t\t\t\tc >>= this.DB;\n\t\t\t}\n\t\t\tc += a.s;\n\t\t}\n\t\tr.s = (c < 0) ? -1 : 0;\n\t\tif (c > 0) r[i++] = c;\n\t\telse if (c < -1) r[i++] = this.DV + c;\n\t\tr.t = i;\n\t\tr.clamp();\n\t}\n\t// (public) this + a\n\tfunction bnAdd(a)\n\t{\n\t\tvar r = nbi();\n\t\tthis.addTo(a, r);\n\t\treturn r;\n\t}\n\t// (public) this - a\n\tfunction bnSubtract(a)\n\t{\n\t\tvar r = nbi();\n\t\tthis.subTo(a, r);\n\t\treturn r;\n\t}\n\t// (public) this * a\n\tfunction bnMultiply(a)\n\t{\n\t\tvar r = nbi();\n\t\tthis.multiplyTo(a, r);\n\t\treturn r;\n\t}\n\t// (public) this^2\n\tfunction bnSquare()\n\t{\n\t\tvar r = nbi();\n\t\tthis.squareTo(r);\n\t\treturn r;\n\t}\n\t// (public) this / a\n\tfunction bnDivide(a)\n\t{\n\t\tvar r = nbi();\n\t\tthis.divRemTo(a, r, null);\n\t\treturn r;\n\t}\n\t// (public) this % a\n\tfunction bnRemainder(a)\n\t{\n\t\tvar r = nbi();\n\t\tthis.divRemTo(a, null, r);\n\t\treturn r;\n\t}\n\t// (public) [this/a,this%a]\n\tfunction bnDivideAndRemainder(a)\n\t{\n\t\tvar q = nbi(),\n\t\t\tr = nbi();\n\t\tthis.divRemTo(a, q, r);\n\t\treturn new Array(q, r);\n\t}\n\t// (protected) this *= n, this >= 0, 1 < n < DV\n\tfunction bnpDMultiply(n)\n\t{\n\t\tthis[this.t] = this.am(0, n - 1, this, 0, 0, this.t);\n\t\t++this.t;\n\t\tthis.clamp();\n\t}\n\t// (protected) this += n << w words, this >= 0\n\tfunction bnpDAddOffset(n, w)\n\t{\n\t\tif (n == 0) return;\n\t\twhile (this.t <= w) this[this.t++] = 0;\n\t\tthis[w] += n;\n\t\twhile (this[w] >= this.DV)\n\t\t{\n\t\t\tthis[w] -= this.DV;\n\t\t\tif (++w >= this.t) this[this.t++] = 0;\n\t\t\t++this[w];\n\t\t}\n\t}\n\t// A \"null\" reducer\n\t/**\n\t* @constructor\n\t*/\n\tfunction NullExp()\n\t{}\n\n\tfunction nNop(x)\n\t{\n\t\treturn x;\n\t}\n\n\tfunction nMulTo(x, y, r)\n\t{\n\t\tx.multiplyTo(y, r);\n\t}\n\n\tfunction nSqrTo(x, r)\n\t{\n\t\tx.squareTo(r);\n\t}\n\tNullExp.prototype.convert = nNop;\n\tNullExp.prototype.revert = nNop;\n\tNullExp.prototype.mulTo = nMulTo;\n\tNullExp.prototype.sqrTo = nSqrTo;\n\t// (public) this^e\n\tfunction bnPow(e)\n\t{\n\t\treturn this.exp(e, new NullExp());\n\t}\n\t// (protected) r = lower n words of \"this * a\", a.t <= n\n\t// \"this\" should be the larger one if appropriate.\n\tfunction bnpMultiplyLowerTo(a, n, r)\n\t{\n\t\tvar i = Math.min(this.t + a.t, n);\n\t\tr.s = 0; // assumes a,this >= 0\n\t\tr.t = i;\n\t\twhile (i > 0) r[--i] = 0;\n\t\tvar j;\n\t\tfor (j = r.t - this.t; i < j; ++i) r[i + this.t] = this.am(0, a[i], r, i, 0, this.t);\n\t\tfor (j = Math.min(a.t, n); i < j; ++i) this.am(0, a[i], r, i, 0, n - i);\n\t\tr.clamp();\n\t}\n\t// (protected) r = \"this * a\" without lower n words, n > 0\n\t// \"this\" should be the larger one if appropriate.\n\tfunction bnpMultiplyUpperTo(a, n, r)\n\t{\n\t\t--n;\n\t\tvar i = r.t = this.t + a.t - n;\n\t\tr.s = 0; // assumes a,this >= 0\n\t\twhile (--i >= 0) r[i] = 0;\n\t\tfor (i = Math.max(n - this.t, 0); i < a.t; ++i)\n\t\t\tr[this.t + i - n] = this.am(n - i, a[i], r, 0, 0, this.t + i - n);\n\t\tr.clamp();\n\t\tr.drShiftTo(1, r);\n\t}\n\t// Barrett modular reduction\n\t/**\n\t* @constructor\n\t*/\n\tfunction Barrett(m)\n\t{\n\t\t// setup Barrett\n\t\tthis.r2 = nbi();\n\t\tthis.q3 = nbi();\n\t\tBigInteger.ONE.dlShiftTo(2 * m.t, this.r2);\n\t\tthis.mu = this.r2.divide(m);\n\t\tthis.m = m;\n\t}\n\n\tfunction barrettConvert(x)\n\t{\n\t\tif (x.s < 0 || x.t > 2 * this.m.t) return x.mod(this.m);\n\t\telse if (x.compareTo(this.m) < 0) return x;\n\t\telse\n\t\t{\n\t\t\tvar r = nbi();\n\t\t\tx.copyTo(r);\n\t\t\tthis.reduce(r);\n\t\t\treturn r;\n\t\t}\n\t}\n\n\tfunction barrettRevert(x)\n\t{\n\t\treturn x;\n\t}\n\t// x = x mod m (HAC 14.42)\n\tfunction barrettReduce(x)\n\t{\n\t\tx.drShiftTo(this.m.t - 1, this.r2);\n\t\tif (x.t > this.m.t + 1)\n\t\t{\n\t\t\tx.t = this.m.t + 1;\n\t\t\tx.clamp();\n\t\t}\n\t\tthis.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3);\n\t\tthis.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2);\n\t\twhile (x.compareTo(this.r2) < 0) x.dAddOffset(1, this.m.t + 1);\n\t\tx.subTo(this.r2, x);\n\t\twhile (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\n\t}\n\t// r = x^2 mod m; x != r\n\tfunction barrettSqrTo(x, r)\n\t{\n\t\tx.squareTo(r);\n\t\tthis.reduce(r);\n\t}\n\t// r = x*y mod m; x,y != r\n\tfunction barrettMulTo(x, y, r)\n\t{\n\t\tx.multiplyTo(y, r);\n\t\tthis.reduce(r);\n\t}\n\tBarrett.prototype.convert = barrettConvert;\n\tBarrett.prototype.revert = barrettRevert;\n\tBarrett.prototype.reduce = barrettReduce;\n\tBarrett.prototype.mulTo = barrettMulTo;\n\tBarrett.prototype.sqrTo = barrettSqrTo;\n\t// (public) this^e % m (HAC 14.85)\n\tfunction bnModPow(e, m)\n\t{\n\t\tvar i = e.bitLength(),\n\t\t\tk, r = nbv(1),\n\t\t\tz;\n\t\tif (i <= 0) return r;\n\t\telse if (i < 18) k = 1;\n\t\telse if (i < 48) k = 3;\n\t\telse if (i < 144) k = 4;\n\t\telse if (i < 768) k = 5;\n\t\telse k = 6;\n\t\tif (i < 8)\n\t\t\tz = new Classic(m);\n\t\telse if (m.isEven())\n\t\t\tz = new Barrett(m);\n\t\telse\n\t\t\tz = new Montgomery(m);\n\t\t// precomputation\n\t\tvar g = new Array(),\n\t\t\tn = 3,\n\t\t\tk1 = k - 1,\n\t\t\tkm = (1 << k) - 1;\n\t\tg[1] = z.convert(this);\n\t\tif (k > 1)\n\t\t{\n\t\t\tvar g2 = nbi();\n\t\t\tz.sqrTo(g[1], g2);\n\t\t\twhile (n <= km)\n\t\t\t{\n\t\t\t\tg[n] = nbi();\n\t\t\t\tz.mulTo(g2, g[n - 2], g[n]);\n\t\t\t\tn += 2;\n\t\t\t}\n\t\t}\n\t\tvar j = e.t - 1,\n\t\t\tw, is1 = true,\n\t\t\tr2 = nbi(),\n\t\t\tt;\n\t\ti = nbits(e[j]) - 1;\n\t\twhile (j >= 0)\n\t\t{\n\t\t\tif (i >= k1) w = (e[j] >> (i - k1)) & km;\n\t\t\telse\n\t\t\t{\n\t\t\t\tw = (e[j] & ((1 << (i + 1)) - 1)) << (k1 - i);\n\t\t\t\tif (j > 0) w |= e[j - 1] >> (this.DB + i - k1);\n\t\t\t}\n\t\t\tn = k;\n\t\t\twhile ((w & 1) == 0)\n\t\t\t{\n\t\t\t\tw >>= 1;\n\t\t\t\t--n;\n\t\t\t}\n\t\t\tif ((i -= n) < 0)\n\t\t\t{\n\t\t\t\ti += this.DB;\n\t\t\t\t--j;\n\t\t\t}\n\t\t\tif (is1)\n\t\t\t{ // ret == 1, don't bother squaring or multiplying it\n\t\t\t\tg[w].copyTo(r);\n\t\t\t\tis1 = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\twhile (n > 1)\n\t\t\t\t{\n\t\t\t\t\tz.sqrTo(r, r2);\n\t\t\t\t\tz.sqrTo(r2, r);\n\t\t\t\t\tn -= 2;\n\t\t\t\t}\n\t\t\t\tif (n > 0) z.sqrTo(r, r2);\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tt = r;\n\t\t\t\t\tr = r2;\n\t\t\t\t\tr2 = t;\n\t\t\t\t}\n\t\t\t\tz.mulTo(r2, g[w], r);\n\t\t\t}\n\t\t\twhile (j >= 0 && (e[j] & (1 << i)) == 0)\n\t\t\t{\n\t\t\t\tz.sqrTo(r, r2);\n\t\t\t\tt = r;\n\t\t\t\tr = r2;\n\t\t\t\tr2 = t;\n\t\t\t\tif (--i < 0)\n\t\t\t\t{\n\t\t\t\t\ti = this.DB - 1;\n\t\t\t\t\t--j;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn z.revert(r);\n\t}\n\t// (public) gcd(this,a) (HAC 14.54)\n\tfunction bnGCD(a)\n\t{\n\t\tvar x = (this.s < 0) ? this.negate() : this.clone();\n\t\tvar y = (a.s < 0) ? a.negate() : a.clone();\n\t\tif (x.compareTo(y) < 0)\n\t\t{\n\t\t\tvar t = x;\n\t\t\tx = y;\n\t\t\ty = t;\n\t\t}\n\t\tvar i = x.getLowestSetBit(),\n\t\t\tg = y.getLowestSetBit();\n\t\tif (g < 0) return x;\n\t\tif (i < g) g = i;\n\t\tif (g > 0)\n\t\t{\n\t\t\tx.rShiftTo(g, x);\n\t\t\ty.rShiftTo(g, y);\n\t\t}\n\t\twhile (x.signum() > 0)\n\t\t{\n\t\t\tif ((i = x.getLowestSetBit()) > 0) x.rShiftTo(i, x);\n\t\t\tif ((i = y.getLowestSetBit()) > 0) y.rShiftTo(i, y);\n\t\t\tif (x.compareTo(y) >= 0)\n\t\t\t{\n\t\t\t\tx.subTo(y, x);\n\t\t\t\tx.rShiftTo(1, x);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ty.subTo(x, y);\n\t\t\t\ty.rShiftTo(1, y);\n\t\t\t}\n\t\t}\n\t\tif (g > 0) y.lShiftTo(g, y);\n\t\treturn y;\n\t}\n\t// (protected) this % n, n < 2^26\n\tfunction bnpModInt(n)\n\t{\n\t\tif (n <= 0) return 0;\n\t\tvar d = this.DV % n,\n\t\t\tr = (this.s < 0) ? n - 1 : 0;\n\t\tif (this.t > 0)\n\t\t\tif (d == 0) r = this[0] % n;\n\t\t\telse\n\t\t\t\tfor (var i = this.t - 1; i >= 0; --i) r = (d * r + this[i]) % n;\n\t\treturn r;\n\t}\n\t// (public) 1/this % m (HAC 14.61)\n\tfunction bnModInverse(m)\n\t{\n\t\tvar ac = m.isEven();\n\t\tif ((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\n\t\tvar u = m.clone(),\n\t\t\tv = this.clone();\n\t\tvar a = nbv(1),\n\t\t\tb = nbv(0),\n\t\t\tc = nbv(0),\n\t\t\td = nbv(1);\n\t\twhile (u.signum() != 0)\n\t\t{\n\t\t\twhile (u.isEven())\n\t\t\t{\n\t\t\t\tu.rShiftTo(1, u);\n\t\t\t\tif (ac)\n\t\t\t\t{\n\t\t\t\t\tif (!a.isEven() || !b.isEven())\n\t\t\t\t\t{\n\t\t\t\t\t\ta.addTo(this, a);\n\t\t\t\t\t\tb.subTo(m, b);\n\t\t\t\t\t}\n\t\t\t\t\ta.rShiftTo(1, a);\n\t\t\t\t}\n\t\t\t\telse if (!b.isEven()) b.subTo(m, b);\n\t\t\t\tb.rShiftTo(1, b);\n\t\t\t}\n\t\t\twhile (v.isEven())\n\t\t\t{\n\t\t\t\tv.rShiftTo(1, v);\n\t\t\t\tif (ac)\n\t\t\t\t{\n\t\t\t\t\tif (!c.isEven() || !d.isEven())\n\t\t\t\t\t{\n\t\t\t\t\t\tc.addTo(this, c);\n\t\t\t\t\t\td.subTo(m, d);\n\t\t\t\t\t}\n\t\t\t\t\tc.rShiftTo(1, c);\n\t\t\t\t}\n\t\t\t\telse if (!d.isEven()) d.subTo(m, d);\n\t\t\t\td.rShiftTo(1, d);\n\t\t\t}\n\t\t\tif (u.compareTo(v) >= 0)\n\t\t\t{\n\t\t\t\tu.subTo(v, u);\n\t\t\t\tif (ac) a.subTo(c, a);\n\t\t\t\tb.subTo(d, b);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tv.subTo(u, v);\n\t\t\t\tif (ac) c.subTo(a, c);\n\t\t\t\td.subTo(b, d);\n\t\t\t}\n\t\t}\n\t\tif (v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\n\t\tif (d.compareTo(m) >= 0) return d.subtract(m);\n\t\tif (d.signum() < 0) d.addTo(m, d);\n\t\telse return d;\n\t\tif (d.signum() < 0) return d.add(m);\n\t\telse return d;\n\t}\n\tvar lowprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];\n\tvar lplim = (1 << 26) / lowprimes[lowprimes.length - 1];\n\t// (public) test primality with certainty >= 1-.5^t\n\tfunction bnIsProbablePrime(t)\n\t{\n\t\tvar i, x = this.abs();\n\t\tif (x.t == 1 && x[0] <= lowprimes[lowprimes.length - 1])\n\t\t{\n\t\t\tfor (i = 0; i < lowprimes.length; ++i)\n\t\t\t\tif (x[0] == lowprimes[i]) return true;\n\t\t\treturn false;\n\t\t}\n\t\tif (x.isEven()) return false;\n\t\ti = 1;\n\t\twhile (i < lowprimes.length)\n\t\t{\n\t\t\tvar m = lowprimes[i],\n\t\t\t\tj = i + 1;\n\t\t\twhile (j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n\t\t\tm = x.modInt(m);\n\t\t\twhile (i < j)\n\t\t\t\tif (m % lowprimes[i++] == 0) return false;\n\t\t}\n\t\treturn x.millerRabin(t);\n\t}\n\t// (protected) true if probably prime (HAC 4.24, Miller-Rabin)\n\tfunction bnpMillerRabin(t)\n\t{\n\t\tvar n1 = this.subtract(BigInteger.ONE);\n\t\tvar k = n1.getLowestSetBit();\n\t\tif (k <= 0) return false;\n\t\tvar r = n1.shiftRight(k);\n\t\tt = (t + 1) >> 1;\n\t\tif (t > lowprimes.length) t = lowprimes.length;\n\t\tvar a = nbi();\n\t\tfor (var i = 0; i < t; ++i)\n\t\t{\n\t\t\t//Pick bases at random, instead of starting at 2\n\t\t\ta.fromInt(lowprimes[Math.floor(Math.random() * lowprimes.length)]);\n\t\t\tvar y = a.modPow(r, this);\n\t\t\tif (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0)\n\t\t\t{\n\t\t\t\tvar j = 1;\n\t\t\t\twhile (j++ < k && y.compareTo(n1) != 0)\n\t\t\t\t{\n\t\t\t\t\ty = y.modPowInt(2, this);\n\t\t\t\t\tif (y.compareTo(BigInteger.ONE) == 0) return false;\n\t\t\t\t}\n\t\t\t\tif (y.compareTo(n1) != 0) return false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\t// protected\n\tBigInteger.prototype.chunkSize = bnpChunkSize;\n\tBigInteger.prototype.toRadix = bnpToRadix;\n\tBigInteger.prototype.fromRadix = bnpFromRadix;\n\tBigInteger.prototype.fromNumber = bnpFromNumber;\n\tBigInteger.prototype.bitwiseTo = bnpBitwiseTo;\n\tBigInteger.prototype.changeBit = bnpChangeBit;\n\tBigInteger.prototype.addTo = bnpAddTo;\n\tBigInteger.prototype.dMultiply = bnpDMultiply;\n\tBigInteger.prototype.dAddOffset = bnpDAddOffset;\n\tBigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\n\tBigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\n\tBigInteger.prototype.modInt = bnpModInt;\n\tBigInteger.prototype.millerRabin = bnpMillerRabin;\n\t// public\n\tBigInteger.prototype.clone = bnClone;\n\tBigInteger.prototype.intValue = bnIntValue;\n\tBigInteger.prototype.byteValue = bnByteValue;\n\tBigInteger.prototype.shortValue = bnShortValue;\n\tBigInteger.prototype.signum = bnSigNum;\n\tBigInteger.prototype.toByteArray = bnToByteArray;\n\tBigInteger.prototype.equals = bnEquals;\n\tBigInteger.prototype.min = bnMin;\n\tBigInteger.prototype.max = bnMax;\n\tBigInteger.prototype.and = bnAnd;\n\tBigInteger.prototype.or = bnOr;\n\tBigInteger.prototype.xor = bnXor;\n\tBigInteger.prototype.andNot = bnAndNot;\n\tBigInteger.prototype.not = bnNot;\n\tBigInteger.prototype.shiftLeft = bnShiftLeft;\n\tBigInteger.prototype.shiftRight = bnShiftRight;\n\tBigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\n\tBigInteger.prototype.bitCount = bnBitCount;\n\tBigInteger.prototype.testBit = bnTestBit;\n\tBigInteger.prototype.setBit = bnSetBit;\n\tBigInteger.prototype.clearBit = bnClearBit;\n\tBigInteger.prototype.flipBit = bnFlipBit;\n\tBigInteger.prototype.add = bnAdd;\n\tBigInteger.prototype.subtract = bnSubtract;\n\tBigInteger.prototype.multiply = bnMultiply;\n\tBigInteger.prototype.divide = bnDivide;\n\tBigInteger.prototype.remainder = bnRemainder;\n\tBigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\n\tBigInteger.prototype.modPow = bnModPow;\n\tBigInteger.prototype.modInverse = bnModInverse;\n\tBigInteger.prototype.pow = bnPow;\n\tBigInteger.prototype.gcd = bnGCD;\n\tBigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n\t// JSBN-specific extension\n\tBigInteger.prototype.square = bnSquare;\n\tvar Int128 = BigInteger;\n\t// BigInteger interfaces not implemented in jsbn:\n\t// BigInteger(int signum, byte[] magnitude)\n\t// double doubleValue()\n\t// float floatValue()\n\t// int hashCode()\n\t// long longValue()\n\t// static BigInteger valueOf(long val)\n\t// Helper functions to make BigInteger functions callable with two parameters\n\t// as in original C# Clipper\n\tInt128.prototype.IsNegative = function ()\n\t{\n\t\tif (this.compareTo(Int128.ZERO) == -1) return true;\n\t\telse return false;\n\t};\n\n\tInt128.op_Equality = function (val1, val2)\n\t{\n\t\tif (val1.compareTo(val2) == 0) return true;\n\t\telse return false;\n\t};\n\n\tInt128.op_Inequality = function (val1, val2)\n\t{\n\t\tif (val1.compareTo(val2) != 0) return true;\n\t\telse return false;\n\t};\n\n\tInt128.op_GreaterThan = function (val1, val2)\n\t{\n\t\tif (val1.compareTo(val2) > 0) return true;\n\t\telse return false;\n\t};\n\n\tInt128.op_LessThan = function (val1, val2)\n\t{\n\t\tif (val1.compareTo(val2) < 0) return true;\n\t\telse return false;\n\t};\n\n\tInt128.op_Addition = function (lhs, rhs)\n\t{\n\t\treturn new Int128(lhs, undefined, undefined).add(new Int128(rhs, undefined, undefined));\n\t};\n\n\tInt128.op_Subtraction = function (lhs, rhs)\n\t{\n\t\treturn new Int128(lhs, undefined, undefined).subtract(new Int128(rhs, undefined, undefined));\n\t};\n\n\tInt128.Int128Mul = function (lhs, rhs)\n\t{\n\t\treturn new Int128(lhs, undefined, undefined).multiply(new Int128(rhs, undefined, undefined));\n\t};\n\n\tInt128.op_Division = function (lhs, rhs)\n\t{\n\t\treturn lhs.divide(rhs);\n\t};\n\n\tInt128.prototype.ToDouble = function ()\n\t{\n\t\treturn parseFloat(this.toString()); // This could be something faster\n\t};\n\n\t// end of Int128 section\n\t/*\n\t// Uncomment the following two lines if you want to use Int128 outside ClipperLib\n\tif (typeof(document) !== \"undefined\") window.Int128 = Int128;\n\telse self.Int128 = Int128;\n\t*/\n\n\t// ---------------------------------------------\n\n\t// Here starts the actual Clipper library:\n\t// Helper function to support Inheritance in Javascript\n\tvar Inherit = function (ce, ce2)\n\t{\n\t\tvar p;\n\t\tif (typeof (Object.getOwnPropertyNames) === 'undefined')\n\t\t{\n\t\t\tfor (p in ce2.prototype)\n\t\t\t\tif (typeof (ce.prototype[p]) === 'undefined' || ce.prototype[p] === Object.prototype[p]) ce.prototype[p] = ce2.prototype[p];\n\t\t\tfor (p in ce2)\n\t\t\t\tif (typeof (ce[p]) === 'undefined') ce[p] = ce2[p];\n\t\t\tce.$baseCtor = ce2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar props = Object.getOwnPropertyNames(ce2.prototype);\n\t\t\tfor (var i = 0; i < props.length; i++)\n\t\t\t\tif (typeof (Object.getOwnPropertyDescriptor(ce.prototype, props[i])) === 'undefined') Object.defineProperty(ce.prototype, props[i], Object.getOwnPropertyDescriptor(ce2.prototype, props[i]));\n\t\t\tfor (p in ce2)\n\t\t\t\tif (typeof (ce[p]) === 'undefined') ce[p] = ce2[p];\n\t\t\tce.$baseCtor = ce2;\n\t\t}\n\t};\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.Path = function ()\n\t{\n\t\treturn [];\n\t};\n\n\tClipperLib.Path.prototype.push = Array.prototype.push;\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.Paths = function ()\n\t{\n\t\treturn []; // Was previously [[]], but caused problems when pushed\n\t};\n\n\tClipperLib.Paths.prototype.push = Array.prototype.push;\n\n\t// Preserves the calling way of original C# Clipper\n\t// Is essential due to compatibility, because DoublePoint is public class in original C# version\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.DoublePoint = function ()\n\t{\n\t\tvar a = arguments;\n\t\tthis.X = 0;\n\t\tthis.Y = 0;\n\t\t// public DoublePoint(DoublePoint dp)\n\t\t// public DoublePoint(IntPoint ip)\n\t\tif (a.length === 1)\n\t\t{\n\t\t\tthis.X = a[0].X;\n\t\t\tthis.Y = a[0].Y;\n\t\t}\n\t\telse if (a.length === 2)\n\t\t{\n\t\t\tthis.X = a[0];\n\t\t\tthis.Y = a[1];\n\t\t}\n\t}; // This is internal faster function when called without arguments\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.DoublePoint0 = function ()\n\t{\n\t\tthis.X = 0;\n\t\tthis.Y = 0;\n\t};\n\n\tClipperLib.DoublePoint0.prototype = ClipperLib.DoublePoint.prototype;\n\n\t// This is internal faster function when called with 1 argument (dp or ip)\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.DoublePoint1 = function (dp)\n\t{\n\t\tthis.X = dp.X;\n\t\tthis.Y = dp.Y;\n\t};\n\n\tClipperLib.DoublePoint1.prototype = ClipperLib.DoublePoint.prototype;\n\n\t// This is internal faster function when called with 2 arguments (x and y)\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.DoublePoint2 = function (x, y)\n\t{\n\t\tthis.X = x;\n\t\tthis.Y = y;\n\t};\n\n\tClipperLib.DoublePoint2.prototype = ClipperLib.DoublePoint.prototype;\n\n\t// PolyTree & PolyNode start\n\t/**\n\t* @suppress {missingProperties}\n\t*/\n\tClipperLib.PolyNode = function ()\n\t{\n\t\tthis.m_Parent = null;\n\t\tthis.m_polygon = new ClipperLib.Path();\n\t\tthis.m_Index = 0;\n\t\tthis.m_jointype = 0;\n\t\tthis.m_endtype = 0;\n\t\tthis.m_Childs = [];\n\t\tthis.IsOpen = false;\n\t};\n\n\tClipperLib.PolyNode.prototype.IsHoleNode = function ()\n\t{\n\t\tvar result = true;\n\t\tvar node = this.m_Parent;\n\t\twhile (node !== null)\n\t\t{\n\t\t\tresult = !result;\n\t\t\tnode = node.m_Parent;\n\t\t}\n\t\treturn result;\n\t};\n\n\tClipperLib.PolyNode.prototype.ChildCount = function ()\n\t{\n\t\treturn this.m_Childs.length;\n\t};\n\n\tClipperLib.PolyNode.prototype.Contour = function ()\n\t{\n\t\treturn this.m_polygon;\n\t};\n\n\tClipperLib.PolyNode.prototype.AddChild = function (Child)\n\t{\n\t\tvar cnt = this.m_Childs.length;\n\t\tthis.m_Childs.push(Child);\n\t\tChild.m_Parent = this;\n\t\tChild.m_Index = cnt;\n\t};\n\n\tClipperLib.PolyNode.prototype.GetNext = function ()\n\t{\n\t\tif (this.m_Childs.length > 0)\n\t\t\treturn this.m_Childs[0];\n\t\telse\n\t\t\treturn this.GetNextSiblingUp();\n\t};\n\n\tClipperLib.PolyNode.prototype.GetNextSiblingUp = function ()\n\t{\n\t\tif (this.m_Parent === null)\n\t\t\treturn null;\n\t\telse if (this.m_Index === this.m_Parent.m_Childs.length - 1)\n\t\t\treturn this.m_Parent.GetNextSiblingUp();\n\t\telse\n\t\t\treturn this.m_Parent.m_Childs[this.m_Index + 1];\n\t};\n\n\tClipperLib.PolyNode.prototype.Childs = function ()\n\t{\n\t\treturn this.m_Childs;\n\t};\n\n\tClipperLib.PolyNode.prototype.Parent = function ()\n\t{\n\t\treturn this.m_Parent;\n\t};\n\n\tClipperLib.PolyNode.prototype.IsHole = function ()\n\t{\n\t\treturn this.IsHoleNode();\n\t};\n\n\t// PolyTree : PolyNode\n\t/**\n\t * @suppress {missingProperties}\n\t * @constructor\n\t */\n\tClipperLib.PolyTree = function ()\n\t{\n\t\tthis.m_AllPolys = [];\n\t\tClipperLib.PolyNode.call(this);\n\t};\n\n\tClipperLib.PolyTree.prototype.Clear = function ()\n\t{\n\t\tfor (var i = 0, ilen = this.m_AllPolys.length; i < ilen; i++)\n\t\t\tthis.m_AllPolys[i] = null;\n\t\tthis.m_AllPolys.length = 0;\n\t\tthis.m_Childs.length = 0;\n\t};\n\n\tClipperLib.PolyTree.prototype.GetFirst = function ()\n\t{\n\t\tif (this.m_Childs.length > 0)\n\t\t\treturn this.m_Childs[0];\n\t\telse\n\t\t\treturn null;\n\t};\n\n\tClipperLib.PolyTree.prototype.Total = function ()\n\t{\n\t\tvar result = this.m_AllPolys.length;\n\t\t//with negative offsets, ignore the hidden outer polygon ...\n\t\tif (result > 0 && this.m_Childs[0] !== this.m_AllPolys[0]) result--;\n\t\treturn result;\n\t};\n\n\tInherit(ClipperLib.PolyTree, ClipperLib.PolyNode);\n\n\t// PolyTree & PolyNode end\n\n\tClipperLib.Math_Abs_Int64 = ClipperLib.Math_Abs_Int32 = ClipperLib.Math_Abs_Double = function (a)\n\t{\n\t\treturn Math.abs(a);\n\t};\n\n\tClipperLib.Math_Max_Int32_Int32 = function (a, b)\n\t{\n\t\treturn Math.max(a, b);\n\t};\n\n\t/*\n\t-----------------------------------\n\tcast_32 speedtest: http://jsperf.com/truncate-float-to-integer/2\n\t-----------------------------------\n\t*/\n\tif (browser.msie || browser.opera || browser.safari) ClipperLib.Cast_Int32 = function (a)\n\t{\n\t\treturn a | 0;\n\t};\n\n\telse ClipperLib.Cast_Int32 = function (a)\n\t{ // eg. browser.chrome || browser.chromium || browser.firefox\n\t\treturn ~~a;\n\t};\n\n\t/*\n\t--------------------------\n\tcast_64 speedtests: http://jsperf.com/truncate-float-to-integer\n\tChrome: bitwise_not_floor\n\tFirefox17: toInteger (typeof test)\n\tIE9: bitwise_or_floor\n\tIE7 and IE8: to_parseint\n\tChromium: to_floor_or_ceil\n\tFirefox3: to_floor_or_ceil\n\tFirefox15: to_floor_or_ceil\n\tOpera: to_floor_or_ceil\n\tSafari: to_floor_or_ceil\n\t--------------------------\n\t*/\n\tif (typeof Number.toInteger === \"undefined\")\n\t\tNumber.toInteger = null;\n\n\tif (browser.chrome) ClipperLib.Cast_Int64 = function (a)\n\t{\n\t\tif (a < -2147483648 || a > 2147483647)\n\t\t\treturn a < 0 ? Math.ceil(a) : Math.floor(a);\n\t\telse return ~~a;\n\t};\n\n\telse if (browser.firefox && typeof (Number.toInteger) === \"function\") ClipperLib.Cast_Int64 = function (a)\n\t{\n\t\treturn Number.toInteger(a);\n\t};\n\n\telse if (browser.msie7 || browser.msie8) ClipperLib.Cast_Int64 = function (a)\n\t{\n\t\treturn parseInt(a, 10);\n\t};\n\n\telse if (browser.msie) ClipperLib.Cast_Int64 = function (a)\n\t{\n\t\tif (a < -2147483648 || a > 2147483647)\n\t\t\treturn a < 0 ? Math.ceil(a) : Math.floor(a);\n\t\treturn a | 0;\n\t};\n\n\t// eg. browser.chromium || browser.firefox || browser.opera || browser.safari\n\telse ClipperLib.Cast_Int64 = function (a)\n\t{\n\t\treturn a < 0 ? Math.ceil(a) : Math.floor(a);\n\t};\n\n\tClipperLib.Clear = function (a)\n\t{\n\t\ta.length = 0;\n\t};\n\n\t//ClipperLib.MaxSteps = 64; // How many steps at maximum in arc in BuildArc() function\n\tClipperLib.PI = 3.141592653589793;\n\tClipperLib.PI2 = 2 * 3.141592653589793;\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.IntPoint = function ()\n\t{\n\t\tvar a = arguments,\n\t\t\talen = a.length;\n\t\tthis.X = 0;\n\t\tthis.Y = 0;\n\t\tif (ClipperLib.use_xyz)\n\t\t{\n\t\t\tthis.Z = 0;\n\t\t\tif (alen === 3) // public IntPoint(cInt x, cInt y, cInt z = 0)\n\t\t\t{\n\t\t\t\tthis.X = a[0];\n\t\t\t\tthis.Y = a[1];\n\t\t\t\tthis.Z = a[2];\n\t\t\t}\n\t\t\telse if (alen === 2) // public IntPoint(cInt x, cInt y)\n\t\t\t{\n\t\t\t\tthis.X = a[0];\n\t\t\t\tthis.Y = a[1];\n\t\t\t\tthis.Z = 0;\n\t\t\t}\n\t\t\telse if (alen === 1)\n\t\t\t{\n\t\t\t\tif (a[0] instanceof ClipperLib.DoublePoint) // public IntPoint(DoublePoint dp)\n\t\t\t\t{\n\t\t\t\t\tvar dp = a[0];\n\t\t\t\t\tthis.X = ClipperLib.Clipper.Round(dp.X);\n\t\t\t\t\tthis.Y = ClipperLib.Clipper.Round(dp.Y);\n\t\t\t\t\tthis.Z = 0;\n\t\t\t\t}\n\t\t\t\telse // public IntPoint(IntPoint pt)\n\t\t\t\t{\n\t\t\t\t\tvar pt = a[0];\n\t\t\t\t\tif (typeof (pt.Z) === \"undefined\") pt.Z = 0;\n\t\t\t\t\tthis.X = pt.X;\n\t\t\t\t\tthis.Y = pt.Y;\n\t\t\t\t\tthis.Z = pt.Z;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse // public IntPoint()\n\t\t\t{\n\t\t\t\tthis.X = 0;\n\t\t\t\tthis.Y = 0;\n\t\t\t\tthis.Z = 0;\n\t\t\t}\n\t\t}\n\t\telse // if (!ClipperLib.use_xyz)\n\t\t{\n\t\t\tif (alen === 2) // public IntPoint(cInt X, cInt Y)\n\t\t\t{\n\t\t\t\tthis.X = a[0];\n\t\t\t\tthis.Y = a[1];\n\t\t\t}\n\t\t\telse if (alen === 1)\n\t\t\t{\n\t\t\t\tif (a[0] instanceof ClipperLib.DoublePoint) // public IntPoint(DoublePoint dp)\n\t\t\t\t{\n\t\t\t\t\tvar dp = a[0];\n\t\t\t\t\tthis.X = ClipperLib.Clipper.Round(dp.X);\n\t\t\t\t\tthis.Y = ClipperLib.Clipper.Round(dp.Y);\n\t\t\t\t}\n\t\t\t\telse // public IntPoint(IntPoint pt)\n\t\t\t\t{\n\t\t\t\t\tvar pt = a[0];\n\t\t\t\t\tthis.X = pt.X;\n\t\t\t\t\tthis.Y = pt.Y;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse // public IntPoint(IntPoint pt)\n\t\t\t{\n\t\t\t\tthis.X = 0;\n\t\t\t\tthis.Y = 0;\n\t\t\t}\n\t\t}\n\t};\n\n\tClipperLib.IntPoint.op_Equality = function (a, b)\n\t{\n\t\t//return a == b;\n\t\treturn a.X === b.X && a.Y === b.Y;\n\t};\n\n\tClipperLib.IntPoint.op_Inequality = function (a, b)\n\t{\n\t\t//return a !== b;\n\t\treturn a.X !== b.X || a.Y !== b.Y;\n\t};\n\n\t/*\n  ClipperLib.IntPoint.prototype.Equals = function (obj)\n  {\n    if (obj === null)\n        return false;\n    if (obj instanceof ClipperLib.IntPoint)\n    {\n        var a = Cast(obj, ClipperLib.IntPoint);\n        return (this.X == a.X) && (this.Y == a.Y);\n    }\n    else\n        return false;\n  };\n\n\t*/\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.IntPoint0 = function ()\n\t{\n\t\tthis.X = 0;\n\t\tthis.Y = 0;\n\t\tif (ClipperLib.use_xyz)\n\t\t\tthis.Z = 0;\n\t};\n\n\tClipperLib.IntPoint0.prototype = ClipperLib.IntPoint.prototype;\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.IntPoint1 = function (pt)\n\t{\n\t\tthis.X = pt.X;\n\t\tthis.Y = pt.Y;\n\t\tif (ClipperLib.use_xyz)\n\t\t{\n\t\t\tif (typeof pt.Z === \"undefined\") this.Z = 0;\n\t\t\telse this.Z = pt.Z;\n\t\t}\n\t};\n\n\tClipperLib.IntPoint1.prototype = ClipperLib.IntPoint.prototype;\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.IntPoint1dp = function (dp)\n\t{\n\t\tthis.X = ClipperLib.Clipper.Round(dp.X);\n\t\tthis.Y = ClipperLib.Clipper.Round(dp.Y);\n\t\tif (ClipperLib.use_xyz)\n\t\t\tthis.Z = 0;\n\t};\n\n\tClipperLib.IntPoint1dp.prototype = ClipperLib.IntPoint.prototype;\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.IntPoint2 = function (x, y, z)\n\t{\n\t\tthis.X = x;\n\t\tthis.Y = y;\n\t\tif (ClipperLib.use_xyz)\n\t\t{\n\t\t\tif (typeof z === \"undefined\") this.Z = 0;\n\t\t\telse this.Z = z;\n\t\t}\n\t};\n\n\tClipperLib.IntPoint2.prototype = ClipperLib.IntPoint.prototype;\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.IntRect = function ()\n\t{\n\t\tvar a = arguments,\n\t\t\talen = a.length;\n\t\tif (alen === 4) // function (l, t, r, b)\n\t\t{\n\t\t\tthis.left = a[0];\n\t\t\tthis.top = a[1];\n\t\t\tthis.right = a[2];\n\t\t\tthis.bottom = a[3];\n\t\t}\n\t\telse if (alen === 1) // function (ir)\n\t\t{\n\t\t\tvar ir = a[0];\n\t\t\tthis.left = ir.left;\n\t\t\tthis.top = ir.top;\n\t\t\tthis.right = ir.right;\n\t\t\tthis.bottom = ir.bottom;\n\t\t}\n\t\telse // function ()\n\t\t{\n\t\t\tthis.left = 0;\n\t\t\tthis.top = 0;\n\t\t\tthis.right = 0;\n\t\t\tthis.bottom = 0;\n\t\t}\n\t};\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.IntRect0 = function ()\n\t{\n\t\tthis.left = 0;\n\t\tthis.top = 0;\n\t\tthis.right = 0;\n\t\tthis.bottom = 0;\n\t};\n\n\tClipperLib.IntRect0.prototype = ClipperLib.IntRect.prototype;\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.IntRect1 = function (ir)\n\t{\n\t\tthis.left = ir.left;\n\t\tthis.top = ir.top;\n\t\tthis.right = ir.right;\n\t\tthis.bottom = ir.bottom;\n\t};\n\n\tClipperLib.IntRect1.prototype = ClipperLib.IntRect.prototype;\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.IntRect4 = function (l, t, r, b)\n\t{\n\t\tthis.left = l;\n\t\tthis.top = t;\n\t\tthis.right = r;\n\t\tthis.bottom = b;\n\t};\n\n\tClipperLib.IntRect4.prototype = ClipperLib.IntRect.prototype;\n\n\tClipperLib.ClipType = {\n\t\tctIntersection: 0,\n\t\tctUnion: 1,\n\t\tctDifference: 2,\n\t\tctXor: 3\n\t};\n\n\tClipperLib.PolyType = {\n\t\tptSubject: 0,\n\t\tptClip: 1\n\t};\n\n\tClipperLib.PolyFillType = {\n\t\tpftEvenOdd: 0,\n\t\tpftNonZero: 1,\n\t\tpftPositive: 2,\n\t\tpftNegative: 3\n\t};\n\n\tClipperLib.JoinType = {\n\t\tjtSquare: 0,\n\t\tjtRound: 1,\n\t\tjtMiter: 2\n\t};\n\n\tClipperLib.EndType = {\n\t\tetOpenSquare: 0,\n\t\tetOpenRound: 1,\n\t\tetOpenButt: 2,\n\t\tetClosedLine: 3,\n\t\tetClosedPolygon: 4\n\t};\n\n\tClipperLib.EdgeSide = {\n\t\tesLeft: 0,\n\t\tesRight: 1\n\t};\n\n\tClipperLib.Direction = {\n\t\tdRightToLeft: 0,\n\t\tdLeftToRight: 1\n\t};\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.TEdge = function ()\n\t{\n\t\tthis.Bot = new ClipperLib.IntPoint0();\n\t\tthis.Curr = new ClipperLib.IntPoint0(); //current (updated for every new scanbeam)\n\t\tthis.Top = new ClipperLib.IntPoint0();\n\t\tthis.Delta = new ClipperLib.IntPoint0();\n\t\tthis.Dx = 0;\n\t\tthis.PolyTyp = ClipperLib.PolyType.ptSubject;\n\t\tthis.Side = ClipperLib.EdgeSide.esLeft; //side only refers to current side of solution poly\n\t\tthis.WindDelta = 0; //1 or -1 depending on winding direction\n\t\tthis.WindCnt = 0;\n\t\tthis.WindCnt2 = 0; //winding count of the opposite polytype\n\t\tthis.OutIdx = 0;\n\t\tthis.Next = null;\n\t\tthis.Prev = null;\n\t\tthis.NextInLML = null;\n\t\tthis.NextInAEL = null;\n\t\tthis.PrevInAEL = null;\n\t\tthis.NextInSEL = null;\n\t\tthis.PrevInSEL = null;\n\t};\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.IntersectNode = function ()\n\t{\n\t\tthis.Edge1 = null;\n\t\tthis.Edge2 = null;\n\t\tthis.Pt = new ClipperLib.IntPoint0();\n\t};\n\n\tClipperLib.MyIntersectNodeSort = function () {};\n\n\tClipperLib.MyIntersectNodeSort.Compare = function (node1, node2)\n\t{\n\t\tvar i = node2.Pt.Y - node1.Pt.Y;\n\t\tif (i > 0) return 1;\n\t\telse if (i < 0) return -1;\n\t\telse return 0;\n\t};\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.LocalMinima = function ()\n\t{\n\t\tthis.Y = 0;\n\t\tthis.LeftBound = null;\n\t\tthis.RightBound = null;\n\t\tthis.Next = null;\n\t};\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.Scanbeam = function ()\n\t{\n\t\tthis.Y = 0;\n\t\tthis.Next = null;\n\t};\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.Maxima = function ()\n\t{\n\t\tthis.X = 0;\n\t\tthis.Next = null;\n\t\tthis.Prev = null;\n\t};\n\n\t//OutRec: contains a path in the clipping solution. Edges in the AEL will\n\t//carry a pointer to an OutRec when they are part of the clipping solution.\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.OutRec = function ()\n\t{\n\t\tthis.Idx = 0;\n\t\tthis.IsHole = false;\n\t\tthis.IsOpen = false;\n\t\tthis.FirstLeft = null; //see comments in clipper.pas\n\t\tthis.Pts = null;\n\t\tthis.BottomPt = null;\n\t\tthis.PolyNode = null;\n\t};\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.OutPt = function ()\n\t{\n\t\tthis.Idx = 0;\n\t\tthis.Pt = new ClipperLib.IntPoint0();\n\t\tthis.Next = null;\n\t\tthis.Prev = null;\n\t};\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.Join = function ()\n\t{\n\t\tthis.OutPt1 = null;\n\t\tthis.OutPt2 = null;\n\t\tthis.OffPt = new ClipperLib.IntPoint0();\n\t};\n\n\tClipperLib.ClipperBase = function ()\n\t{\n\t\tthis.m_MinimaList = null;\n\t\tthis.m_CurrentLM = null;\n\t\tthis.m_edges = new Array();\n\t\tthis.m_UseFullRange = false;\n\t\tthis.m_HasOpenPaths = false;\n\t\tthis.PreserveCollinear = false;\n\t\tthis.m_Scanbeam = null;\n\t\tthis.m_PolyOuts = null;\n\t\tthis.m_ActiveEdges = null;\n\t};\n\n\t// Ranges are in original C# too high for Javascript (in current state 2013 september):\n\t// protected const double horizontal = -3.4E+38;\n\t// internal const cInt loRange = 0x3FFFFFFF; // = 1073741823 = sqrt(2^63 -1)/2\n\t// internal const cInt hiRange = 0x3FFFFFFFFFFFFFFFL; // = 4611686018427387903 = sqrt(2^127 -1)/2\n\t// So had to adjust them to more suitable for Javascript.\n\t// If JS some day supports truly 64-bit integers, then these ranges can be as in C#\n\t// and biginteger library can be more simpler (as then 128bit can be represented as two 64bit numbers)\n\tClipperLib.ClipperBase.horizontal = -9007199254740992; //-2^53\n\tClipperLib.ClipperBase.Skip = -2;\n\tClipperLib.ClipperBase.Unassigned = -1;\n\tClipperLib.ClipperBase.tolerance = 1E-20;\n\tClipperLib.ClipperBase.loRange = 47453132; // sqrt(2^53 -1)/2\n\tClipperLib.ClipperBase.hiRange = 4503599627370495; // sqrt(2^106 -1)/2\n\n\tClipperLib.ClipperBase.near_zero = function (val)\n\t{\n\t\treturn (val > -ClipperLib.ClipperBase.tolerance) && (val < ClipperLib.ClipperBase.tolerance);\n\t};\n\n\tClipperLib.ClipperBase.IsHorizontal = function (e)\n\t{\n\t\treturn e.Delta.Y === 0;\n\t};\n\n\tClipperLib.ClipperBase.prototype.PointIsVertex = function (pt, pp)\n\t{\n\t\tvar pp2 = pp;\n\t\tdo {\n\t\t\tif (ClipperLib.IntPoint.op_Equality(pp2.Pt, pt))\n\t\t\t\treturn true;\n\t\t\tpp2 = pp2.Next;\n\t\t}\n\t\twhile (pp2 !== pp)\n\t\treturn false;\n\t};\n\n\tClipperLib.ClipperBase.prototype.PointOnLineSegment = function (pt, linePt1, linePt2, UseFullRange)\n\t{\n\t\tif (UseFullRange)\n\t\t\treturn ((pt.X === linePt1.X) && (pt.Y === linePt1.Y)) ||\n\t\t\t\t((pt.X === linePt2.X) && (pt.Y === linePt2.Y)) ||\n\t\t\t\t(((pt.X > linePt1.X) === (pt.X < linePt2.X)) &&\n\t\t\t\t\t((pt.Y > linePt1.Y) === (pt.Y < linePt2.Y)) &&\n\t\t\t\t\t(Int128.op_Equality(Int128.Int128Mul((pt.X - linePt1.X), (linePt2.Y - linePt1.Y)),\n\t\t\t\t\t\tInt128.Int128Mul((linePt2.X - linePt1.X), (pt.Y - linePt1.Y)))));\n\t\telse\n\t\t\treturn ((pt.X === linePt1.X) && (pt.Y === linePt1.Y)) || ((pt.X === linePt2.X) && (pt.Y === linePt2.Y)) || (((pt.X > linePt1.X) === (pt.X < linePt2.X)) && ((pt.Y > linePt1.Y) === (pt.Y < linePt2.Y)) && ((pt.X - linePt1.X) * (linePt2.Y - linePt1.Y) === (linePt2.X - linePt1.X) * (pt.Y - linePt1.Y)));\n\t};\n\n\tClipperLib.ClipperBase.prototype.PointOnPolygon = function (pt, pp, UseFullRange)\n\t{\n\t\tvar pp2 = pp;\n\t\twhile (true)\n\t\t{\n\t\t\tif (this.PointOnLineSegment(pt, pp2.Pt, pp2.Next.Pt, UseFullRange))\n\t\t\t\treturn true;\n\t\t\tpp2 = pp2.Next;\n\t\t\tif (pp2 === pp)\n\t\t\t\tbreak;\n\t\t}\n\t\treturn false;\n\t};\n\n\tClipperLib.ClipperBase.prototype.SlopesEqual = ClipperLib.ClipperBase.SlopesEqual = function ()\n\t{\n\t\tvar a = arguments,\n\t\t\talen = a.length;\n\t\tvar e1, e2, pt1, pt2, pt3, pt4, UseFullRange;\n\t\tif (alen === 3) // function (e1, e2, UseFullRange)\n\t\t{\n\t\t\te1 = a[0];\n\t\t\te2 = a[1];\n\t\t\tUseFullRange = a[2];\n\t\t\tif (UseFullRange)\n\t\t\t\treturn Int128.op_Equality(Int128.Int128Mul(e1.Delta.Y, e2.Delta.X), Int128.Int128Mul(e1.Delta.X, e2.Delta.Y));\n\t\t\telse\n\t\t\t\treturn ClipperLib.Cast_Int64((e1.Delta.Y) * (e2.Delta.X)) === ClipperLib.Cast_Int64((e1.Delta.X) * (e2.Delta.Y));\n\t\t}\n\t\telse if (alen === 4) // function (pt1, pt2, pt3, UseFullRange)\n\t\t{\n\t\t\tpt1 = a[0];\n\t\t\tpt2 = a[1];\n\t\t\tpt3 = a[2];\n\t\t\tUseFullRange = a[3];\n\t\t\tif (UseFullRange)\n\t\t\t\treturn Int128.op_Equality(Int128.Int128Mul(pt1.Y - pt2.Y, pt2.X - pt3.X), Int128.Int128Mul(pt1.X - pt2.X, pt2.Y - pt3.Y));\n\t\t\telse\n\t\t\t\treturn ClipperLib.Cast_Int64((pt1.Y - pt2.Y) * (pt2.X - pt3.X)) - ClipperLib.Cast_Int64((pt1.X - pt2.X) * (pt2.Y - pt3.Y)) === 0;\n\t\t}\n\t\telse // function (pt1, pt2, pt3, pt4, UseFullRange)\n\t\t{\n\t\t\tpt1 = a[0];\n\t\t\tpt2 = a[1];\n\t\t\tpt3 = a[2];\n\t\t\tpt4 = a[3];\n\t\t\tUseFullRange = a[4];\n\t\t\tif (UseFullRange)\n\t\t\t\treturn Int128.op_Equality(Int128.Int128Mul(pt1.Y - pt2.Y, pt3.X - pt4.X), Int128.Int128Mul(pt1.X - pt2.X, pt3.Y - pt4.Y));\n\t\t\telse\n\t\t\t\treturn ClipperLib.Cast_Int64((pt1.Y - pt2.Y) * (pt3.X - pt4.X)) - ClipperLib.Cast_Int64((pt1.X - pt2.X) * (pt3.Y - pt4.Y)) === 0;\n\t\t}\n\t};\n\n\tClipperLib.ClipperBase.SlopesEqual3 = function (e1, e2, UseFullRange)\n\t{\n\t\tif (UseFullRange)\n\t\t\treturn Int128.op_Equality(Int128.Int128Mul(e1.Delta.Y, e2.Delta.X), Int128.Int128Mul(e1.Delta.X, e2.Delta.Y));\n\t\telse\n\t\t\treturn ClipperLib.Cast_Int64((e1.Delta.Y) * (e2.Delta.X)) === ClipperLib.Cast_Int64((e1.Delta.X) * (e2.Delta.Y));\n\t};\n\n\tClipperLib.ClipperBase.SlopesEqual4 = function (pt1, pt2, pt3, UseFullRange)\n\t{\n\t\tif (UseFullRange)\n\t\t\treturn Int128.op_Equality(Int128.Int128Mul(pt1.Y - pt2.Y, pt2.X - pt3.X), Int128.Int128Mul(pt1.X - pt2.X, pt2.Y - pt3.Y));\n\t\telse\n\t\t\treturn ClipperLib.Cast_Int64((pt1.Y - pt2.Y) * (pt2.X - pt3.X)) - ClipperLib.Cast_Int64((pt1.X - pt2.X) * (pt2.Y - pt3.Y)) === 0;\n\t};\n\n\tClipperLib.ClipperBase.SlopesEqual5 = function (pt1, pt2, pt3, pt4, UseFullRange)\n\t{\n\t\tif (UseFullRange)\n\t\t\treturn Int128.op_Equality(Int128.Int128Mul(pt1.Y - pt2.Y, pt3.X - pt4.X), Int128.Int128Mul(pt1.X - pt2.X, pt3.Y - pt4.Y));\n\t\telse\n\t\t\treturn ClipperLib.Cast_Int64((pt1.Y - pt2.Y) * (pt3.X - pt4.X)) - ClipperLib.Cast_Int64((pt1.X - pt2.X) * (pt3.Y - pt4.Y)) === 0;\n\t};\n\n\tClipperLib.ClipperBase.prototype.Clear = function ()\n\t{\n\t\tthis.DisposeLocalMinimaList();\n\t\tfor (var i = 0, ilen = this.m_edges.length; i < ilen; ++i)\n\t\t{\n\t\t\tfor (var j = 0, jlen = this.m_edges[i].length; j < jlen; ++j)\n\t\t\t\tthis.m_edges[i][j] = null;\n\t\t\tClipperLib.Clear(this.m_edges[i]);\n\t\t}\n\t\tClipperLib.Clear(this.m_edges);\n\t\tthis.m_UseFullRange = false;\n\t\tthis.m_HasOpenPaths = false;\n\t};\n\n\tClipperLib.ClipperBase.prototype.DisposeLocalMinimaList = function ()\n\t{\n\t\twhile (this.m_MinimaList !== null)\n\t\t{\n\t\t\tvar tmpLm = this.m_MinimaList.Next;\n\t\t\tthis.m_MinimaList = null;\n\t\t\tthis.m_MinimaList = tmpLm;\n\t\t}\n\t\tthis.m_CurrentLM = null;\n\t};\n\n\tClipperLib.ClipperBase.prototype.RangeTest = function (Pt, useFullRange)\n\t{\n\t\tif (useFullRange.Value)\n\t\t{\n\t\t\tif (Pt.X > ClipperLib.ClipperBase.hiRange || Pt.Y > ClipperLib.ClipperBase.hiRange || -Pt.X > ClipperLib.ClipperBase.hiRange || -Pt.Y > ClipperLib.ClipperBase.hiRange)\n\t\t\t\tClipperLib.Error(\"Coordinate outside allowed range in RangeTest().\");\n\t\t}\n\t\telse if (Pt.X > ClipperLib.ClipperBase.loRange || Pt.Y > ClipperLib.ClipperBase.loRange || -Pt.X > ClipperLib.ClipperBase.loRange || -Pt.Y > ClipperLib.ClipperBase.loRange)\n\t\t{\n\t\t\tuseFullRange.Value = true;\n\t\t\tthis.RangeTest(Pt, useFullRange);\n\t\t}\n\t};\n\n\tClipperLib.ClipperBase.prototype.InitEdge = function (e, eNext, ePrev, pt)\n\t{\n\t\te.Next = eNext;\n\t\te.Prev = ePrev;\n\t\t//e.Curr = pt;\n\t\te.Curr.X = pt.X;\n\t\te.Curr.Y = pt.Y;\n\t\tif (ClipperLib.use_xyz) e.Curr.Z = pt.Z;\n\t\te.OutIdx = -1;\n\t};\n\n\tClipperLib.ClipperBase.prototype.InitEdge2 = function (e, polyType)\n\t{\n\t\tif (e.Curr.Y >= e.Next.Curr.Y)\n\t\t{\n\t\t\t//e.Bot = e.Curr;\n\t\t\te.Bot.X = e.Curr.X;\n\t\t\te.Bot.Y = e.Curr.Y;\n\t\t\tif (ClipperLib.use_xyz) e.Bot.Z = e.Curr.Z;\n\t\t\t//e.Top = e.Next.Curr;\n\t\t\te.Top.X = e.Next.Curr.X;\n\t\t\te.Top.Y = e.Next.Curr.Y;\n\t\t\tif (ClipperLib.use_xyz) e.Top.Z = e.Next.Curr.Z;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//e.Top = e.Curr;\n\t\t\te.Top.X = e.Curr.X;\n\t\t\te.Top.Y = e.Curr.Y;\n\t\t\tif (ClipperLib.use_xyz) e.Top.Z = e.Curr.Z;\n\t\t\t//e.Bot = e.Next.Curr;\n\t\t\te.Bot.X = e.Next.Curr.X;\n\t\t\te.Bot.Y = e.Next.Curr.Y;\n\t\t\tif (ClipperLib.use_xyz) e.Bot.Z = e.Next.Curr.Z;\n\t\t}\n\t\tthis.SetDx(e);\n\t\te.PolyTyp = polyType;\n\t};\n\n\tClipperLib.ClipperBase.prototype.FindNextLocMin = function (E)\n\t{\n\t\tvar E2;\n\t\tfor (;;)\n\t\t{\n\t\t\twhile (ClipperLib.IntPoint.op_Inequality(E.Bot, E.Prev.Bot) || ClipperLib.IntPoint.op_Equality(E.Curr, E.Top))\n\t\t\t\tE = E.Next;\n\t\t\tif (E.Dx !== ClipperLib.ClipperBase.horizontal && E.Prev.Dx !== ClipperLib.ClipperBase.horizontal)\n\t\t\t\tbreak;\n\t\t\twhile (E.Prev.Dx === ClipperLib.ClipperBase.horizontal)\n\t\t\t\tE = E.Prev;\n\t\t\tE2 = E;\n\t\t\twhile (E.Dx === ClipperLib.ClipperBase.horizontal)\n\t\t\t\tE = E.Next;\n\t\t\tif (E.Top.Y === E.Prev.Bot.Y)\n\t\t\t\tcontinue;\n\t\t\t//ie just an intermediate horz.\n\t\t\tif (E2.Prev.Bot.X < E.Bot.X)\n\t\t\t\tE = E2;\n\t\t\tbreak;\n\t\t}\n\t\treturn E;\n\t};\n\n\tClipperLib.ClipperBase.prototype.ProcessBound = function (E, LeftBoundIsForward)\n\t{\n\t\tvar EStart;\n\t\tvar Result = E;\n\t\tvar Horz;\n\n\t\tif (Result.OutIdx === ClipperLib.ClipperBase.Skip)\n\t\t{\n\t\t\t//check if there are edges beyond the skip edge in the bound and if so\n\t\t\t//create another LocMin and calling ProcessBound once more ...\n\t\t\tE = Result;\n\t\t\tif (LeftBoundIsForward)\n\t\t\t{\n\t\t\t\twhile (E.Top.Y === E.Next.Bot.Y) E = E.Next;\n\t\t\t\twhile (E !== Result && E.Dx === ClipperLib.ClipperBase.horizontal) E = E.Prev;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\twhile (E.Top.Y === E.Prev.Bot.Y) E = E.Prev;\n\t\t\t\twhile (E !== Result && E.Dx === ClipperLib.ClipperBase.horizontal) E = E.Next;\n\t\t\t}\n\t\t\tif (E === Result)\n\t\t\t{\n\t\t\t\tif (LeftBoundIsForward) Result = E.Next;\n\t\t\t\telse Result = E.Prev;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//there are more edges in the bound beyond result starting with E\n\t\t\t\tif (LeftBoundIsForward)\n\t\t\t\t\tE = Result.Next;\n\t\t\t\telse\n\t\t\t\t\tE = Result.Prev;\n\t\t\t\tvar locMin = new ClipperLib.LocalMinima();\n\t\t\t\tlocMin.Next = null;\n\t\t\t\tlocMin.Y = E.Bot.Y;\n\t\t\t\tlocMin.LeftBound = null;\n\t\t\t\tlocMin.RightBound = E;\n\t\t\t\tE.WindDelta = 0;\n\t\t\t\tResult = this.ProcessBound(E, LeftBoundIsForward);\n\t\t\t\tthis.InsertLocalMinima(locMin);\n\t\t\t}\n\t\t\treturn Result;\n\t\t}\n\n\t\tif (E.Dx === ClipperLib.ClipperBase.horizontal)\n\t\t{\n\t\t\t//We need to be careful with open paths because this may not be a\n\t\t\t//true local minima (ie E may be following a skip edge).\n\t\t\t//Also, consecutive horz. edges may start heading left before going right.\n\t\t\tif (LeftBoundIsForward) EStart = E.Prev;\n\t\t\telse EStart = E.Next;\n\n\t\t\tif (EStart.Dx === ClipperLib.ClipperBase.horizontal) //ie an adjoining horizontal skip edge\n\t\t\t{\n\t\t\t\tif (EStart.Bot.X !== E.Bot.X && EStart.Top.X !== E.Bot.X)\n\t\t\t\t\tthis.ReverseHorizontal(E);\n\t\t\t}\n\t\t\telse if (EStart.Bot.X !== E.Bot.X)\n\t\t\t\tthis.ReverseHorizontal(E);\n\t\t}\n\n\t\tEStart = E;\n\t\tif (LeftBoundIsForward)\n\t\t{\n\t\t\twhile (Result.Top.Y === Result.Next.Bot.Y && Result.Next.OutIdx !== ClipperLib.ClipperBase.Skip)\n\t\t\t\tResult = Result.Next;\n\t\t\tif (Result.Dx === ClipperLib.ClipperBase.horizontal && Result.Next.OutIdx !== ClipperLib.ClipperBase.Skip)\n\t\t\t{\n\t\t\t\t//nb: at the top of a bound, horizontals are added to the bound\n\t\t\t\t//only when the preceding edge attaches to the horizontal's left vertex\n\t\t\t\t//unless a Skip edge is encountered when that becomes the top divide\n\t\t\t\tHorz = Result;\n\t\t\t\twhile (Horz.Prev.Dx === ClipperLib.ClipperBase.horizontal)\n\t\t\t\t\tHorz = Horz.Prev;\n\t\t\t\tif (Horz.Prev.Top.X > Result.Next.Top.X)\n\t\t\t\t\tResult = Horz.Prev;\n\t\t\t}\n\t\t\twhile (E !== Result)\n\t\t\t{\n\t\t\t\tE.NextInLML = E.Next;\n\t\t\t\tif (E.Dx === ClipperLib.ClipperBase.horizontal && E !== EStart && E.Bot.X !== E.Prev.Top.X)\n\t\t\t\t\tthis.ReverseHorizontal(E);\n\t\t\t\tE = E.Next;\n\t\t\t}\n\t\t\tif (E.Dx === ClipperLib.ClipperBase.horizontal && E !== EStart && E.Bot.X !== E.Prev.Top.X)\n\t\t\t\tthis.ReverseHorizontal(E);\n\t\t\tResult = Result.Next;\n\t\t\t//move to the edge just beyond current bound\n\t\t}\n\t\telse\n\t\t{\n\t\t\twhile (Result.Top.Y === Result.Prev.Bot.Y && Result.Prev.OutIdx !== ClipperLib.ClipperBase.Skip)\n\t\t\t\tResult = Result.Prev;\n\t\t\tif (Result.Dx === ClipperLib.ClipperBase.horizontal && Result.Prev.OutIdx !== ClipperLib.ClipperBase.Skip)\n\t\t\t{\n\t\t\t\tHorz = Result;\n\t\t\t\twhile (Horz.Next.Dx === ClipperLib.ClipperBase.horizontal)\n\t\t\t\t\tHorz = Horz.Next;\n\t\t\t\tif (Horz.Next.Top.X === Result.Prev.Top.X || Horz.Next.Top.X > Result.Prev.Top.X)\n\t\t\t\t{\n\t\t\t\t\tResult = Horz.Next;\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (E !== Result)\n\t\t\t{\n\t\t\t\tE.NextInLML = E.Prev;\n\t\t\t\tif (E.Dx === ClipperLib.ClipperBase.horizontal && E !== EStart && E.Bot.X !== E.Next.Top.X)\n\t\t\t\t\tthis.ReverseHorizontal(E);\n\t\t\t\tE = E.Prev;\n\t\t\t}\n\t\t\tif (E.Dx === ClipperLib.ClipperBase.horizontal && E !== EStart && E.Bot.X !== E.Next.Top.X)\n\t\t\t\tthis.ReverseHorizontal(E);\n\t\t\tResult = Result.Prev;\n\t\t\t//move to the edge just beyond current bound\n\t\t}\n\n\t\treturn Result;\n\t};\n\n\tClipperLib.ClipperBase.prototype.AddPath = function (pg, polyType, Closed)\n\t{\n\t\tif (ClipperLib.use_lines)\n\t\t{\n\t\t\tif (!Closed && polyType === ClipperLib.PolyType.ptClip)\n\t\t\t\tClipperLib.Error(\"AddPath: Open paths must be subject.\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (!Closed)\n\t\t\t\tClipperLib.Error(\"AddPath: Open paths have been disabled.\");\n\t\t}\n\t\tvar highI = pg.length - 1;\n\t\tif (Closed)\n\t\t\twhile (highI > 0 && (ClipperLib.IntPoint.op_Equality(pg[highI], pg[0])))\n\t\t\t\t--highI;\n\t\twhile (highI > 0 && (ClipperLib.IntPoint.op_Equality(pg[highI], pg[highI - 1])))\n\t\t\t--highI;\n\t\tif ((Closed && highI < 2) || (!Closed && highI < 1))\n\t\t\treturn false;\n\t\t//create a new edge array ...\n\t\tvar edges = new Array();\n\t\tfor (var i = 0; i <= highI; i++)\n\t\t\tedges.push(new ClipperLib.TEdge());\n\t\tvar IsFlat = true;\n\t\t//1. Basic (first) edge initialization ...\n\n\t\t//edges[1].Curr = pg[1];\n\t\tedges[1].Curr.X = pg[1].X;\n\t\tedges[1].Curr.Y = pg[1].Y;\n\t\tif (ClipperLib.use_xyz) edges[1].Curr.Z = pg[1].Z;\n\n\t\tvar $1 = {\n\t\t\tValue: this.m_UseFullRange\n\t\t};\n\n\t\tthis.RangeTest(pg[0], $1);\n\t\tthis.m_UseFullRange = $1.Value;\n\n\t\t$1.Value = this.m_UseFullRange;\n\t\tthis.RangeTest(pg[highI], $1);\n\t\tthis.m_UseFullRange = $1.Value;\n\n\t\tthis.InitEdge(edges[0], edges[1], edges[highI], pg[0]);\n\t\tthis.InitEdge(edges[highI], edges[0], edges[highI - 1], pg[highI]);\n\t\tfor (var i = highI - 1; i >= 1; --i)\n\t\t{\n\t\t\t$1.Value = this.m_UseFullRange;\n\t\t\tthis.RangeTest(pg[i], $1);\n\t\t\tthis.m_UseFullRange = $1.Value;\n\n\t\t\tthis.InitEdge(edges[i], edges[i + 1], edges[i - 1], pg[i]);\n\t\t}\n\n\t\tvar eStart = edges[0];\n\t\t//2. Remove duplicate vertices, and (when closed) collinear edges ...\n\t\tvar E = eStart,\n\t\t\teLoopStop = eStart;\n\t\tfor (;;)\n\t\t{\n\t\t\t//console.log(E.Next, eStart);\n\t\t\t//nb: allows matching start and end points when not Closed ...\n\t\t\tif (E.Curr === E.Next.Curr && (Closed || E.Next !== eStart))\n\t\t\t{\n\t\t\t\tif (E === E.Next)\n\t\t\t\t\tbreak;\n\t\t\t\tif (E === eStart)\n\t\t\t\t\teStart = E.Next;\n\t\t\t\tE = this.RemoveEdge(E);\n\t\t\t\teLoopStop = E;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (E.Prev === E.Next)\n\t\t\t\tbreak;\n\t\t\telse if (Closed && ClipperLib.ClipperBase.SlopesEqual4(E.Prev.Curr, E.Curr, E.Next.Curr, this.m_UseFullRange) && (!this.PreserveCollinear || !this.Pt2IsBetweenPt1AndPt3(E.Prev.Curr, E.Curr, E.Next.Curr)))\n\t\t\t{\n\t\t\t\t//Collinear edges are allowed for open paths but in closed paths\n\t\t\t\t//the default is to merge adjacent collinear edges into a single edge.\n\t\t\t\t//However, if the PreserveCollinear property is enabled, only overlapping\n\t\t\t\t//collinear edges (ie spikes) will be removed from closed paths.\n\t\t\t\tif (E === eStart)\n\t\t\t\t\teStart = E.Next;\n\t\t\t\tE = this.RemoveEdge(E);\n\t\t\t\tE = E.Prev;\n\t\t\t\teLoopStop = E;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tE = E.Next;\n\t\t\tif ((E === eLoopStop) || (!Closed && E.Next === eStart)) break;\n\t\t}\n\t\tif ((!Closed && (E === E.Next)) || (Closed && (E.Prev === E.Next)))\n\t\t\treturn false;\n\t\tif (!Closed)\n\t\t{\n\t\t\tthis.m_HasOpenPaths = true;\n\t\t\teStart.Prev.OutIdx = ClipperLib.ClipperBase.Skip;\n\t\t}\n\t\t//3. Do second stage of edge initialization ...\n\t\tE = eStart;\n\t\tdo {\n\t\t\tthis.InitEdge2(E, polyType);\n\t\t\tE = E.Next;\n\t\t\tif (IsFlat && E.Curr.Y !== eStart.Curr.Y)\n\t\t\t\tIsFlat = false;\n\t\t}\n\t\twhile (E !== eStart)\n\t\t//4. Finally, add edge bounds to LocalMinima list ...\n\t\t//Totally flat paths must be handled differently when adding them\n\t\t//to LocalMinima list to avoid endless loops etc ...\n\t\tif (IsFlat)\n\t\t{\n\t\t\tif (Closed)\n\t\t\t\treturn false;\n\n\t\t\tE.Prev.OutIdx = ClipperLib.ClipperBase.Skip;\n\n\t\t\tvar locMin = new ClipperLib.LocalMinima();\n\t\t\tlocMin.Next = null;\n\t\t\tlocMin.Y = E.Bot.Y;\n\t\t\tlocMin.LeftBound = null;\n\t\t\tlocMin.RightBound = E;\n\t\t\tlocMin.RightBound.Side = ClipperLib.EdgeSide.esRight;\n\t\t\tlocMin.RightBound.WindDelta = 0;\n\n\t\t\tfor (;;)\n\t\t\t{\n\t\t\t\tif (E.Bot.X !== E.Prev.Top.X) this.ReverseHorizontal(E);\n\t\t\t\tif (E.Next.OutIdx === ClipperLib.ClipperBase.Skip) break;\n\t\t\t\tE.NextInLML = E.Next;\n\t\t\t\tE = E.Next;\n\t\t\t}\n\t\t\tthis.InsertLocalMinima(locMin);\n\t\t\tthis.m_edges.push(edges);\n\t\t\treturn true;\n\t\t}\n\t\tthis.m_edges.push(edges);\n\t\tvar leftBoundIsForward;\n\t\tvar EMin = null;\n\n\t\t//workaround to avoid an endless loop in the while loop below when\n\t\t//open paths have matching start and end points ...\n\t\tif (ClipperLib.IntPoint.op_Equality(E.Prev.Bot, E.Prev.Top))\n\t\t\tE = E.Next;\n\n\t\tfor (;;)\n\t\t{\n\t\t\tE = this.FindNextLocMin(E);\n\t\t\tif (E === EMin)\n\t\t\t\tbreak;\n\t\t\telse if (EMin === null)\n\t\t\t\tEMin = E;\n\t\t\t//E and E.Prev now share a local minima (left aligned if horizontal).\n\t\t\t//Compare their slopes to find which starts which bound ...\n\t\t\tvar locMin = new ClipperLib.LocalMinima();\n\t\t\tlocMin.Next = null;\n\t\t\tlocMin.Y = E.Bot.Y;\n\t\t\tif (E.Dx < E.Prev.Dx)\n\t\t\t{\n\t\t\t\tlocMin.LeftBound = E.Prev;\n\t\t\t\tlocMin.RightBound = E;\n\t\t\t\tleftBoundIsForward = false;\n\t\t\t\t//Q.nextInLML = Q.prev\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlocMin.LeftBound = E;\n\t\t\t\tlocMin.RightBound = E.Prev;\n\t\t\t\tleftBoundIsForward = true;\n\t\t\t\t//Q.nextInLML = Q.next\n\t\t\t}\n\t\t\tlocMin.LeftBound.Side = ClipperLib.EdgeSide.esLeft;\n\t\t\tlocMin.RightBound.Side = ClipperLib.EdgeSide.esRight;\n\t\t\tif (!Closed)\n\t\t\t\tlocMin.LeftBound.WindDelta = 0;\n\t\t\telse if (locMin.LeftBound.Next === locMin.RightBound)\n\t\t\t\tlocMin.LeftBound.WindDelta = -1;\n\t\t\telse\n\t\t\t\tlocMin.LeftBound.WindDelta = 1;\n\t\t\tlocMin.RightBound.WindDelta = -locMin.LeftBound.WindDelta;\n\t\t\tE = this.ProcessBound(locMin.LeftBound, leftBoundIsForward);\n\t\t\tif (E.OutIdx === ClipperLib.ClipperBase.Skip)\n\t\t\t\tE = this.ProcessBound(E, leftBoundIsForward);\n\t\t\tvar E2 = this.ProcessBound(locMin.RightBound, !leftBoundIsForward);\n\t\t\tif (E2.OutIdx === ClipperLib.ClipperBase.Skip) E2 = this.ProcessBound(E2, !leftBoundIsForward);\n\t\t\tif (locMin.LeftBound.OutIdx === ClipperLib.ClipperBase.Skip)\n\t\t\t\tlocMin.LeftBound = null;\n\t\t\telse if (locMin.RightBound.OutIdx === ClipperLib.ClipperBase.Skip)\n\t\t\t\tlocMin.RightBound = null;\n\t\t\tthis.InsertLocalMinima(locMin);\n\t\t\tif (!leftBoundIsForward)\n\t\t\t\tE = E2;\n\t\t}\n\t\treturn true;\n\t};\n\n\tClipperLib.ClipperBase.prototype.AddPaths = function (ppg, polyType, closed)\n\t{\n\t\t//  console.log(\"-------------------------------------------\");\n\t\t//  console.log(JSON.stringify(ppg));\n\t\tvar result = false;\n\t\tfor (var i = 0, ilen = ppg.length; i < ilen; ++i)\n\t\t\tif (this.AddPath(ppg[i], polyType, closed))\n\t\t\t\tresult = true;\n\t\treturn result;\n\t};\n\n\tClipperLib.ClipperBase.prototype.Pt2IsBetweenPt1AndPt3 = function (pt1, pt2, pt3)\n\t{\n\t\tif ((ClipperLib.IntPoint.op_Equality(pt1, pt3)) || (ClipperLib.IntPoint.op_Equality(pt1, pt2)) || (ClipperLib.IntPoint.op_Equality(pt3, pt2)))\n\n\t\t\t//if ((pt1 == pt3) || (pt1 == pt2) || (pt3 == pt2))\n\t\t\treturn false;\n\n\t\telse if (pt1.X !== pt3.X)\n\t\t\treturn (pt2.X > pt1.X) === (pt2.X < pt3.X);\n\t\telse\n\t\t\treturn (pt2.Y > pt1.Y) === (pt2.Y < pt3.Y);\n\t};\n\n\tClipperLib.ClipperBase.prototype.RemoveEdge = function (e)\n\t{\n\t\t//removes e from double_linked_list (but without removing from memory)\n\t\te.Prev.Next = e.Next;\n\t\te.Next.Prev = e.Prev;\n\t\tvar result = e.Next;\n\t\te.Prev = null; //flag as removed (see ClipperBase.Clear)\n\t\treturn result;\n\t};\n\n\tClipperLib.ClipperBase.prototype.SetDx = function (e)\n\t{\n\t\te.Delta.X = (e.Top.X - e.Bot.X);\n\t\te.Delta.Y = (e.Top.Y - e.Bot.Y);\n\t\tif (e.Delta.Y === 0) e.Dx = ClipperLib.ClipperBase.horizontal;\n\t\telse e.Dx = (e.Delta.X) / (e.Delta.Y);\n\t};\n\n\tClipperLib.ClipperBase.prototype.InsertLocalMinima = function (newLm)\n\t{\n\t\tif (this.m_MinimaList === null)\n\t\t{\n\t\t\tthis.m_MinimaList = newLm;\n\t\t}\n\t\telse if (newLm.Y >= this.m_MinimaList.Y)\n\t\t{\n\t\t\tnewLm.Next = this.m_MinimaList;\n\t\t\tthis.m_MinimaList = newLm;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar tmpLm = this.m_MinimaList;\n\t\t\twhile (tmpLm.Next !== null && (newLm.Y < tmpLm.Next.Y))\n\t\t\t\ttmpLm = tmpLm.Next;\n\t\t\tnewLm.Next = tmpLm.Next;\n\t\t\ttmpLm.Next = newLm;\n\t\t}\n\t};\n\n\tClipperLib.ClipperBase.prototype.PopLocalMinima = function (Y, current)\n\t{\n\t\tcurrent.v = this.m_CurrentLM;\n\t\tif (this.m_CurrentLM !== null && this.m_CurrentLM.Y === Y)\n\t\t{\n\t\t\tthis.m_CurrentLM = this.m_CurrentLM.Next;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tClipperLib.ClipperBase.prototype.ReverseHorizontal = function (e)\n\t{\n\t\t//swap horizontal edges' top and bottom x's so they follow the natural\n\t\t//progression of the bounds - ie so their xbots will align with the\n\t\t//adjoining lower edge. [Helpful in the ProcessHorizontal() method.]\n\t\tvar tmp = e.Top.X;\n\t\te.Top.X = e.Bot.X;\n\t\te.Bot.X = tmp;\n\t\tif (ClipperLib.use_xyz)\n\t\t{\n\t\t\ttmp = e.Top.Z;\n\t\t\te.Top.Z = e.Bot.Z;\n\t\t\te.Bot.Z = tmp;\n\t\t}\n\t};\n\n\tClipperLib.ClipperBase.prototype.Reset = function ()\n\t{\n\t\tthis.m_CurrentLM = this.m_MinimaList;\n\t\tif (this.m_CurrentLM === null) //ie nothing to process\n\t\t\treturn;\n\t\t//reset all edges ...\n\t\tthis.m_Scanbeam = null;\n\t\tvar lm = this.m_MinimaList;\n\t\twhile (lm !== null)\n\t\t{\n\t\t\tthis.InsertScanbeam(lm.Y);\n\t\t\tvar e = lm.LeftBound;\n\t\t\tif (e !== null)\n\t\t\t{\n\t\t\t\t//e.Curr = e.Bot;\n\t\t\t\te.Curr.X = e.Bot.X;\n\t\t\t\te.Curr.Y = e.Bot.Y;\n\t\t\t\tif (ClipperLib.use_xyz) e.Curr.Z = e.Bot.Z;\n\t\t\t\te.OutIdx = ClipperLib.ClipperBase.Unassigned;\n\t\t\t}\n\t\t\te = lm.RightBound;\n\t\t\tif (e !== null)\n\t\t\t{\n\t\t\t\t//e.Curr = e.Bot;\n\t\t\t\te.Curr.X = e.Bot.X;\n\t\t\t\te.Curr.Y = e.Bot.Y;\n\t\t\t\tif (ClipperLib.use_xyz) e.Curr.Z = e.Bot.Z;\n\t\t\t\te.OutIdx = ClipperLib.ClipperBase.Unassigned;\n\t\t\t}\n\t\t\tlm = lm.Next;\n\t\t}\n\t\tthis.m_ActiveEdges = null;\n\t};\n\n\tClipperLib.ClipperBase.prototype.InsertScanbeam = function (Y)\n\t{\n\t\t//single-linked list: sorted descending, ignoring dups.\n\t\tif (this.m_Scanbeam === null)\n\t\t{\n\t\t\tthis.m_Scanbeam = new ClipperLib.Scanbeam();\n\t\t\tthis.m_Scanbeam.Next = null;\n\t\t\tthis.m_Scanbeam.Y = Y;\n\t\t}\n\t\telse if (Y > this.m_Scanbeam.Y)\n\t\t{\n\t\t\tvar newSb = new ClipperLib.Scanbeam();\n\t\t\tnewSb.Y = Y;\n\t\t\tnewSb.Next = this.m_Scanbeam;\n\t\t\tthis.m_Scanbeam = newSb;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar sb2 = this.m_Scanbeam;\n\t\t\twhile (sb2.Next !== null && Y <= sb2.Next.Y)\n\t\t\t{\n\t\t\t\tsb2 = sb2.Next;\n\t\t\t}\n\t\t\tif (Y === sb2.Y)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t} //ie ignores duplicates\n\t\t\tvar newSb1 = new ClipperLib.Scanbeam();\n\t\t\tnewSb1.Y = Y;\n\t\t\tnewSb1.Next = sb2.Next;\n\t\t\tsb2.Next = newSb1;\n\t\t}\n\t};\n\n\tClipperLib.ClipperBase.prototype.PopScanbeam = function (Y)\n\t{\n\t\tif (this.m_Scanbeam === null)\n\t\t{\n\t\t\tY.v = 0;\n\t\t\treturn false;\n\t\t}\n\t\tY.v = this.m_Scanbeam.Y;\n\t\tthis.m_Scanbeam = this.m_Scanbeam.Next;\n\t\treturn true;\n\t};\n\n\tClipperLib.ClipperBase.prototype.LocalMinimaPending = function ()\n\t{\n\t\treturn (this.m_CurrentLM !== null);\n\t};\n\n\tClipperLib.ClipperBase.prototype.CreateOutRec = function ()\n\t{\n\t\tvar result = new ClipperLib.OutRec();\n\t\tresult.Idx = ClipperLib.ClipperBase.Unassigned;\n\t\tresult.IsHole = false;\n\t\tresult.IsOpen = false;\n\t\tresult.FirstLeft = null;\n\t\tresult.Pts = null;\n\t\tresult.BottomPt = null;\n\t\tresult.PolyNode = null;\n\t\tthis.m_PolyOuts.push(result);\n\t\tresult.Idx = this.m_PolyOuts.length - 1;\n\t\treturn result;\n\t};\n\n\tClipperLib.ClipperBase.prototype.DisposeOutRec = function (index)\n\t{\n\t\tvar outRec = this.m_PolyOuts[index];\n\t\toutRec.Pts = null;\n\t\toutRec = null;\n\t\tthis.m_PolyOuts[index] = null;\n\t};\n\n\tClipperLib.ClipperBase.prototype.UpdateEdgeIntoAEL = function (e)\n\t{\n\t\tif (e.NextInLML === null)\n\t\t{\n\t\t\tClipperLib.Error(\"UpdateEdgeIntoAEL: invalid call\");\n\t\t}\n\t\tvar AelPrev = e.PrevInAEL;\n\t\tvar AelNext = e.NextInAEL;\n\t\te.NextInLML.OutIdx = e.OutIdx;\n\t\tif (AelPrev !== null)\n\t\t{\n\t\t\tAelPrev.NextInAEL = e.NextInLML;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.m_ActiveEdges = e.NextInLML;\n\t\t}\n\t\tif (AelNext !== null)\n\t\t{\n\t\t\tAelNext.PrevInAEL = e.NextInLML;\n\t\t}\n\t\te.NextInLML.Side = e.Side;\n\t\te.NextInLML.WindDelta = e.WindDelta;\n\t\te.NextInLML.WindCnt = e.WindCnt;\n\t\te.NextInLML.WindCnt2 = e.WindCnt2;\n\t\te = e.NextInLML;\n\t\te.Curr.X = e.Bot.X;\n\t\te.Curr.Y = e.Bot.Y;\n\t\te.PrevInAEL = AelPrev;\n\t\te.NextInAEL = AelNext;\n\t\tif (!ClipperLib.ClipperBase.IsHorizontal(e))\n\t\t{\n\t\t\tthis.InsertScanbeam(e.Top.Y);\n\t\t}\n\t\treturn e;\n\t};\n\n\tClipperLib.ClipperBase.prototype.SwapPositionsInAEL = function (edge1, edge2)\n\t{\n\t\t//check that one or other edge hasn't already been removed from AEL ...\n\t\tif (edge1.NextInAEL === edge1.PrevInAEL || edge2.NextInAEL === edge2.PrevInAEL)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (edge1.NextInAEL === edge2)\n\t\t{\n\t\t\tvar next = edge2.NextInAEL;\n\t\t\tif (next !== null)\n\t\t\t{\n\t\t\t\tnext.PrevInAEL = edge1;\n\t\t\t}\n\t\t\tvar prev = edge1.PrevInAEL;\n\t\t\tif (prev !== null)\n\t\t\t{\n\t\t\t\tprev.NextInAEL = edge2;\n\t\t\t}\n\t\t\tedge2.PrevInAEL = prev;\n\t\t\tedge2.NextInAEL = edge1;\n\t\t\tedge1.PrevInAEL = edge2;\n\t\t\tedge1.NextInAEL = next;\n\t\t}\n\t\telse if (edge2.NextInAEL === edge1)\n\t\t{\n\t\t\tvar next1 = edge1.NextInAEL;\n\t\t\tif (next1 !== null)\n\t\t\t{\n\t\t\t\tnext1.PrevInAEL = edge2;\n\t\t\t}\n\t\t\tvar prev1 = edge2.PrevInAEL;\n\t\t\tif (prev1 !== null)\n\t\t\t{\n\t\t\t\tprev1.NextInAEL = edge1;\n\t\t\t}\n\t\t\tedge1.PrevInAEL = prev1;\n\t\t\tedge1.NextInAEL = edge2;\n\t\t\tedge2.PrevInAEL = edge1;\n\t\t\tedge2.NextInAEL = next1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar next2 = edge1.NextInAEL;\n\t\t\tvar prev2 = edge1.PrevInAEL;\n\t\t\tedge1.NextInAEL = edge2.NextInAEL;\n\t\t\tif (edge1.NextInAEL !== null)\n\t\t\t{\n\t\t\t\tedge1.NextInAEL.PrevInAEL = edge1;\n\t\t\t}\n\t\t\tedge1.PrevInAEL = edge2.PrevInAEL;\n\t\t\tif (edge1.PrevInAEL !== null)\n\t\t\t{\n\t\t\t\tedge1.PrevInAEL.NextInAEL = edge1;\n\t\t\t}\n\t\t\tedge2.NextInAEL = next2;\n\t\t\tif (edge2.NextInAEL !== null)\n\t\t\t{\n\t\t\t\tedge2.NextInAEL.PrevInAEL = edge2;\n\t\t\t}\n\t\t\tedge2.PrevInAEL = prev2;\n\t\t\tif (edge2.PrevInAEL !== null)\n\t\t\t{\n\t\t\t\tedge2.PrevInAEL.NextInAEL = edge2;\n\t\t\t}\n\t\t}\n\n\t\tif (edge1.PrevInAEL === null)\n\t\t{\n\t\t\tthis.m_ActiveEdges = edge1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (edge2.PrevInAEL === null)\n\t\t\t{\n\t\t\t\tthis.m_ActiveEdges = edge2;\n\t\t\t}\n\t\t}\n\t};\n\n\tClipperLib.ClipperBase.prototype.DeleteFromAEL = function (e)\n\t{\n\t\tvar AelPrev = e.PrevInAEL;\n\t\tvar AelNext = e.NextInAEL;\n\t\tif (AelPrev === null && AelNext === null && e !== this.m_ActiveEdges)\n\t\t{\n\t\t\treturn;\n\t\t} //already deleted\n\t\tif (AelPrev !== null)\n\t\t{\n\t\t\tAelPrev.NextInAEL = AelNext;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.m_ActiveEdges = AelNext;\n\t\t}\n\t\tif (AelNext !== null)\n\t\t{\n\t\t\tAelNext.PrevInAEL = AelPrev;\n\t\t}\n\t\te.NextInAEL = null;\n\t\te.PrevInAEL = null;\n\t}\n\n\t// public Clipper(int InitOptions = 0)\n\t/**\n\t * @suppress {missingProperties}\n\t */\n\tClipperLib.Clipper = function (InitOptions)\n\t{\n\t\tif (typeof (InitOptions) === \"undefined\") InitOptions = 0;\n\t\tthis.m_PolyOuts = null;\n\t\tthis.m_ClipType = ClipperLib.ClipType.ctIntersection;\n\t\tthis.m_Scanbeam = null;\n\t\tthis.m_Maxima = null;\n\t\tthis.m_ActiveEdges = null;\n\t\tthis.m_SortedEdges = null;\n\t\tthis.m_IntersectList = null;\n\t\tthis.m_IntersectNodeComparer = null;\n\t\tthis.m_ExecuteLocked = false;\n\t\tthis.m_ClipFillType = ClipperLib.PolyFillType.pftEvenOdd;\n\t\tthis.m_SubjFillType = ClipperLib.PolyFillType.pftEvenOdd;\n\t\tthis.m_Joins = null;\n\t\tthis.m_GhostJoins = null;\n\t\tthis.m_UsingPolyTree = false;\n\t\tthis.ReverseSolution = false;\n\t\tthis.StrictlySimple = false;\n\n\t\tClipperLib.ClipperBase.call(this);\n\n\t\tthis.m_Scanbeam = null;\n\t\tthis.m_Maxima = null;\n\t\tthis.m_ActiveEdges = null;\n\t\tthis.m_SortedEdges = null;\n\t\tthis.m_IntersectList = new Array();\n\t\tthis.m_IntersectNodeComparer = ClipperLib.MyIntersectNodeSort.Compare;\n\t\tthis.m_ExecuteLocked = false;\n\t\tthis.m_UsingPolyTree = false;\n\t\tthis.m_PolyOuts = new Array();\n\t\tthis.m_Joins = new Array();\n\t\tthis.m_GhostJoins = new Array();\n\t\tthis.ReverseSolution = (1 & InitOptions) !== 0;\n\t\tthis.StrictlySimple = (2 & InitOptions) !== 0;\n\t\tthis.PreserveCollinear = (4 & InitOptions) !== 0;\n\t\tif (ClipperLib.use_xyz)\n\t\t{\n\t\t\tthis.ZFillFunction = null; // function (IntPoint vert1, IntPoint vert2, ref IntPoint intersectPt);\n\t\t}\n\t};\n\n\tClipperLib.Clipper.ioReverseSolution = 1;\n\tClipperLib.Clipper.ioStrictlySimple = 2;\n\tClipperLib.Clipper.ioPreserveCollinear = 4;\n\n\tClipperLib.Clipper.prototype.Clear = function ()\n\t{\n\t\tif (this.m_edges.length === 0)\n\t\t\treturn;\n\t\t//avoids problems with ClipperBase destructor\n\t\tthis.DisposeAllPolyPts();\n\t\tClipperLib.ClipperBase.prototype.Clear.call(this);\n\t};\n\n\tClipperLib.Clipper.prototype.InsertMaxima = function (X)\n\t{\n\t\t//double-linked list: sorted ascending, ignoring dups.\n\t\tvar newMax = new ClipperLib.Maxima();\n\t\tnewMax.X = X;\n\t\tif (this.m_Maxima === null)\n\t\t{\n\t\t\tthis.m_Maxima = newMax;\n\t\t\tthis.m_Maxima.Next = null;\n\t\t\tthis.m_Maxima.Prev = null;\n\t\t}\n\t\telse if (X < this.m_Maxima.X)\n\t\t{\n\t\t\tnewMax.Next = this.m_Maxima;\n\t\t\tnewMax.Prev = null;\n\t\t\tthis.m_Maxima = newMax;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar m = this.m_Maxima;\n\t\t\twhile (m.Next !== null && X >= m.Next.X)\n\t\t\t{\n\t\t\t\tm = m.Next;\n\t\t\t}\n\t\t\tif (X === m.X)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t} //ie ignores duplicates (& CG to clean up newMax)\n\t\t\t//insert newMax between m and m.Next ...\n\t\t\tnewMax.Next = m.Next;\n\t\t\tnewMax.Prev = m;\n\t\t\tif (m.Next !== null)\n\t\t\t{\n\t\t\t\tm.Next.Prev = newMax;\n\t\t\t}\n\t\t\tm.Next = newMax;\n\t\t}\n\t};\n\n\t// ************************************\n\tClipperLib.Clipper.prototype.Execute = function ()\n\t{\n\t\tvar a = arguments,\n\t\t\talen = a.length,\n\t\t\tispolytree = a[1] instanceof ClipperLib.PolyTree;\n\t\tif (alen === 4 && !ispolytree) // function (clipType, solution, subjFillType, clipFillType)\n\t\t{\n\t\t\tvar clipType = a[0],\n\t\t\t\tsolution = a[1],\n\t\t\t\tsubjFillType = a[2],\n\t\t\t\tclipFillType = a[3];\n\t\t\tif (this.m_ExecuteLocked)\n\t\t\t\treturn false;\n\t\t\tif (this.m_HasOpenPaths)\n\t\t\t\tClipperLib.Error(\"Error: PolyTree struct is needed for open path clipping.\");\n\t\t\tthis.m_ExecuteLocked = true;\n\t\t\tClipperLib.Clear(solution);\n\t\t\tthis.m_SubjFillType = subjFillType;\n\t\t\tthis.m_ClipFillType = clipFillType;\n\t\t\tthis.m_ClipType = clipType;\n\t\t\tthis.m_UsingPolyTree = false;\n\t\t\ttry\n\t\t\t{\n\t\t\t\tvar succeeded = this.ExecuteInternal();\n\t\t\t\t//build the return polygons ...\n\t\t\t\tif (succeeded) this.BuildResult(solution);\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tthis.DisposeAllPolyPts();\n\t\t\t\tthis.m_ExecuteLocked = false;\n\t\t\t}\n\t\t\treturn succeeded;\n\t\t}\n\t\telse if (alen === 4 && ispolytree) // function (clipType, polytree, subjFillType, clipFillType)\n\t\t{\n\t\t\tvar clipType = a[0],\n\t\t\t\tpolytree = a[1],\n\t\t\t\tsubjFillType = a[2],\n\t\t\t\tclipFillType = a[3];\n\t\t\tif (this.m_ExecuteLocked)\n\t\t\t\treturn false;\n\t\t\tthis.m_ExecuteLocked = true;\n\t\t\tthis.m_SubjFillType = subjFillType;\n\t\t\tthis.m_ClipFillType = clipFillType;\n\t\t\tthis.m_ClipType = clipType;\n\t\t\tthis.m_UsingPolyTree = true;\n\t\t\ttry\n\t\t\t{\n\t\t\t\tvar succeeded = this.ExecuteInternal();\n\t\t\t\t//build the return polygons ...\n\t\t\t\tif (succeeded) this.BuildResult2(polytree);\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tthis.DisposeAllPolyPts();\n\t\t\t\tthis.m_ExecuteLocked = false;\n\t\t\t}\n\t\t\treturn succeeded;\n\t\t}\n\t\telse if (alen === 2 && !ispolytree) // function (clipType, solution)\n\t\t{\n\t\t\tvar clipType = a[0],\n\t\t\t\tsolution = a[1];\n\t\t\treturn this.Execute(clipType, solution, ClipperLib.PolyFillType.pftEvenOdd, ClipperLib.PolyFillType.pftEvenOdd);\n\t\t}\n\t\telse if (alen === 2 && ispolytree) // function (clipType, polytree)\n\t\t{\n\t\t\tvar clipType = a[0],\n\t\t\t\tpolytree = a[1];\n\t\t\treturn this.Execute(clipType, polytree, ClipperLib.PolyFillType.pftEvenOdd, ClipperLib.PolyFillType.pftEvenOdd);\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.FixHoleLinkage = function (outRec)\n\t{\n\t\t//skip if an outermost polygon or\n\t\t//already already points to the correct FirstLeft ...\n\t\tif (outRec.FirstLeft === null || (outRec.IsHole !== outRec.FirstLeft.IsHole && outRec.FirstLeft.Pts !== null))\n\t\t\treturn;\n\t\tvar orfl = outRec.FirstLeft;\n\t\twhile (orfl !== null && ((orfl.IsHole === outRec.IsHole) || orfl.Pts === null))\n\t\t\torfl = orfl.FirstLeft;\n\t\toutRec.FirstLeft = orfl;\n\t};\n\n\tClipperLib.Clipper.prototype.ExecuteInternal = function ()\n\t{\n\t\ttry\n\t\t{\n\t\t\tthis.Reset();\n\t\t\tthis.m_SortedEdges = null;\n\t\t\tthis.m_Maxima = null;\n\n\t\t\tvar botY = {},\n\t\t\t\ttopY = {};\n\n\t\t\tif (!this.PopScanbeam(botY))\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.InsertLocalMinimaIntoAEL(botY.v);\n\t\t\twhile (this.PopScanbeam(topY) || this.LocalMinimaPending())\n\t\t\t{\n\t\t\t\tthis.ProcessHorizontals();\n\t\t\t\tthis.m_GhostJoins.length = 0;\n\t\t\t\tif (!this.ProcessIntersections(topY.v))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tthis.ProcessEdgesAtTopOfScanbeam(topY.v);\n\t\t\t\tbotY.v = topY.v;\n\t\t\t\tthis.InsertLocalMinimaIntoAEL(botY.v);\n\t\t\t}\n\n\t\t\t//fix orientations ...\n\t\t\tvar outRec, i, ilen;\n\t\t\t//fix orientations ...\n\t\t\tfor (i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n\t\t\t{\n\t\t\t\toutRec = this.m_PolyOuts[i];\n\t\t\t\tif (outRec.Pts === null || outRec.IsOpen) continue;\n\t\t\t\tif ((outRec.IsHole ^ this.ReverseSolution) == (this.Area$1(outRec) > 0))\n\t\t\t\t\tthis.ReversePolyPtLinks(outRec.Pts);\n\t\t\t}\n\n\t\t\tthis.JoinCommonEdges();\n\n\t\t\tfor (i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n\t\t\t{\n\t\t\t\toutRec = this.m_PolyOuts[i];\n\t\t\t\tif (outRec.Pts === null)\n\t\t\t\t\tcontinue;\n\t\t\t\telse if (outRec.IsOpen)\n\t\t\t\t\tthis.FixupOutPolyline(outRec);\n\t\t\t\telse\n\t\t\t\t\tthis.FixupOutPolygon(outRec);\n\t\t\t}\n\n\t\t\tif (this.StrictlySimple) this.DoSimplePolygons();\n\t\t\treturn true;\n\t\t}\n\t\t//catch { return false; }\n\t\tfinally\n\t\t{\n\t\t\tthis.m_Joins.length = 0;\n\t\t\tthis.m_GhostJoins.length = 0;\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.DisposeAllPolyPts = function ()\n\t{\n\t\tfor (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; ++i)\n\t\t\tthis.DisposeOutRec(i);\n\t\tClipperLib.Clear(this.m_PolyOuts);\n\t};\n\n\tClipperLib.Clipper.prototype.AddJoin = function (Op1, Op2, OffPt)\n\t{\n\t\tvar j = new ClipperLib.Join();\n\t\tj.OutPt1 = Op1;\n\t\tj.OutPt2 = Op2;\n\t\t//j.OffPt = OffPt;\n\t\tj.OffPt.X = OffPt.X;\n\t\tj.OffPt.Y = OffPt.Y;\n\t\tif (ClipperLib.use_xyz) j.OffPt.Z = OffPt.Z;\n\t\tthis.m_Joins.push(j);\n\t};\n\n\tClipperLib.Clipper.prototype.AddGhostJoin = function (Op, OffPt)\n\t{\n\t\tvar j = new ClipperLib.Join();\n\t\tj.OutPt1 = Op;\n\t\t//j.OffPt = OffPt;\n\t\tj.OffPt.X = OffPt.X;\n\t\tj.OffPt.Y = OffPt.Y;\n\t\tif (ClipperLib.use_xyz) j.OffPt.Z = OffPt.Z;\n\t\tthis.m_GhostJoins.push(j);\n\t};\n\n\t//if (ClipperLib.use_xyz)\n\t//{\n\tClipperLib.Clipper.prototype.SetZ = function (pt, e1, e2)\n\t{\n\t\tif (this.ZFillFunction !== null)\n\t\t{\n\t\t\tif (pt.Z !== 0 || this.ZFillFunction === null) return;\n\t\t\telse if (ClipperLib.IntPoint.op_Equality(pt, e1.Bot)) pt.Z = e1.Bot.Z;\n\t\t\telse if (ClipperLib.IntPoint.op_Equality(pt, e1.Top)) pt.Z = e1.Top.Z;\n\t\t\telse if (ClipperLib.IntPoint.op_Equality(pt, e2.Bot)) pt.Z = e2.Bot.Z;\n\t\t\telse if (ClipperLib.IntPoint.op_Equality(pt, e2.Top)) pt.Z = e2.Top.Z;\n\t\t\telse this.ZFillFunction(e1.Bot, e1.Top, e2.Bot, e2.Top, pt);\n\t\t}\n\t};\n\t//}\n\n\tClipperLib.Clipper.prototype.InsertLocalMinimaIntoAEL = function (botY)\n\t{\n\t\tvar lm = {};\n\n\t\tvar lb;\n\t\tvar rb;\n\t\twhile (this.PopLocalMinima(botY, lm))\n\t\t{\n\t\t\tlb = lm.v.LeftBound;\n\t\t\trb = lm.v.RightBound;\n\n\t\t\tvar Op1 = null;\n\t\t\tif (lb === null)\n\t\t\t{\n\t\t\t\tthis.InsertEdgeIntoAEL(rb, null);\n\t\t\t\tthis.SetWindingCount(rb);\n\t\t\t\tif (this.IsContributing(rb))\n\t\t\t\t\tOp1 = this.AddOutPt(rb, rb.Bot);\n\t\t\t}\n\t\t\telse if (rb === null)\n\t\t\t{\n\t\t\t\tthis.InsertEdgeIntoAEL(lb, null);\n\t\t\t\tthis.SetWindingCount(lb);\n\t\t\t\tif (this.IsContributing(lb))\n\t\t\t\t\tOp1 = this.AddOutPt(lb, lb.Bot);\n\t\t\t\tthis.InsertScanbeam(lb.Top.Y);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.InsertEdgeIntoAEL(lb, null);\n\t\t\t\tthis.InsertEdgeIntoAEL(rb, lb);\n\t\t\t\tthis.SetWindingCount(lb);\n\t\t\t\trb.WindCnt = lb.WindCnt;\n\t\t\t\trb.WindCnt2 = lb.WindCnt2;\n\t\t\t\tif (this.IsContributing(lb))\n\t\t\t\t\tOp1 = this.AddLocalMinPoly(lb, rb, lb.Bot);\n\t\t\t\tthis.InsertScanbeam(lb.Top.Y);\n\t\t\t}\n\t\t\tif (rb !== null)\n\t\t\t{\n\t\t\t\tif (ClipperLib.ClipperBase.IsHorizontal(rb))\n\t\t\t\t{\n\t\t\t\t\tif (rb.NextInLML !== null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.InsertScanbeam(rb.NextInLML.Top.Y);\n\t\t\t\t\t}\n\t\t\t\t\tthis.AddEdgeToSEL(rb);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.InsertScanbeam(rb.Top.Y);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lb === null || rb === null) continue;\n\t\t\t//if output polygons share an Edge with a horizontal rb, they'll need joining later ...\n\t\t\tif (Op1 !== null && ClipperLib.ClipperBase.IsHorizontal(rb) && this.m_GhostJoins.length > 0 && rb.WindDelta !== 0)\n\t\t\t{\n\t\t\t\tfor (var i = 0, ilen = this.m_GhostJoins.length; i < ilen; i++)\n\t\t\t\t{\n\t\t\t\t\t//if the horizontal Rb and a 'ghost' horizontal overlap, then convert\n\t\t\t\t\t//the 'ghost' join to a real join ready for later ...\n\t\t\t\t\tvar j = this.m_GhostJoins[i];\n\n\t\t\t\t\tif (this.HorzSegmentsOverlap(j.OutPt1.Pt.X, j.OffPt.X, rb.Bot.X, rb.Top.X))\n\t\t\t\t\t\tthis.AddJoin(j.OutPt1, Op1, j.OffPt);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (lb.OutIdx >= 0 && lb.PrevInAEL !== null &&\n\t\t\t\tlb.PrevInAEL.Curr.X === lb.Bot.X &&\n\t\t\t\tlb.PrevInAEL.OutIdx >= 0 &&\n\t\t\t\tClipperLib.ClipperBase.SlopesEqual5(lb.PrevInAEL.Curr, lb.PrevInAEL.Top, lb.Curr, lb.Top, this.m_UseFullRange) &&\n\t\t\t\tlb.WindDelta !== 0 && lb.PrevInAEL.WindDelta !== 0)\n\t\t\t{\n\t\t\t\tvar Op2 = this.AddOutPt(lb.PrevInAEL, lb.Bot);\n\t\t\t\tthis.AddJoin(Op1, Op2, lb.Top);\n\t\t\t}\n\t\t\tif (lb.NextInAEL !== rb)\n\t\t\t{\n\t\t\t\tif (rb.OutIdx >= 0 && rb.PrevInAEL.OutIdx >= 0 &&\n\t\t\t\t\tClipperLib.ClipperBase.SlopesEqual5(rb.PrevInAEL.Curr, rb.PrevInAEL.Top, rb.Curr, rb.Top, this.m_UseFullRange) &&\n\t\t\t\t\trb.WindDelta !== 0 && rb.PrevInAEL.WindDelta !== 0)\n\t\t\t\t{\n\t\t\t\t\tvar Op2 = this.AddOutPt(rb.PrevInAEL, rb.Bot);\n\t\t\t\t\tthis.AddJoin(Op1, Op2, rb.Top);\n\t\t\t\t}\n\t\t\t\tvar e = lb.NextInAEL;\n\t\t\t\tif (e !== null)\n\t\t\t\t\twhile (e !== rb)\n\t\t\t\t\t{\n\t\t\t\t\t\t//nb: For calculating winding counts etc, IntersectEdges() assumes\n\t\t\t\t\t\t//that param1 will be to the right of param2 ABOVE the intersection ...\n\t\t\t\t\t\tthis.IntersectEdges(rb, e, lb.Curr);\n\t\t\t\t\t\t//order important here\n\t\t\t\t\t\te = e.NextInAEL;\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.InsertEdgeIntoAEL = function (edge, startEdge)\n\t{\n\t\tif (this.m_ActiveEdges === null)\n\t\t{\n\t\t\tedge.PrevInAEL = null;\n\t\t\tedge.NextInAEL = null;\n\t\t\tthis.m_ActiveEdges = edge;\n\t\t}\n\t\telse if (startEdge === null && this.E2InsertsBeforeE1(this.m_ActiveEdges, edge))\n\t\t{\n\t\t\tedge.PrevInAEL = null;\n\t\t\tedge.NextInAEL = this.m_ActiveEdges;\n\t\t\tthis.m_ActiveEdges.PrevInAEL = edge;\n\t\t\tthis.m_ActiveEdges = edge;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (startEdge === null)\n\t\t\t\tstartEdge = this.m_ActiveEdges;\n\t\t\twhile (startEdge.NextInAEL !== null && !this.E2InsertsBeforeE1(startEdge.NextInAEL, edge))\n\t\t\t\tstartEdge = startEdge.NextInAEL;\n\t\t\tedge.NextInAEL = startEdge.NextInAEL;\n\t\t\tif (startEdge.NextInAEL !== null)\n\t\t\t\tstartEdge.NextInAEL.PrevInAEL = edge;\n\t\t\tedge.PrevInAEL = startEdge;\n\t\t\tstartEdge.NextInAEL = edge;\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.E2InsertsBeforeE1 = function (e1, e2)\n\t{\n\t\tif (e2.Curr.X === e1.Curr.X)\n\t\t{\n\t\t\tif (e2.Top.Y > e1.Top.Y)\n\t\t\t\treturn e2.Top.X < ClipperLib.Clipper.TopX(e1, e2.Top.Y);\n\t\t\telse\n\t\t\t\treturn e1.Top.X > ClipperLib.Clipper.TopX(e2, e1.Top.Y);\n\t\t}\n\t\telse\n\t\t\treturn e2.Curr.X < e1.Curr.X;\n\t};\n\n\tClipperLib.Clipper.prototype.IsEvenOddFillType = function (edge)\n\t{\n\t\tif (edge.PolyTyp === ClipperLib.PolyType.ptSubject)\n\t\t\treturn this.m_SubjFillType === ClipperLib.PolyFillType.pftEvenOdd;\n\t\telse\n\t\t\treturn this.m_ClipFillType === ClipperLib.PolyFillType.pftEvenOdd;\n\t};\n\n\tClipperLib.Clipper.prototype.IsEvenOddAltFillType = function (edge)\n\t{\n\t\tif (edge.PolyTyp === ClipperLib.PolyType.ptSubject)\n\t\t\treturn this.m_ClipFillType === ClipperLib.PolyFillType.pftEvenOdd;\n\t\telse\n\t\t\treturn this.m_SubjFillType === ClipperLib.PolyFillType.pftEvenOdd;\n\t};\n\n\tClipperLib.Clipper.prototype.IsContributing = function (edge)\n\t{\n\t\tvar pft, pft2;\n\t\tif (edge.PolyTyp === ClipperLib.PolyType.ptSubject)\n\t\t{\n\t\t\tpft = this.m_SubjFillType;\n\t\t\tpft2 = this.m_ClipFillType;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpft = this.m_ClipFillType;\n\t\t\tpft2 = this.m_SubjFillType;\n\t\t}\n\t\tswitch (pft)\n\t\t{\n\t\tcase ClipperLib.PolyFillType.pftEvenOdd:\n\t\t\tif (edge.WindDelta === 0 && edge.WindCnt !== 1)\n\t\t\t\treturn false;\n\t\t\tbreak;\n\t\tcase ClipperLib.PolyFillType.pftNonZero:\n\t\t\tif (Math.abs(edge.WindCnt) !== 1)\n\t\t\t\treturn false;\n\t\t\tbreak;\n\t\tcase ClipperLib.PolyFillType.pftPositive:\n\t\t\tif (edge.WindCnt !== 1)\n\t\t\t\treturn false;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (edge.WindCnt !== -1)\n\t\t\t\treturn false;\n\t\t\tbreak;\n\t\t}\n\t\tswitch (this.m_ClipType)\n\t\t{\n\t\tcase ClipperLib.ClipType.ctIntersection:\n\t\t\tswitch (pft2)\n\t\t\t{\n\t\t\tcase ClipperLib.PolyFillType.pftEvenOdd:\n\t\t\tcase ClipperLib.PolyFillType.pftNonZero:\n\t\t\t\treturn (edge.WindCnt2 !== 0);\n\t\t\tcase ClipperLib.PolyFillType.pftPositive:\n\t\t\t\treturn (edge.WindCnt2 > 0);\n\t\t\tdefault:\n\t\t\t\treturn (edge.WindCnt2 < 0);\n\t\t\t}\n\t\tcase ClipperLib.ClipType.ctUnion:\n\t\t\tswitch (pft2)\n\t\t\t{\n\t\t\tcase ClipperLib.PolyFillType.pftEvenOdd:\n\t\t\tcase ClipperLib.PolyFillType.pftNonZero:\n\t\t\t\treturn (edge.WindCnt2 === 0);\n\t\t\tcase ClipperLib.PolyFillType.pftPositive:\n\t\t\t\treturn (edge.WindCnt2 <= 0);\n\t\t\tdefault:\n\t\t\t\treturn (edge.WindCnt2 >= 0);\n\t\t\t}\n\t\tcase ClipperLib.ClipType.ctDifference:\n\t\t\tif (edge.PolyTyp === ClipperLib.PolyType.ptSubject)\n\t\t\t\tswitch (pft2)\n\t\t\t\t{\n\t\t\t\tcase ClipperLib.PolyFillType.pftEvenOdd:\n\t\t\t\tcase ClipperLib.PolyFillType.pftNonZero:\n\t\t\t\t\treturn (edge.WindCnt2 === 0);\n\t\t\t\tcase ClipperLib.PolyFillType.pftPositive:\n\t\t\t\t\treturn (edge.WindCnt2 <= 0);\n\t\t\t\tdefault:\n\t\t\t\t\treturn (edge.WindCnt2 >= 0);\n\t\t\t\t}\n\t\t\telse\n\t\t\t\tswitch (pft2)\n\t\t\t\t{\n\t\t\t\tcase ClipperLib.PolyFillType.pftEvenOdd:\n\t\t\t\tcase ClipperLib.PolyFillType.pftNonZero:\n\t\t\t\t\treturn (edge.WindCnt2 !== 0);\n\t\t\t\tcase ClipperLib.PolyFillType.pftPositive:\n\t\t\t\t\treturn (edge.WindCnt2 > 0);\n\t\t\t\tdefault:\n\t\t\t\t\treturn (edge.WindCnt2 < 0);\n\t\t\t\t}\n\t\tcase ClipperLib.ClipType.ctXor:\n\t\t\tif (edge.WindDelta === 0)\n\t\t\t\tswitch (pft2)\n\t\t\t\t{\n\t\t\t\tcase ClipperLib.PolyFillType.pftEvenOdd:\n\t\t\t\tcase ClipperLib.PolyFillType.pftNonZero:\n\t\t\t\t\treturn (edge.WindCnt2 === 0);\n\t\t\t\tcase ClipperLib.PolyFillType.pftPositive:\n\t\t\t\t\treturn (edge.WindCnt2 <= 0);\n\t\t\t\tdefault:\n\t\t\t\t\treturn (edge.WindCnt2 >= 0);\n\t\t\t\t}\n\t\t\telse\n\t\t\t\treturn true;\n\t\t}\n\t\treturn true;\n\t};\n\n\tClipperLib.Clipper.prototype.SetWindingCount = function (edge)\n\t{\n\t\tvar e = edge.PrevInAEL;\n\t\t//find the edge of the same polytype that immediately preceeds 'edge' in AEL\n\t\twhile (e !== null && ((e.PolyTyp !== edge.PolyTyp) || (e.WindDelta === 0)))\n\t\t\te = e.PrevInAEL;\n\t\tif (e === null)\n\t\t{\n\t\t\tvar pft = (edge.PolyTyp === ClipperLib.PolyType.ptSubject ? this.m_SubjFillType : this.m_ClipFillType);\n\t\t\tif (edge.WindDelta === 0)\n\t\t\t{\n\t\t\t\tedge.WindCnt = (pft === ClipperLib.PolyFillType.pftNegative ? -1 : 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tedge.WindCnt = edge.WindDelta;\n\t\t\t}\n\t\t\tedge.WindCnt2 = 0;\n\t\t\te = this.m_ActiveEdges;\n\t\t\t//ie get ready to calc WindCnt2\n\t\t}\n\t\telse if (edge.WindDelta === 0 && this.m_ClipType !== ClipperLib.ClipType.ctUnion)\n\t\t{\n\t\t\tedge.WindCnt = 1;\n\t\t\tedge.WindCnt2 = e.WindCnt2;\n\t\t\te = e.NextInAEL;\n\t\t\t//ie get ready to calc WindCnt2\n\t\t}\n\t\telse if (this.IsEvenOddFillType(edge))\n\t\t{\n\t\t\t//EvenOdd filling ...\n\t\t\tif (edge.WindDelta === 0)\n\t\t\t{\n\t\t\t\t//are we inside a subj polygon ...\n\t\t\t\tvar Inside = true;\n\t\t\t\tvar e2 = e.PrevInAEL;\n\t\t\t\twhile (e2 !== null)\n\t\t\t\t{\n\t\t\t\t\tif (e2.PolyTyp === e.PolyTyp && e2.WindDelta !== 0)\n\t\t\t\t\t\tInside = !Inside;\n\t\t\t\t\te2 = e2.PrevInAEL;\n\t\t\t\t}\n\t\t\t\tedge.WindCnt = (Inside ? 0 : 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tedge.WindCnt = edge.WindDelta;\n\t\t\t}\n\t\t\tedge.WindCnt2 = e.WindCnt2;\n\t\t\te = e.NextInAEL;\n\t\t\t//ie get ready to calc WindCnt2\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//nonZero, Positive or Negative filling ...\n\t\t\tif (e.WindCnt * e.WindDelta < 0)\n\t\t\t{\n\t\t\t\t//prev edge is 'decreasing' WindCount (WC) toward zero\n\t\t\t\t//so we're outside the previous polygon ...\n\t\t\t\tif (Math.abs(e.WindCnt) > 1)\n\t\t\t\t{\n\t\t\t\t\t//outside prev poly but still inside another.\n\t\t\t\t\t//when reversing direction of prev poly use the same WC\n\t\t\t\t\tif (e.WindDelta * edge.WindDelta < 0)\n\t\t\t\t\t\tedge.WindCnt = e.WindCnt;\n\t\t\t\t\telse\n\t\t\t\t\t\tedge.WindCnt = e.WindCnt + edge.WindDelta;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tedge.WindCnt = (edge.WindDelta === 0 ? 1 : edge.WindDelta);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//prev edge is 'increasing' WindCount (WC) away from zero\n\t\t\t\t//so we're inside the previous polygon ...\n\t\t\t\tif (edge.WindDelta === 0)\n\t\t\t\t\tedge.WindCnt = (e.WindCnt < 0 ? e.WindCnt - 1 : e.WindCnt + 1);\n\t\t\t\telse if (e.WindDelta * edge.WindDelta < 0)\n\t\t\t\t\tedge.WindCnt = e.WindCnt;\n\t\t\t\telse\n\t\t\t\t\tedge.WindCnt = e.WindCnt + edge.WindDelta;\n\t\t\t}\n\t\t\tedge.WindCnt2 = e.WindCnt2;\n\t\t\te = e.NextInAEL;\n\t\t\t//ie get ready to calc WindCnt2\n\t\t}\n\t\t//update WindCnt2 ...\n\t\tif (this.IsEvenOddAltFillType(edge))\n\t\t{\n\t\t\t//EvenOdd filling ...\n\t\t\twhile (e !== edge)\n\t\t\t{\n\t\t\t\tif (e.WindDelta !== 0)\n\t\t\t\t\tedge.WindCnt2 = (edge.WindCnt2 === 0 ? 1 : 0);\n\t\t\t\te = e.NextInAEL;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//nonZero, Positive or Negative filling ...\n\t\t\twhile (e !== edge)\n\t\t\t{\n\t\t\t\tedge.WindCnt2 += e.WindDelta;\n\t\t\t\te = e.NextInAEL;\n\t\t\t}\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.AddEdgeToSEL = function (edge)\n\t{\n\t\t//SEL pointers in PEdge are use to build transient lists of horizontal edges.\n\t\t//However, since we don't need to worry about processing order, all additions\n\t\t//are made to the front of the list ...\n\t\tif (this.m_SortedEdges === null)\n\t\t{\n\t\t\tthis.m_SortedEdges = edge;\n\t\t\tedge.PrevInSEL = null;\n\t\t\tedge.NextInSEL = null;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tedge.NextInSEL = this.m_SortedEdges;\n\t\t\tedge.PrevInSEL = null;\n\t\t\tthis.m_SortedEdges.PrevInSEL = edge;\n\t\t\tthis.m_SortedEdges = edge;\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.PopEdgeFromSEL = function (e)\n\t{\n\t\t//Pop edge from front of SEL (ie SEL is a FILO list)\n\t\te.v = this.m_SortedEdges;\n\t\tif (e.v === null)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tvar oldE = e.v;\n\t\tthis.m_SortedEdges = e.v.NextInSEL;\n\t\tif (this.m_SortedEdges !== null)\n\t\t{\n\t\t\tthis.m_SortedEdges.PrevInSEL = null;\n\t\t}\n\t\toldE.NextInSEL = null;\n\t\toldE.PrevInSEL = null;\n\t\treturn true;\n\t};\n\n\tClipperLib.Clipper.prototype.CopyAELToSEL = function ()\n\t{\n\t\tvar e = this.m_ActiveEdges;\n\t\tthis.m_SortedEdges = e;\n\t\twhile (e !== null)\n\t\t{\n\t\t\te.PrevInSEL = e.PrevInAEL;\n\t\t\te.NextInSEL = e.NextInAEL;\n\t\t\te = e.NextInAEL;\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.SwapPositionsInSEL = function (edge1, edge2)\n\t{\n\t\tif (edge1.NextInSEL === null && edge1.PrevInSEL === null)\n\t\t\treturn;\n\t\tif (edge2.NextInSEL === null && edge2.PrevInSEL === null)\n\t\t\treturn;\n\t\tif (edge1.NextInSEL === edge2)\n\t\t{\n\t\t\tvar next = edge2.NextInSEL;\n\t\t\tif (next !== null)\n\t\t\t\tnext.PrevInSEL = edge1;\n\t\t\tvar prev = edge1.PrevInSEL;\n\t\t\tif (prev !== null)\n\t\t\t\tprev.NextInSEL = edge2;\n\t\t\tedge2.PrevInSEL = prev;\n\t\t\tedge2.NextInSEL = edge1;\n\t\t\tedge1.PrevInSEL = edge2;\n\t\t\tedge1.NextInSEL = next;\n\t\t}\n\t\telse if (edge2.NextInSEL === edge1)\n\t\t{\n\t\t\tvar next = edge1.NextInSEL;\n\t\t\tif (next !== null)\n\t\t\t\tnext.PrevInSEL = edge2;\n\t\t\tvar prev = edge2.PrevInSEL;\n\t\t\tif (prev !== null)\n\t\t\t\tprev.NextInSEL = edge1;\n\t\t\tedge1.PrevInSEL = prev;\n\t\t\tedge1.NextInSEL = edge2;\n\t\t\tedge2.PrevInSEL = edge1;\n\t\t\tedge2.NextInSEL = next;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar next = edge1.NextInSEL;\n\t\t\tvar prev = edge1.PrevInSEL;\n\t\t\tedge1.NextInSEL = edge2.NextInSEL;\n\t\t\tif (edge1.NextInSEL !== null)\n\t\t\t\tedge1.NextInSEL.PrevInSEL = edge1;\n\t\t\tedge1.PrevInSEL = edge2.PrevInSEL;\n\t\t\tif (edge1.PrevInSEL !== null)\n\t\t\t\tedge1.PrevInSEL.NextInSEL = edge1;\n\t\t\tedge2.NextInSEL = next;\n\t\t\tif (edge2.NextInSEL !== null)\n\t\t\t\tedge2.NextInSEL.PrevInSEL = edge2;\n\t\t\tedge2.PrevInSEL = prev;\n\t\t\tif (edge2.PrevInSEL !== null)\n\t\t\t\tedge2.PrevInSEL.NextInSEL = edge2;\n\t\t}\n\t\tif (edge1.PrevInSEL === null)\n\t\t\tthis.m_SortedEdges = edge1;\n\t\telse if (edge2.PrevInSEL === null)\n\t\t\tthis.m_SortedEdges = edge2;\n\t};\n\n\tClipperLib.Clipper.prototype.AddLocalMaxPoly = function (e1, e2, pt)\n\t{\n\t\tthis.AddOutPt(e1, pt);\n\t\tif (e2.WindDelta === 0) this.AddOutPt(e2, pt);\n\t\tif (e1.OutIdx === e2.OutIdx)\n\t\t{\n\t\t\te1.OutIdx = -1;\n\t\t\te2.OutIdx = -1;\n\t\t}\n\t\telse if (e1.OutIdx < e2.OutIdx)\n\t\t\tthis.AppendPolygon(e1, e2);\n\t\telse\n\t\t\tthis.AppendPolygon(e2, e1);\n\t};\n\n\tClipperLib.Clipper.prototype.AddLocalMinPoly = function (e1, e2, pt)\n\t{\n\t\tvar result;\n\t\tvar e, prevE;\n\t\tif (ClipperLib.ClipperBase.IsHorizontal(e2) || (e1.Dx > e2.Dx))\n\t\t{\n\t\t\tresult = this.AddOutPt(e1, pt);\n\t\t\te2.OutIdx = e1.OutIdx;\n\t\t\te1.Side = ClipperLib.EdgeSide.esLeft;\n\t\t\te2.Side = ClipperLib.EdgeSide.esRight;\n\t\t\te = e1;\n\t\t\tif (e.PrevInAEL === e2)\n\t\t\t\tprevE = e2.PrevInAEL;\n\t\t\telse\n\t\t\t\tprevE = e.PrevInAEL;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = this.AddOutPt(e2, pt);\n\t\t\te1.OutIdx = e2.OutIdx;\n\t\t\te1.Side = ClipperLib.EdgeSide.esRight;\n\t\t\te2.Side = ClipperLib.EdgeSide.esLeft;\n\t\t\te = e2;\n\t\t\tif (e.PrevInAEL === e1)\n\t\t\t\tprevE = e1.PrevInAEL;\n\t\t\telse\n\t\t\t\tprevE = e.PrevInAEL;\n\t\t}\n\n\t\tif (prevE !== null && prevE.OutIdx >= 0 && prevE.Top.Y < pt.Y && e.Top.Y < pt.Y)\n\t\t{\n\t\t\tvar xPrev = ClipperLib.Clipper.TopX(prevE, pt.Y);\n\t\t\tvar xE = ClipperLib.Clipper.TopX(e, pt.Y);\n\t\t\tif ((xPrev === xE) && (e.WindDelta !== 0) && (prevE.WindDelta !== 0) && ClipperLib.ClipperBase.SlopesEqual5(new ClipperLib.IntPoint2(xPrev, pt.Y), prevE.Top, new ClipperLib.IntPoint2(xE, pt.Y), e.Top, this.m_UseFullRange))\n\t\t\t{\n\t\t\t\tvar outPt = this.AddOutPt(prevE, pt);\n\t\t\t\tthis.AddJoin(result, outPt, e.Top);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.prototype.AddOutPt = function (e, pt)\n\t{\n\t\tif (e.OutIdx < 0)\n\t\t{\n\t\t\tvar outRec = this.CreateOutRec();\n\t\t\toutRec.IsOpen = (e.WindDelta === 0);\n\t\t\tvar newOp = new ClipperLib.OutPt();\n\t\t\toutRec.Pts = newOp;\n\t\t\tnewOp.Idx = outRec.Idx;\n\t\t\t//newOp.Pt = pt;\n\t\t\tnewOp.Pt.X = pt.X;\n\t\t\tnewOp.Pt.Y = pt.Y;\n\t\t\tif (ClipperLib.use_xyz) newOp.Pt.Z = pt.Z;\n\t\t\tnewOp.Next = newOp;\n\t\t\tnewOp.Prev = newOp;\n\t\t\tif (!outRec.IsOpen)\n\t\t\t\tthis.SetHoleState(e, outRec);\n\t\t\te.OutIdx = outRec.Idx;\n\t\t\t//nb: do this after SetZ !\n\t\t\treturn newOp;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar outRec = this.m_PolyOuts[e.OutIdx];\n\t\t\t//OutRec.Pts is the 'Left-most' point & OutRec.Pts.Prev is the 'Right-most'\n\t\t\tvar op = outRec.Pts;\n\t\t\tvar ToFront = (e.Side === ClipperLib.EdgeSide.esLeft);\n\t\t\tif (ToFront && ClipperLib.IntPoint.op_Equality(pt, op.Pt))\n\t\t\t\treturn op;\n\t\t\telse if (!ToFront && ClipperLib.IntPoint.op_Equality(pt, op.Prev.Pt))\n\t\t\t\treturn op.Prev;\n\t\t\tvar newOp = new ClipperLib.OutPt();\n\t\t\tnewOp.Idx = outRec.Idx;\n\t\t\t//newOp.Pt = pt;\n\t\t\tnewOp.Pt.X = pt.X;\n\t\t\tnewOp.Pt.Y = pt.Y;\n\t\t\tif (ClipperLib.use_xyz) newOp.Pt.Z = pt.Z;\n\t\t\tnewOp.Next = op;\n\t\t\tnewOp.Prev = op.Prev;\n\t\t\tnewOp.Prev.Next = newOp;\n\t\t\top.Prev = newOp;\n\t\t\tif (ToFront)\n\t\t\t\toutRec.Pts = newOp;\n\t\t\treturn newOp;\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.GetLastOutPt = function (e)\n\t{\n\t\tvar outRec = this.m_PolyOuts[e.OutIdx];\n\t\tif (e.Side === ClipperLib.EdgeSide.esLeft)\n\t\t{\n\t\t\treturn outRec.Pts;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn outRec.Pts.Prev;\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.SwapPoints = function (pt1, pt2)\n\t{\n\t\tvar tmp = new ClipperLib.IntPoint1(pt1.Value);\n\t\t//pt1.Value = pt2.Value;\n\t\tpt1.Value.X = pt2.Value.X;\n\t\tpt1.Value.Y = pt2.Value.Y;\n\t\tif (ClipperLib.use_xyz) pt1.Value.Z = pt2.Value.Z;\n\t\t//pt2.Value = tmp;\n\t\tpt2.Value.X = tmp.X;\n\t\tpt2.Value.Y = tmp.Y;\n\t\tif (ClipperLib.use_xyz) pt2.Value.Z = tmp.Z;\n\t};\n\n\tClipperLib.Clipper.prototype.HorzSegmentsOverlap = function (seg1a, seg1b, seg2a, seg2b)\n\t{\n\t\tvar tmp;\n\t\tif (seg1a > seg1b)\n\t\t{\n\t\t\ttmp = seg1a;\n\t\t\tseg1a = seg1b;\n\t\t\tseg1b = tmp;\n\t\t}\n\t\tif (seg2a > seg2b)\n\t\t{\n\t\t\ttmp = seg2a;\n\t\t\tseg2a = seg2b;\n\t\t\tseg2b = tmp;\n\t\t}\n\t\treturn (seg1a < seg2b) && (seg2a < seg1b);\n\t}\n\n\tClipperLib.Clipper.prototype.SetHoleState = function (e, outRec)\n\t{\n\t\tvar e2 = e.PrevInAEL;\n\t\tvar eTmp = null;\n\t\twhile (e2 !== null)\n\t\t{\n\t\t\tif (e2.OutIdx >= 0 && e2.WindDelta !== 0)\n\t\t\t{\n\t\t\t\tif (eTmp === null)\n\t\t\t\t\teTmp = e2;\n\t\t\t\telse if (eTmp.OutIdx === e2.OutIdx)\n\t\t\t\t\teTmp = null; //paired\n\t\t\t}\n\t\t\te2 = e2.PrevInAEL;\n\t\t}\n\n\t\tif (eTmp === null)\n\t\t{\n\t\t\toutRec.FirstLeft = null;\n\t\t\toutRec.IsHole = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\toutRec.FirstLeft = this.m_PolyOuts[eTmp.OutIdx];\n\t\t\toutRec.IsHole = !outRec.FirstLeft.IsHole;\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.GetDx = function (pt1, pt2)\n\t{\n\t\tif (pt1.Y === pt2.Y)\n\t\t\treturn ClipperLib.ClipperBase.horizontal;\n\t\telse\n\t\t\treturn (pt2.X - pt1.X) / (pt2.Y - pt1.Y);\n\t};\n\n\tClipperLib.Clipper.prototype.FirstIsBottomPt = function (btmPt1, btmPt2)\n\t{\n\t\tvar p = btmPt1.Prev;\n\t\twhile ((ClipperLib.IntPoint.op_Equality(p.Pt, btmPt1.Pt)) && (p !== btmPt1))\n\t\t\tp = p.Prev;\n\t\tvar dx1p = Math.abs(this.GetDx(btmPt1.Pt, p.Pt));\n\t\tp = btmPt1.Next;\n\t\twhile ((ClipperLib.IntPoint.op_Equality(p.Pt, btmPt1.Pt)) && (p !== btmPt1))\n\t\t\tp = p.Next;\n\t\tvar dx1n = Math.abs(this.GetDx(btmPt1.Pt, p.Pt));\n\t\tp = btmPt2.Prev;\n\t\twhile ((ClipperLib.IntPoint.op_Equality(p.Pt, btmPt2.Pt)) && (p !== btmPt2))\n\t\t\tp = p.Prev;\n\t\tvar dx2p = Math.abs(this.GetDx(btmPt2.Pt, p.Pt));\n\t\tp = btmPt2.Next;\n\t\twhile ((ClipperLib.IntPoint.op_Equality(p.Pt, btmPt2.Pt)) && (p !== btmPt2))\n\t\t\tp = p.Next;\n\t\tvar dx2n = Math.abs(this.GetDx(btmPt2.Pt, p.Pt));\n\n\t\tif (Math.max(dx1p, dx1n) === Math.max(dx2p, dx2n) && Math.min(dx1p, dx1n) === Math.min(dx2p, dx2n))\n\t\t{\n\t\t\treturn this.Area(btmPt1) > 0; //if otherwise identical use orientation\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn (dx1p >= dx2p && dx1p >= dx2n) || (dx1n >= dx2p && dx1n >= dx2n);\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.GetBottomPt = function (pp)\n\t{\n\t\tvar dups = null;\n\t\tvar p = pp.Next;\n\t\twhile (p !== pp)\n\t\t{\n\t\t\tif (p.Pt.Y > pp.Pt.Y)\n\t\t\t{\n\t\t\t\tpp = p;\n\t\t\t\tdups = null;\n\t\t\t}\n\t\t\telse if (p.Pt.Y === pp.Pt.Y && p.Pt.X <= pp.Pt.X)\n\t\t\t{\n\t\t\t\tif (p.Pt.X < pp.Pt.X)\n\t\t\t\t{\n\t\t\t\t\tdups = null;\n\t\t\t\t\tpp = p;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (p.Next !== pp && p.Prev !== pp)\n\t\t\t\t\t\tdups = p;\n\t\t\t\t}\n\t\t\t}\n\t\t\tp = p.Next;\n\t\t}\n\t\tif (dups !== null)\n\t\t{\n\t\t\t//there appears to be at least 2 vertices at bottomPt so ...\n\t\t\twhile (dups !== p)\n\t\t\t{\n\t\t\t\tif (!this.FirstIsBottomPt(p, dups))\n\t\t\t\t\tpp = dups;\n\t\t\t\tdups = dups.Next;\n\t\t\t\twhile (ClipperLib.IntPoint.op_Inequality(dups.Pt, pp.Pt))\n\t\t\t\t\tdups = dups.Next;\n\t\t\t}\n\t\t}\n\t\treturn pp;\n\t};\n\n\tClipperLib.Clipper.prototype.GetLowermostRec = function (outRec1, outRec2)\n\t{\n\t\t//work out which polygon fragment has the correct hole state ...\n\t\tif (outRec1.BottomPt === null)\n\t\t\toutRec1.BottomPt = this.GetBottomPt(outRec1.Pts);\n\t\tif (outRec2.BottomPt === null)\n\t\t\toutRec2.BottomPt = this.GetBottomPt(outRec2.Pts);\n\t\tvar bPt1 = outRec1.BottomPt;\n\t\tvar bPt2 = outRec2.BottomPt;\n\t\tif (bPt1.Pt.Y > bPt2.Pt.Y)\n\t\t\treturn outRec1;\n\t\telse if (bPt1.Pt.Y < bPt2.Pt.Y)\n\t\t\treturn outRec2;\n\t\telse if (bPt1.Pt.X < bPt2.Pt.X)\n\t\t\treturn outRec1;\n\t\telse if (bPt1.Pt.X > bPt2.Pt.X)\n\t\t\treturn outRec2;\n\t\telse if (bPt1.Next === bPt1)\n\t\t\treturn outRec2;\n\t\telse if (bPt2.Next === bPt2)\n\t\t\treturn outRec1;\n\t\telse if (this.FirstIsBottomPt(bPt1, bPt2))\n\t\t\treturn outRec1;\n\t\telse\n\t\t\treturn outRec2;\n\t};\n\n\tClipperLib.Clipper.prototype.OutRec1RightOfOutRec2 = function (outRec1, outRec2)\n\t{\n\t\tdo {\n\t\t\toutRec1 = outRec1.FirstLeft;\n\t\t\tif (outRec1 === outRec2)\n\t\t\t\treturn true;\n\t\t}\n\t\twhile (outRec1 !== null)\n\t\treturn false;\n\t};\n\n\tClipperLib.Clipper.prototype.GetOutRec = function (idx)\n\t{\n\t\tvar outrec = this.m_PolyOuts[idx];\n\t\twhile (outrec !== this.m_PolyOuts[outrec.Idx])\n\t\t\toutrec = this.m_PolyOuts[outrec.Idx];\n\t\treturn outrec;\n\t};\n\n\tClipperLib.Clipper.prototype.AppendPolygon = function (e1, e2)\n\t{\n\t\t//get the start and ends of both output polygons ...\n\t\tvar outRec1 = this.m_PolyOuts[e1.OutIdx];\n\t\tvar outRec2 = this.m_PolyOuts[e2.OutIdx];\n\t\tvar holeStateRec;\n\t\tif (this.OutRec1RightOfOutRec2(outRec1, outRec2))\n\t\t\tholeStateRec = outRec2;\n\t\telse if (this.OutRec1RightOfOutRec2(outRec2, outRec1))\n\t\t\tholeStateRec = outRec1;\n\t\telse\n\t\t\tholeStateRec = this.GetLowermostRec(outRec1, outRec2);\n\n\t\t//get the start and ends of both output polygons and\n\t\t//join E2 poly onto E1 poly and delete pointers to E2 ...\n\n\t\tvar p1_lft = outRec1.Pts;\n\t\tvar p1_rt = p1_lft.Prev;\n\t\tvar p2_lft = outRec2.Pts;\n\t\tvar p2_rt = p2_lft.Prev;\n\t\t//join e2 poly onto e1 poly and delete pointers to e2 ...\n\t\tif (e1.Side === ClipperLib.EdgeSide.esLeft)\n\t\t{\n\t\t\tif (e2.Side === ClipperLib.EdgeSide.esLeft)\n\t\t\t{\n\t\t\t\t//z y x a b c\n\t\t\t\tthis.ReversePolyPtLinks(p2_lft);\n\t\t\t\tp2_lft.Next = p1_lft;\n\t\t\t\tp1_lft.Prev = p2_lft;\n\t\t\t\tp1_rt.Next = p2_rt;\n\t\t\t\tp2_rt.Prev = p1_rt;\n\t\t\t\toutRec1.Pts = p2_rt;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//x y z a b c\n\t\t\t\tp2_rt.Next = p1_lft;\n\t\t\t\tp1_lft.Prev = p2_rt;\n\t\t\t\tp2_lft.Prev = p1_rt;\n\t\t\t\tp1_rt.Next = p2_lft;\n\t\t\t\toutRec1.Pts = p2_lft;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (e2.Side === ClipperLib.EdgeSide.esRight)\n\t\t\t{\n\t\t\t\t//a b c z y x\n\t\t\t\tthis.ReversePolyPtLinks(p2_lft);\n\t\t\t\tp1_rt.Next = p2_rt;\n\t\t\t\tp2_rt.Prev = p1_rt;\n\t\t\t\tp2_lft.Next = p1_lft;\n\t\t\t\tp1_lft.Prev = p2_lft;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//a b c x y z\n\t\t\t\tp1_rt.Next = p2_lft;\n\t\t\t\tp2_lft.Prev = p1_rt;\n\t\t\t\tp1_lft.Prev = p2_rt;\n\t\t\t\tp2_rt.Next = p1_lft;\n\t\t\t}\n\t\t}\n\t\toutRec1.BottomPt = null;\n\t\tif (holeStateRec === outRec2)\n\t\t{\n\t\t\tif (outRec2.FirstLeft !== outRec1)\n\t\t\t\toutRec1.FirstLeft = outRec2.FirstLeft;\n\t\t\toutRec1.IsHole = outRec2.IsHole;\n\t\t}\n\t\toutRec2.Pts = null;\n\t\toutRec2.BottomPt = null;\n\t\toutRec2.FirstLeft = outRec1;\n\t\tvar OKIdx = e1.OutIdx;\n\t\tvar ObsoleteIdx = e2.OutIdx;\n\t\te1.OutIdx = -1;\n\t\t//nb: safe because we only get here via AddLocalMaxPoly\n\t\te2.OutIdx = -1;\n\t\tvar e = this.m_ActiveEdges;\n\t\twhile (e !== null)\n\t\t{\n\t\t\tif (e.OutIdx === ObsoleteIdx)\n\t\t\t{\n\t\t\t\te.OutIdx = OKIdx;\n\t\t\t\te.Side = e1.Side;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\te = e.NextInAEL;\n\t\t}\n\t\toutRec2.Idx = outRec1.Idx;\n\t};\n\n\tClipperLib.Clipper.prototype.ReversePolyPtLinks = function (pp)\n\t{\n\t\tif (pp === null)\n\t\t\treturn;\n\t\tvar pp1;\n\t\tvar pp2;\n\t\tpp1 = pp;\n\t\tdo {\n\t\t\tpp2 = pp1.Next;\n\t\t\tpp1.Next = pp1.Prev;\n\t\t\tpp1.Prev = pp2;\n\t\t\tpp1 = pp2;\n\t\t}\n\t\twhile (pp1 !== pp)\n\t};\n\n\tClipperLib.Clipper.SwapSides = function (edge1, edge2)\n\t{\n\t\tvar side = edge1.Side;\n\t\tedge1.Side = edge2.Side;\n\t\tedge2.Side = side;\n\t};\n\n\tClipperLib.Clipper.SwapPolyIndexes = function (edge1, edge2)\n\t{\n\t\tvar outIdx = edge1.OutIdx;\n\t\tedge1.OutIdx = edge2.OutIdx;\n\t\tedge2.OutIdx = outIdx;\n\t};\n\n\tClipperLib.Clipper.prototype.IntersectEdges = function (e1, e2, pt)\n\t{\n\t\t//e1 will be to the left of e2 BELOW the intersection. Therefore e1 is before\n\t\t//e2 in AEL except when e1 is being inserted at the intersection point ...\n\t\tvar e1Contributing = (e1.OutIdx >= 0);\n\t\tvar e2Contributing = (e2.OutIdx >= 0);\n\n\t\tif (ClipperLib.use_xyz)\n\t\t\tthis.SetZ(pt, e1, e2);\n\n\t\tif (ClipperLib.use_lines)\n\t\t{\n\t\t\t//if either edge is on an OPEN path ...\n\t\t\tif (e1.WindDelta === 0 || e2.WindDelta === 0)\n\t\t\t{\n\t\t\t\t//ignore subject-subject open path intersections UNLESS they\n\t\t\t\t//are both open paths, AND they are both 'contributing maximas' ...\n\t\t\t\tif (e1.WindDelta === 0 && e2.WindDelta === 0) return;\n\t\t\t\t//if intersecting a subj line with a subj poly ...\n\t\t\t\telse if (e1.PolyTyp === e2.PolyTyp &&\n\t\t\t\t\te1.WindDelta !== e2.WindDelta && this.m_ClipType === ClipperLib.ClipType.ctUnion)\n\t\t\t\t{\n\t\t\t\t\tif (e1.WindDelta === 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (e2Contributing)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.AddOutPt(e1, pt);\n\t\t\t\t\t\t\tif (e1Contributing)\n\t\t\t\t\t\t\t\te1.OutIdx = -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (e1Contributing)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.AddOutPt(e2, pt);\n\t\t\t\t\t\t\tif (e2Contributing)\n\t\t\t\t\t\t\t\te2.OutIdx = -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (e1.PolyTyp !== e2.PolyTyp)\n\t\t\t\t{\n\t\t\t\t\tif ((e1.WindDelta === 0) && Math.abs(e2.WindCnt) === 1 &&\n\t\t\t\t\t\t(this.m_ClipType !== ClipperLib.ClipType.ctUnion || e2.WindCnt2 === 0))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.AddOutPt(e1, pt);\n\t\t\t\t\t\tif (e1Contributing)\n\t\t\t\t\t\t\te1.OutIdx = -1;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((e2.WindDelta === 0) && (Math.abs(e1.WindCnt) === 1) &&\n\t\t\t\t\t\t(this.m_ClipType !== ClipperLib.ClipType.ctUnion || e1.WindCnt2 === 0))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.AddOutPt(e2, pt);\n\t\t\t\t\t\tif (e2Contributing)\n\t\t\t\t\t\t\te2.OutIdx = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t//update winding counts...\n\t\t//assumes that e1 will be to the Right of e2 ABOVE the intersection\n\t\tif (e1.PolyTyp === e2.PolyTyp)\n\t\t{\n\t\t\tif (this.IsEvenOddFillType(e1))\n\t\t\t{\n\t\t\t\tvar oldE1WindCnt = e1.WindCnt;\n\t\t\t\te1.WindCnt = e2.WindCnt;\n\t\t\t\te2.WindCnt = oldE1WindCnt;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (e1.WindCnt + e2.WindDelta === 0)\n\t\t\t\t\te1.WindCnt = -e1.WindCnt;\n\t\t\t\telse\n\t\t\t\t\te1.WindCnt += e2.WindDelta;\n\t\t\t\tif (e2.WindCnt - e1.WindDelta === 0)\n\t\t\t\t\te2.WindCnt = -e2.WindCnt;\n\t\t\t\telse\n\t\t\t\t\te2.WindCnt -= e1.WindDelta;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (!this.IsEvenOddFillType(e2))\n\t\t\t\te1.WindCnt2 += e2.WindDelta;\n\t\t\telse\n\t\t\t\te1.WindCnt2 = (e1.WindCnt2 === 0) ? 1 : 0;\n\t\t\tif (!this.IsEvenOddFillType(e1))\n\t\t\t\te2.WindCnt2 -= e1.WindDelta;\n\t\t\telse\n\t\t\t\te2.WindCnt2 = (e2.WindCnt2 === 0) ? 1 : 0;\n\t\t}\n\t\tvar e1FillType, e2FillType, e1FillType2, e2FillType2;\n\t\tif (e1.PolyTyp === ClipperLib.PolyType.ptSubject)\n\t\t{\n\t\t\te1FillType = this.m_SubjFillType;\n\t\t\te1FillType2 = this.m_ClipFillType;\n\t\t}\n\t\telse\n\t\t{\n\t\t\te1FillType = this.m_ClipFillType;\n\t\t\te1FillType2 = this.m_SubjFillType;\n\t\t}\n\t\tif (e2.PolyTyp === ClipperLib.PolyType.ptSubject)\n\t\t{\n\t\t\te2FillType = this.m_SubjFillType;\n\t\t\te2FillType2 = this.m_ClipFillType;\n\t\t}\n\t\telse\n\t\t{\n\t\t\te2FillType = this.m_ClipFillType;\n\t\t\te2FillType2 = this.m_SubjFillType;\n\t\t}\n\t\tvar e1Wc, e2Wc;\n\t\tswitch (e1FillType)\n\t\t{\n\t\tcase ClipperLib.PolyFillType.pftPositive:\n\t\t\te1Wc = e1.WindCnt;\n\t\t\tbreak;\n\t\tcase ClipperLib.PolyFillType.pftNegative:\n\t\t\te1Wc = -e1.WindCnt;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\te1Wc = Math.abs(e1.WindCnt);\n\t\t\tbreak;\n\t\t}\n\t\tswitch (e2FillType)\n\t\t{\n\t\tcase ClipperLib.PolyFillType.pftPositive:\n\t\t\te2Wc = e2.WindCnt;\n\t\t\tbreak;\n\t\tcase ClipperLib.PolyFillType.pftNegative:\n\t\t\te2Wc = -e2.WindCnt;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\te2Wc = Math.abs(e2.WindCnt);\n\t\t\tbreak;\n\t\t}\n\t\tif (e1Contributing && e2Contributing)\n\t\t{\n\t\t\tif ((e1Wc !== 0 && e1Wc !== 1) || (e2Wc !== 0 && e2Wc !== 1) ||\n\t\t\t\t(e1.PolyTyp !== e2.PolyTyp && this.m_ClipType !== ClipperLib.ClipType.ctXor))\n\t\t\t{\n\t\t\t\tthis.AddLocalMaxPoly(e1, e2, pt);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.AddOutPt(e1, pt);\n\t\t\t\tthis.AddOutPt(e2, pt);\n\t\t\t\tClipperLib.Clipper.SwapSides(e1, e2);\n\t\t\t\tClipperLib.Clipper.SwapPolyIndexes(e1, e2);\n\t\t\t}\n\t\t}\n\t\telse if (e1Contributing)\n\t\t{\n\t\t\tif (e2Wc === 0 || e2Wc === 1)\n\t\t\t{\n\t\t\t\tthis.AddOutPt(e1, pt);\n\t\t\t\tClipperLib.Clipper.SwapSides(e1, e2);\n\t\t\t\tClipperLib.Clipper.SwapPolyIndexes(e1, e2);\n\t\t\t}\n\t\t}\n\t\telse if (e2Contributing)\n\t\t{\n\t\t\tif (e1Wc === 0 || e1Wc === 1)\n\t\t\t{\n\t\t\t\tthis.AddOutPt(e2, pt);\n\t\t\t\tClipperLib.Clipper.SwapSides(e1, e2);\n\t\t\t\tClipperLib.Clipper.SwapPolyIndexes(e1, e2);\n\t\t\t}\n\t\t}\n\t\telse if ((e1Wc === 0 || e1Wc === 1) && (e2Wc === 0 || e2Wc === 1))\n\t\t{\n\t\t\t//neither edge is currently contributing ...\n\t\t\tvar e1Wc2, e2Wc2;\n\t\t\tswitch (e1FillType2)\n\t\t\t{\n\t\t\tcase ClipperLib.PolyFillType.pftPositive:\n\t\t\t\te1Wc2 = e1.WindCnt2;\n\t\t\t\tbreak;\n\t\t\tcase ClipperLib.PolyFillType.pftNegative:\n\t\t\t\te1Wc2 = -e1.WindCnt2;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\te1Wc2 = Math.abs(e1.WindCnt2);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tswitch (e2FillType2)\n\t\t\t{\n\t\t\tcase ClipperLib.PolyFillType.pftPositive:\n\t\t\t\te2Wc2 = e2.WindCnt2;\n\t\t\t\tbreak;\n\t\t\tcase ClipperLib.PolyFillType.pftNegative:\n\t\t\t\te2Wc2 = -e2.WindCnt2;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\te2Wc2 = Math.abs(e2.WindCnt2);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (e1.PolyTyp !== e2.PolyTyp)\n\t\t\t{\n\t\t\t\tthis.AddLocalMinPoly(e1, e2, pt);\n\t\t\t}\n\t\t\telse if (e1Wc === 1 && e2Wc === 1)\n\t\t\t\tswitch (this.m_ClipType)\n\t\t\t\t{\n\t\t\t\tcase ClipperLib.ClipType.ctIntersection:\n\t\t\t\t\tif (e1Wc2 > 0 && e2Wc2 > 0)\n\t\t\t\t\t\tthis.AddLocalMinPoly(e1, e2, pt);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ClipperLib.ClipType.ctUnion:\n\t\t\t\t\tif (e1Wc2 <= 0 && e2Wc2 <= 0)\n\t\t\t\t\t\tthis.AddLocalMinPoly(e1, e2, pt);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ClipperLib.ClipType.ctDifference:\n\t\t\t\t\tif (((e1.PolyTyp === ClipperLib.PolyType.ptClip) && (e1Wc2 > 0) && (e2Wc2 > 0)) ||\n\t\t\t\t\t\t((e1.PolyTyp === ClipperLib.PolyType.ptSubject) && (e1Wc2 <= 0) && (e2Wc2 <= 0)))\n\t\t\t\t\t\tthis.AddLocalMinPoly(e1, e2, pt);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ClipperLib.ClipType.ctXor:\n\t\t\t\t\tthis.AddLocalMinPoly(e1, e2, pt);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\telse\n\t\t\t\tClipperLib.Clipper.SwapSides(e1, e2);\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.DeleteFromSEL = function (e)\n\t{\n\t\tvar SelPrev = e.PrevInSEL;\n\t\tvar SelNext = e.NextInSEL;\n\t\tif (SelPrev === null && SelNext === null && (e !== this.m_SortedEdges))\n\t\t\treturn;\n\t\t//already deleted\n\t\tif (SelPrev !== null)\n\t\t\tSelPrev.NextInSEL = SelNext;\n\t\telse\n\t\t\tthis.m_SortedEdges = SelNext;\n\t\tif (SelNext !== null)\n\t\t\tSelNext.PrevInSEL = SelPrev;\n\t\te.NextInSEL = null;\n\t\te.PrevInSEL = null;\n\t};\n\n\tClipperLib.Clipper.prototype.ProcessHorizontals = function ()\n\t{\n\t\tvar horzEdge = {}; //m_SortedEdges;\n\t\twhile (this.PopEdgeFromSEL(horzEdge))\n\t\t{\n\t\t\tthis.ProcessHorizontal(horzEdge.v);\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.GetHorzDirection = function (HorzEdge, $var)\n\t{\n\t\tif (HorzEdge.Bot.X < HorzEdge.Top.X)\n\t\t{\n\t\t\t$var.Left = HorzEdge.Bot.X;\n\t\t\t$var.Right = HorzEdge.Top.X;\n\t\t\t$var.Dir = ClipperLib.Direction.dLeftToRight;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$var.Left = HorzEdge.Top.X;\n\t\t\t$var.Right = HorzEdge.Bot.X;\n\t\t\t$var.Dir = ClipperLib.Direction.dRightToLeft;\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.ProcessHorizontal = function (horzEdge)\n\t{\n\t\tvar $var = {\n\t\t\tDir: null,\n\t\t\tLeft: null,\n\t\t\tRight: null\n\t\t};\n\n\t\tthis.GetHorzDirection(horzEdge, $var);\n\t\tvar dir = $var.Dir;\n\t\tvar horzLeft = $var.Left;\n\t\tvar horzRight = $var.Right;\n\n\t\tvar IsOpen = horzEdge.WindDelta === 0;\n\n\t\tvar eLastHorz = horzEdge,\n\t\t\teMaxPair = null;\n\t\twhile (eLastHorz.NextInLML !== null && ClipperLib.ClipperBase.IsHorizontal(eLastHorz.NextInLML))\n\t\t\teLastHorz = eLastHorz.NextInLML;\n\t\tif (eLastHorz.NextInLML === null)\n\t\t\teMaxPair = this.GetMaximaPair(eLastHorz);\n\n\t\tvar currMax = this.m_Maxima;\n\t\tif (currMax !== null)\n\t\t{\n\t\t\t//get the first maxima in range (X) ...\n\t\t\tif (dir === ClipperLib.Direction.dLeftToRight)\n\t\t\t{\n\t\t\t\twhile (currMax !== null && currMax.X <= horzEdge.Bot.X)\n\t\t\t\t{\n\t\t\t\t\tcurrMax = currMax.Next;\n\t\t\t\t}\n\t\t\t\tif (currMax !== null && currMax.X >= eLastHorz.Top.X)\n\t\t\t\t{\n\t\t\t\t\tcurrMax = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\twhile (currMax.Next !== null && currMax.Next.X < horzEdge.Bot.X)\n\t\t\t\t{\n\t\t\t\t\tcurrMax = currMax.Next;\n\t\t\t\t}\n\t\t\t\tif (currMax.X <= eLastHorz.Top.X)\n\t\t\t\t{\n\t\t\t\t\tcurrMax = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar op1 = null;\n\t\tfor (;;) //loop through consec. horizontal edges\n\t\t{\n\t\t\tvar IsLastHorz = (horzEdge === eLastHorz);\n\t\t\tvar e = this.GetNextInAEL(horzEdge, dir);\n\t\t\twhile (e !== null)\n\t\t\t{\n\t\t\t\t//this code block inserts extra coords into horizontal edges (in output\n\t\t\t\t//polygons) whereever maxima touch these horizontal edges. This helps\n\t\t\t\t//'simplifying' polygons (ie if the Simplify property is set).\n\t\t\t\tif (currMax !== null)\n\t\t\t\t{\n\t\t\t\t\tif (dir === ClipperLib.Direction.dLeftToRight)\n\t\t\t\t\t{\n\t\t\t\t\t\twhile (currMax !== null && currMax.X < e.Curr.X)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (horzEdge.OutIdx >= 0 && !IsOpen)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.AddOutPt(horzEdge, new ClipperLib.IntPoint2(currMax.X, horzEdge.Bot.Y));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurrMax = currMax.Next;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\twhile (currMax !== null && currMax.X > e.Curr.X)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (horzEdge.OutIdx >= 0 && !IsOpen)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.AddOutPt(horzEdge, new ClipperLib.IntPoint2(currMax.X, horzEdge.Bot.Y));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurrMax = currMax.Prev;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ((dir === ClipperLib.Direction.dLeftToRight && e.Curr.X > horzRight) || (dir === ClipperLib.Direction.dRightToLeft && e.Curr.X < horzLeft))\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t//Also break if we've got to the end of an intermediate horizontal edge ...\n\t\t\t\t//nb: Smaller Dx's are to the right of larger Dx's ABOVE the horizontal.\n\t\t\t\tif (e.Curr.X === horzEdge.Top.X && horzEdge.NextInLML !== null && e.Dx < horzEdge.NextInLML.Dx)\n\t\t\t\t\tbreak;\n\n\t\t\t\tif (horzEdge.OutIdx >= 0 && !IsOpen) //note: may be done multiple times\n\t\t\t\t{\n\t\t\t\t\tif (ClipperLib.use_xyz)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (dir === ClipperLib.Direction.dLeftToRight)\n\t\t\t\t\t\t\tthis.SetZ(e.Curr, horzEdge, e);\n\t\t\t\t\t\telse this.SetZ(e.Curr, e, horzEdge);\n\t\t\t\t\t}\n\n\t\t\t\t\top1 = this.AddOutPt(horzEdge, e.Curr);\n\t\t\t\t\tvar eNextHorz = this.m_SortedEdges;\n\t\t\t\t\twhile (eNextHorz !== null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (eNextHorz.OutIdx >= 0 && this.HorzSegmentsOverlap(horzEdge.Bot.X, horzEdge.Top.X, eNextHorz.Bot.X, eNextHorz.Top.X))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar op2 = this.GetLastOutPt(eNextHorz);\n\t\t\t\t\t\t\tthis.AddJoin(op2, op1, eNextHorz.Top);\n\t\t\t\t\t\t}\n\t\t\t\t\t\teNextHorz = eNextHorz.NextInSEL;\n\t\t\t\t\t}\n\t\t\t\t\tthis.AddGhostJoin(op1, horzEdge.Bot);\n\t\t\t\t}\n\n\t\t\t\t//OK, so far we're still in range of the horizontal Edge  but make sure\n\t\t\t\t//we're at the last of consec. horizontals when matching with eMaxPair\n\t\t\t\tif (e === eMaxPair && IsLastHorz)\n\t\t\t\t{\n\t\t\t\t\tif (horzEdge.OutIdx >= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.AddLocalMaxPoly(horzEdge, eMaxPair, horzEdge.Top);\n\t\t\t\t\t}\n\t\t\t\t\tthis.DeleteFromAEL(horzEdge);\n\t\t\t\t\tthis.DeleteFromAEL(eMaxPair);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (dir === ClipperLib.Direction.dLeftToRight)\n\t\t\t\t{\n\t\t\t\t\tvar Pt = new ClipperLib.IntPoint2(e.Curr.X, horzEdge.Curr.Y);\n\t\t\t\t\tthis.IntersectEdges(horzEdge, e, Pt);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar Pt = new ClipperLib.IntPoint2(e.Curr.X, horzEdge.Curr.Y);\n\t\t\t\t\tthis.IntersectEdges(e, horzEdge, Pt);\n\t\t\t\t}\n\t\t\t\tvar eNext = this.GetNextInAEL(e, dir);\n\t\t\t\tthis.SwapPositionsInAEL(horzEdge, e);\n\t\t\t\te = eNext;\n\t\t\t} //end while(e !== null)\n\n\t\t\t//Break out of loop if HorzEdge.NextInLML is not also horizontal ...\n\t\t\tif (horzEdge.NextInLML === null || !ClipperLib.ClipperBase.IsHorizontal(horzEdge.NextInLML))\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\thorzEdge = this.UpdateEdgeIntoAEL(horzEdge);\n\t\t\tif (horzEdge.OutIdx >= 0)\n\t\t\t{\n\t\t\t\tthis.AddOutPt(horzEdge, horzEdge.Bot);\n\t\t\t}\n\n\t\t\t$var = {\n\t\t\t\tDir: dir,\n\t\t\t\tLeft: horzLeft,\n\t\t\t\tRight: horzRight\n\t\t\t};\n\n\t\t\tthis.GetHorzDirection(horzEdge, $var);\n\t\t\tdir = $var.Dir;\n\t\t\thorzLeft = $var.Left;\n\t\t\thorzRight = $var.Right;\n\n\t\t} //end for (;;)\n\n\t\tif (horzEdge.OutIdx >= 0 && op1 === null)\n\t\t{\n\t\t\top1 = this.GetLastOutPt(horzEdge);\n\t\t\tvar eNextHorz = this.m_SortedEdges;\n\t\t\twhile (eNextHorz !== null)\n\t\t\t{\n\t\t\t\tif (eNextHorz.OutIdx >= 0 && this.HorzSegmentsOverlap(horzEdge.Bot.X, horzEdge.Top.X, eNextHorz.Bot.X, eNextHorz.Top.X))\n\t\t\t\t{\n\t\t\t\t\tvar op2 = this.GetLastOutPt(eNextHorz);\n\t\t\t\t\tthis.AddJoin(op2, op1, eNextHorz.Top);\n\t\t\t\t}\n\t\t\t\teNextHorz = eNextHorz.NextInSEL;\n\t\t\t}\n\t\t\tthis.AddGhostJoin(op1, horzEdge.Top);\n\t\t}\n\n\t\tif (horzEdge.NextInLML !== null)\n\t\t{\n\t\t\tif (horzEdge.OutIdx >= 0)\n\t\t\t{\n\t\t\t\top1 = this.AddOutPt(horzEdge, horzEdge.Top);\n\n\t\t\t\thorzEdge = this.UpdateEdgeIntoAEL(horzEdge);\n\t\t\t\tif (horzEdge.WindDelta === 0)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t//nb: HorzEdge is no longer horizontal here\n\t\t\t\tvar ePrev = horzEdge.PrevInAEL;\n\t\t\t\tvar eNext = horzEdge.NextInAEL;\n\t\t\t\tif (ePrev !== null && ePrev.Curr.X === horzEdge.Bot.X && ePrev.Curr.Y === horzEdge.Bot.Y && ePrev.WindDelta === 0 && (ePrev.OutIdx >= 0 && ePrev.Curr.Y > ePrev.Top.Y && ClipperLib.ClipperBase.SlopesEqual3(horzEdge, ePrev, this.m_UseFullRange)))\n\t\t\t\t{\n\t\t\t\t\tvar op2 = this.AddOutPt(ePrev, horzEdge.Bot);\n\t\t\t\t\tthis.AddJoin(op1, op2, horzEdge.Top);\n\t\t\t\t}\n\t\t\t\telse if (eNext !== null && eNext.Curr.X === horzEdge.Bot.X && eNext.Curr.Y === horzEdge.Bot.Y && eNext.WindDelta !== 0 && eNext.OutIdx >= 0 && eNext.Curr.Y > eNext.Top.Y && ClipperLib.ClipperBase.SlopesEqual3(horzEdge, eNext, this.m_UseFullRange))\n\t\t\t\t{\n\t\t\t\t\tvar op2 = this.AddOutPt(eNext, horzEdge.Bot);\n\t\t\t\t\tthis.AddJoin(op1, op2, horzEdge.Top);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thorzEdge = this.UpdateEdgeIntoAEL(horzEdge);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (horzEdge.OutIdx >= 0)\n\t\t\t{\n\t\t\t\tthis.AddOutPt(horzEdge, horzEdge.Top);\n\t\t\t}\n\t\t\tthis.DeleteFromAEL(horzEdge);\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.GetNextInAEL = function (e, Direction)\n\t{\n\t\treturn Direction === ClipperLib.Direction.dLeftToRight ? e.NextInAEL : e.PrevInAEL;\n\t};\n\n\tClipperLib.Clipper.prototype.IsMinima = function (e)\n\t{\n\t\treturn e !== null && (e.Prev.NextInLML !== e) && (e.Next.NextInLML !== e);\n\t};\n\n\tClipperLib.Clipper.prototype.IsMaxima = function (e, Y)\n\t{\n\t\treturn (e !== null && e.Top.Y === Y && e.NextInLML === null);\n\t};\n\n\tClipperLib.Clipper.prototype.IsIntermediate = function (e, Y)\n\t{\n\t\treturn (e.Top.Y === Y && e.NextInLML !== null);\n\t};\n\n\tClipperLib.Clipper.prototype.GetMaximaPair = function (e)\n\t{\n\t\tif ((ClipperLib.IntPoint.op_Equality(e.Next.Top, e.Top)) && e.Next.NextInLML === null)\n\t\t{\n\t\t\treturn e.Next;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ((ClipperLib.IntPoint.op_Equality(e.Prev.Top, e.Top)) && e.Prev.NextInLML === null)\n\t\t\t{\n\t\t\t\treturn e.Prev;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.GetMaximaPairEx = function (e)\n\t{\n\t\t//as above but returns null if MaxPair isn't in AEL (unless it's horizontal)\n\t\tvar result = this.GetMaximaPair(e);\n\t\tif (result === null || result.OutIdx === ClipperLib.ClipperBase.Skip ||\n\t\t\t((result.NextInAEL === result.PrevInAEL) && !ClipperLib.ClipperBase.IsHorizontal(result)))\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.prototype.ProcessIntersections = function (topY)\n\t{\n\t\tif (this.m_ActiveEdges === null)\n\t\t\treturn true;\n\t\ttry\n\t\t{\n\t\t\tthis.BuildIntersectList(topY);\n\t\t\tif (this.m_IntersectList.length === 0)\n\t\t\t\treturn true;\n\t\t\tif (this.m_IntersectList.length === 1 || this.FixupIntersectionOrder())\n\t\t\t\tthis.ProcessIntersectList();\n\t\t\telse\n\t\t\t\treturn false;\n\t\t}\n\t\tcatch ($$e2)\n\t\t{\n\t\t\tthis.m_SortedEdges = null;\n\t\t\tthis.m_IntersectList.length = 0;\n\t\t\tClipperLib.Error(\"ProcessIntersections error\");\n\t\t}\n\t\tthis.m_SortedEdges = null;\n\t\treturn true;\n\t};\n\n\tClipperLib.Clipper.prototype.BuildIntersectList = function (topY)\n\t{\n\t\tif (this.m_ActiveEdges === null)\n\t\t\treturn;\n\t\t//prepare for sorting ...\n\t\tvar e = this.m_ActiveEdges;\n\t\t//console.log(JSON.stringify(JSON.decycle( e )));\n\t\tthis.m_SortedEdges = e;\n\t\twhile (e !== null)\n\t\t{\n\t\t\te.PrevInSEL = e.PrevInAEL;\n\t\t\te.NextInSEL = e.NextInAEL;\n\t\t\te.Curr.X = ClipperLib.Clipper.TopX(e, topY);\n\t\t\te = e.NextInAEL;\n\t\t}\n\t\t//bubblesort ...\n\t\tvar isModified = true;\n\t\twhile (isModified && this.m_SortedEdges !== null)\n\t\t{\n\t\t\tisModified = false;\n\t\t\te = this.m_SortedEdges;\n\t\t\twhile (e.NextInSEL !== null)\n\t\t\t{\n\t\t\t\tvar eNext = e.NextInSEL;\n\t\t\t\tvar pt = new ClipperLib.IntPoint0();\n\t\t\t\t//console.log(\"e.Curr.X: \" + e.Curr.X + \" eNext.Curr.X\" + eNext.Curr.X);\n\t\t\t\tif (e.Curr.X > eNext.Curr.X)\n\t\t\t\t{\n\t\t\t\t\tthis.IntersectPoint(e, eNext, pt);\n\t\t\t\t\tif (pt.Y < topY)\n\t\t\t\t\t{\n\t\t\t\t\t\tpt = new ClipperLib.IntPoint2(ClipperLib.Clipper.TopX(e, topY), topY);\n\t\t\t\t\t}\n\t\t\t\t\tvar newNode = new ClipperLib.IntersectNode();\n\t\t\t\t\tnewNode.Edge1 = e;\n\t\t\t\t\tnewNode.Edge2 = eNext;\n\t\t\t\t\t//newNode.Pt = pt;\n\t\t\t\t\tnewNode.Pt.X = pt.X;\n\t\t\t\t\tnewNode.Pt.Y = pt.Y;\n\t\t\t\t\tif (ClipperLib.use_xyz) newNode.Pt.Z = pt.Z;\n\t\t\t\t\tthis.m_IntersectList.push(newNode);\n\t\t\t\t\tthis.SwapPositionsInSEL(e, eNext);\n\t\t\t\t\tisModified = true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\te = eNext;\n\t\t\t}\n\t\t\tif (e.PrevInSEL !== null)\n\t\t\t\te.PrevInSEL.NextInSEL = null;\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.m_SortedEdges = null;\n\t};\n\n\tClipperLib.Clipper.prototype.EdgesAdjacent = function (inode)\n\t{\n\t\treturn (inode.Edge1.NextInSEL === inode.Edge2) || (inode.Edge1.PrevInSEL === inode.Edge2);\n\t};\n\n\tClipperLib.Clipper.IntersectNodeSort = function (node1, node2)\n\t{\n\t\t//the following typecast is safe because the differences in Pt.Y will\n\t\t//be limited to the height of the scanbeam.\n\t\treturn (node2.Pt.Y - node1.Pt.Y);\n\t};\n\n\tClipperLib.Clipper.prototype.FixupIntersectionOrder = function ()\n\t{\n\t\t//pre-condition: intersections are sorted bottom-most first.\n\t\t//Now it's crucial that intersections are made only between adjacent edges,\n\t\t//so to ensure this the order of intersections may need adjusting ...\n\t\tthis.m_IntersectList.sort(this.m_IntersectNodeComparer);\n\t\tthis.CopyAELToSEL();\n\t\tvar cnt = this.m_IntersectList.length;\n\t\tfor (var i = 0; i < cnt; i++)\n\t\t{\n\t\t\tif (!this.EdgesAdjacent(this.m_IntersectList[i]))\n\t\t\t{\n\t\t\t\tvar j = i + 1;\n\t\t\t\twhile (j < cnt && !this.EdgesAdjacent(this.m_IntersectList[j]))\n\t\t\t\t\tj++;\n\t\t\t\tif (j === cnt)\n\t\t\t\t\treturn false;\n\t\t\t\tvar tmp = this.m_IntersectList[i];\n\t\t\t\tthis.m_IntersectList[i] = this.m_IntersectList[j];\n\t\t\t\tthis.m_IntersectList[j] = tmp;\n\t\t\t}\n\t\t\tthis.SwapPositionsInSEL(this.m_IntersectList[i].Edge1, this.m_IntersectList[i].Edge2);\n\t\t}\n\t\treturn true;\n\t};\n\n\tClipperLib.Clipper.prototype.ProcessIntersectList = function ()\n\t{\n\t\tfor (var i = 0, ilen = this.m_IntersectList.length; i < ilen; i++)\n\t\t{\n\t\t\tvar iNode = this.m_IntersectList[i];\n\t\t\tthis.IntersectEdges(iNode.Edge1, iNode.Edge2, iNode.Pt);\n\t\t\tthis.SwapPositionsInAEL(iNode.Edge1, iNode.Edge2);\n\t\t}\n\t\tthis.m_IntersectList.length = 0;\n\t};\n\n\t/*\n\t--------------------------------\n\tRound speedtest: http://jsperf.com/fastest-round\n\t--------------------------------\n\t*/\n\tvar R1 = function (a)\n\t{\n\t\treturn a < 0 ? Math.ceil(a - 0.5) : Math.round(a)\n\t};\n\n\tvar R2 = function (a)\n\t{\n\t\treturn a < 0 ? Math.ceil(a - 0.5) : Math.floor(a + 0.5)\n\t};\n\n\tvar R3 = function (a)\n\t{\n\t\treturn a < 0 ? -Math.round(Math.abs(a)) : Math.round(a)\n\t};\n\n\tvar R4 = function (a)\n\t{\n\t\tif (a < 0)\n\t\t{\n\t\t\ta -= 0.5;\n\t\t\treturn a < -2147483648 ? Math.ceil(a) : a | 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ta += 0.5;\n\t\t\treturn a > 2147483647 ? Math.floor(a) : a | 0;\n\t\t}\n\t};\n\n\tif (browser.msie) ClipperLib.Clipper.Round = R1;\n\telse if (browser.chromium) ClipperLib.Clipper.Round = R3;\n\telse if (browser.safari) ClipperLib.Clipper.Round = R4;\n\telse ClipperLib.Clipper.Round = R2; // eg. browser.chrome || browser.firefox || browser.opera\n\tClipperLib.Clipper.TopX = function (edge, currentY)\n\t{\n\t\t//if (edge.Bot == edge.Curr) alert (\"edge.Bot = edge.Curr\");\n\t\t//if (edge.Bot == edge.Top) alert (\"edge.Bot = edge.Top\");\n\t\tif (currentY === edge.Top.Y)\n\t\t\treturn edge.Top.X;\n\t\treturn edge.Bot.X + ClipperLib.Clipper.Round(edge.Dx * (currentY - edge.Bot.Y));\n\t};\n\n\tClipperLib.Clipper.prototype.IntersectPoint = function (edge1, edge2, ip)\n\t{\n\t\tip.X = 0;\n\t\tip.Y = 0;\n\t\tvar b1, b2;\n\t\t//nb: with very large coordinate values, it's possible for SlopesEqual() to\n\t\t//return false but for the edge.Dx value be equal due to double precision rounding.\n\t\tif (edge1.Dx === edge2.Dx)\n\t\t{\n\t\t\tip.Y = edge1.Curr.Y;\n\t\t\tip.X = ClipperLib.Clipper.TopX(edge1, ip.Y);\n\t\t\treturn;\n\t\t}\n\t\tif (edge1.Delta.X === 0)\n\t\t{\n\t\t\tip.X = edge1.Bot.X;\n\t\t\tif (ClipperLib.ClipperBase.IsHorizontal(edge2))\n\t\t\t{\n\t\t\t\tip.Y = edge2.Bot.Y;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tb2 = edge2.Bot.Y - (edge2.Bot.X / edge2.Dx);\n\t\t\t\tip.Y = ClipperLib.Clipper.Round(ip.X / edge2.Dx + b2);\n\t\t\t}\n\t\t}\n\t\telse if (edge2.Delta.X === 0)\n\t\t{\n\t\t\tip.X = edge2.Bot.X;\n\t\t\tif (ClipperLib.ClipperBase.IsHorizontal(edge1))\n\t\t\t{\n\t\t\t\tip.Y = edge1.Bot.Y;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tb1 = edge1.Bot.Y - (edge1.Bot.X / edge1.Dx);\n\t\t\t\tip.Y = ClipperLib.Clipper.Round(ip.X / edge1.Dx + b1);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tb1 = edge1.Bot.X - edge1.Bot.Y * edge1.Dx;\n\t\t\tb2 = edge2.Bot.X - edge2.Bot.Y * edge2.Dx;\n\t\t\tvar q = (b2 - b1) / (edge1.Dx - edge2.Dx);\n\t\t\tip.Y = ClipperLib.Clipper.Round(q);\n\t\t\tif (Math.abs(edge1.Dx) < Math.abs(edge2.Dx))\n\t\t\t\tip.X = ClipperLib.Clipper.Round(edge1.Dx * q + b1);\n\t\t\telse\n\t\t\t\tip.X = ClipperLib.Clipper.Round(edge2.Dx * q + b2);\n\t\t}\n\t\tif (ip.Y < edge1.Top.Y || ip.Y < edge2.Top.Y)\n\t\t{\n\t\t\tif (edge1.Top.Y > edge2.Top.Y)\n\t\t\t{\n\t\t\t\tip.Y = edge1.Top.Y;\n\t\t\t\tip.X = ClipperLib.Clipper.TopX(edge2, edge1.Top.Y);\n\t\t\t\treturn ip.X < edge1.Top.X;\n\t\t\t}\n\t\t\telse\n\t\t\t\tip.Y = edge2.Top.Y;\n\t\t\tif (Math.abs(edge1.Dx) < Math.abs(edge2.Dx))\n\t\t\t\tip.X = ClipperLib.Clipper.TopX(edge1, ip.Y);\n\t\t\telse\n\t\t\t\tip.X = ClipperLib.Clipper.TopX(edge2, ip.Y);\n\t\t}\n\t\t//finally, don't allow 'ip' to be BELOW curr.Y (ie bottom of scanbeam) ...\n\t\tif (ip.Y > edge1.Curr.Y)\n\t\t{\n\t\t\tip.Y = edge1.Curr.Y;\n\t\t\t//better to use the more vertical edge to derive X ...\n\t\t\tif (Math.abs(edge1.Dx) > Math.abs(edge2.Dx))\n\t\t\t\tip.X = ClipperLib.Clipper.TopX(edge2, ip.Y);\n\t\t\telse\n\t\t\t\tip.X = ClipperLib.Clipper.TopX(edge1, ip.Y);\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.ProcessEdgesAtTopOfScanbeam = function (topY)\n\t{\n\t\tvar e = this.m_ActiveEdges;\n\n\t\twhile (e !== null)\n\t\t{\n\t\t\t//1. process maxima, treating them as if they're 'bent' horizontal edges,\n\t\t\t//   but exclude maxima with horizontal edges. nb: e can't be a horizontal.\n\t\t\tvar IsMaximaEdge = this.IsMaxima(e, topY);\n\t\t\tif (IsMaximaEdge)\n\t\t\t{\n\t\t\t\tvar eMaxPair = this.GetMaximaPairEx(e);\n\t\t\t\tIsMaximaEdge = (eMaxPair === null || !ClipperLib.ClipperBase.IsHorizontal(eMaxPair));\n\t\t\t}\n\t\t\tif (IsMaximaEdge)\n\t\t\t{\n\t\t\t\tif (this.StrictlySimple)\n\t\t\t\t{\n\t\t\t\t\tthis.InsertMaxima(e.Top.X);\n\t\t\t\t}\n\t\t\t\tvar ePrev = e.PrevInAEL;\n\t\t\t\tthis.DoMaxima(e);\n\t\t\t\tif (ePrev === null)\n\t\t\t\t\te = this.m_ActiveEdges;\n\t\t\t\telse\n\t\t\t\t\te = ePrev.NextInAEL;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//2. promote horizontal edges, otherwise update Curr.X and Curr.Y ...\n\t\t\t\tif (this.IsIntermediate(e, topY) && ClipperLib.ClipperBase.IsHorizontal(e.NextInLML))\n\t\t\t\t{\n\t\t\t\t\te = this.UpdateEdgeIntoAEL(e);\n\t\t\t\t\tif (e.OutIdx >= 0)\n\t\t\t\t\t\tthis.AddOutPt(e, e.Bot);\n\t\t\t\t\tthis.AddEdgeToSEL(e);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\te.Curr.X = ClipperLib.Clipper.TopX(e, topY);\n\t\t\t\t\te.Curr.Y = topY;\n\t\t\t\t}\n\n\t\t\t\tif (ClipperLib.use_xyz)\n\t\t\t\t{\n\t\t\t\t\tif (e.Top.Y === topY) e.Curr.Z = e.Top.Z;\n\t\t\t\t\telse if (e.Bot.Y === topY) e.Curr.Z = e.Bot.Z;\n\t\t\t\t\telse e.Curr.Z = 0;\n\t\t\t\t}\n\n\t\t\t\t//When StrictlySimple and 'e' is being touched by another edge, then\n\t\t\t\t//make sure both edges have a vertex here ...\n\t\t\t\tif (this.StrictlySimple)\n\t\t\t\t{\n\t\t\t\t\tvar ePrev = e.PrevInAEL;\n\t\t\t\t\tif ((e.OutIdx >= 0) && (e.WindDelta !== 0) && ePrev !== null &&\n\t\t\t\t\t\t(ePrev.OutIdx >= 0) && (ePrev.Curr.X === e.Curr.X) &&\n\t\t\t\t\t\t(ePrev.WindDelta !== 0))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar ip = new ClipperLib.IntPoint1(e.Curr);\n\n\t\t\t\t\t\tif (ClipperLib.use_xyz)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.SetZ(ip, ePrev, e);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar op = this.AddOutPt(ePrev, ip);\n\t\t\t\t\t\tvar op2 = this.AddOutPt(e, ip);\n\t\t\t\t\t\tthis.AddJoin(op, op2, ip); //StrictlySimple (type-3) join\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\te = e.NextInAEL;\n\t\t\t}\n\t\t}\n\t\t//3. Process horizontals at the Top of the scanbeam ...\n\t\tthis.ProcessHorizontals();\n\t\tthis.m_Maxima = null;\n\t\t//4. Promote intermediate vertices ...\n\t\te = this.m_ActiveEdges;\n\t\twhile (e !== null)\n\t\t{\n\t\t\tif (this.IsIntermediate(e, topY))\n\t\t\t{\n\t\t\t\tvar op = null;\n\t\t\t\tif (e.OutIdx >= 0)\n\t\t\t\t\top = this.AddOutPt(e, e.Top);\n\t\t\t\te = this.UpdateEdgeIntoAEL(e);\n\t\t\t\t//if output polygons share an edge, they'll need joining later ...\n\t\t\t\tvar ePrev = e.PrevInAEL;\n\t\t\t\tvar eNext = e.NextInAEL;\n\n\t\t\t\tif (ePrev !== null && ePrev.Curr.X === e.Bot.X && ePrev.Curr.Y === e.Bot.Y && op !== null && ePrev.OutIdx >= 0 && ePrev.Curr.Y === ePrev.Top.Y && ClipperLib.ClipperBase.SlopesEqual5(e.Curr, e.Top, ePrev.Curr, ePrev.Top, this.m_UseFullRange) && (e.WindDelta !== 0) && (ePrev.WindDelta !== 0))\n\t\t\t\t{\n\t\t\t\t\tvar op2 = this.AddOutPt(ePrev2, e.Bot);\n\t\t\t\t\tthis.AddJoin(op, op2, e.Top);\n\t\t\t\t}\n\t\t\t\telse if (eNext !== null && eNext.Curr.X === e.Bot.X && eNext.Curr.Y === e.Bot.Y && op !== null && eNext.OutIdx >= 0 && eNext.Curr.Y === eNext.Top.Y && ClipperLib.ClipperBase.SlopesEqual5(e.Curr, e.Top, eNext.Curr, eNext.Top, this.m_UseFullRange) && (e.WindDelta !== 0) && (eNext.WindDelta !== 0))\n\t\t\t\t{\n\t\t\t\t\tvar op2 = this.AddOutPt(eNext, e.Bot);\n\t\t\t\t\tthis.AddJoin(op, op2, e.Top);\n\t\t\t\t}\n\t\t\t}\n\t\t\te = e.NextInAEL;\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.DoMaxima = function (e)\n\t{\n\t\tvar eMaxPair = this.GetMaximaPairEx(e);\n\t\tif (eMaxPair === null)\n\t\t{\n\t\t\tif (e.OutIdx >= 0)\n\t\t\t\tthis.AddOutPt(e, e.Top);\n\t\t\tthis.DeleteFromAEL(e);\n\t\t\treturn;\n\t\t}\n\t\tvar eNext = e.NextInAEL;\n\t\twhile (eNext !== null && eNext !== eMaxPair)\n\t\t{\n\t\t\tthis.IntersectEdges(e, eNext, e.Top);\n\t\t\tthis.SwapPositionsInAEL(e, eNext);\n\t\t\teNext = e.NextInAEL;\n\t\t}\n\t\tif (e.OutIdx === -1 && eMaxPair.OutIdx === -1)\n\t\t{\n\t\t\tthis.DeleteFromAEL(e);\n\t\t\tthis.DeleteFromAEL(eMaxPair);\n\t\t}\n\t\telse if (e.OutIdx >= 0 && eMaxPair.OutIdx >= 0)\n\t\t{\n\t\t\tif (e.OutIdx >= 0) this.AddLocalMaxPoly(e, eMaxPair, e.Top);\n\t\t\tthis.DeleteFromAEL(e);\n\t\t\tthis.DeleteFromAEL(eMaxPair);\n\t\t}\n\t\telse if (ClipperLib.use_lines && e.WindDelta === 0)\n\t\t{\n\t\t\tif (e.OutIdx >= 0)\n\t\t\t{\n\t\t\t\tthis.AddOutPt(e, e.Top);\n\t\t\t\te.OutIdx = ClipperLib.ClipperBase.Unassigned;\n\t\t\t}\n\t\t\tthis.DeleteFromAEL(e);\n\t\t\tif (eMaxPair.OutIdx >= 0)\n\t\t\t{\n\t\t\t\tthis.AddOutPt(eMaxPair, e.Top);\n\t\t\t\teMaxPair.OutIdx = ClipperLib.ClipperBase.Unassigned;\n\t\t\t}\n\t\t\tthis.DeleteFromAEL(eMaxPair);\n\t\t}\n\t\telse\n\t\t\tClipperLib.Error(\"DoMaxima error\");\n\t};\n\n\tClipperLib.Clipper.ReversePaths = function (polys)\n\t{\n\t\tfor (var i = 0, len = polys.length; i < len; i++)\n\t\t\tpolys[i].reverse();\n\t};\n\n\tClipperLib.Clipper.Orientation = function (poly)\n\t{\n\t\treturn ClipperLib.Clipper.Area(poly) >= 0;\n\t};\n\n\tClipperLib.Clipper.prototype.PointCount = function (pts)\n\t{\n\t\tif (pts === null)\n\t\t\treturn 0;\n\t\tvar result = 0;\n\t\tvar p = pts;\n\t\tdo {\n\t\t\tresult++;\n\t\t\tp = p.Next;\n\t\t}\n\t\twhile (p !== pts)\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.prototype.BuildResult = function (polyg)\n\t{\n\t\tClipperLib.Clear(polyg);\n\t\tfor (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n\t\t{\n\t\t\tvar outRec = this.m_PolyOuts[i];\n\t\t\tif (outRec.Pts === null)\n\t\t\t\tcontinue;\n\t\t\tvar p = outRec.Pts.Prev;\n\t\t\tvar cnt = this.PointCount(p);\n\t\t\tif (cnt < 2)\n\t\t\t\tcontinue;\n\t\t\tvar pg = new Array(cnt);\n\t\t\tfor (var j = 0; j < cnt; j++)\n\t\t\t{\n\t\t\t\tpg[j] = p.Pt;\n\t\t\t\tp = p.Prev;\n\t\t\t}\n\t\t\tpolyg.push(pg);\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.BuildResult2 = function (polytree)\n\t{\n\t\tpolytree.Clear();\n\t\t//add each output polygon/contour to polytree ...\n\t\t//polytree.m_AllPolys.set_Capacity(this.m_PolyOuts.length);\n\t\tfor (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n\t\t{\n\t\t\tvar outRec = this.m_PolyOuts[i];\n\t\t\tvar cnt = this.PointCount(outRec.Pts);\n\t\t\tif ((outRec.IsOpen && cnt < 2) || (!outRec.IsOpen && cnt < 3))\n\t\t\t\tcontinue;\n\t\t\tthis.FixHoleLinkage(outRec);\n\t\t\tvar pn = new ClipperLib.PolyNode();\n\t\t\tpolytree.m_AllPolys.push(pn);\n\t\t\toutRec.PolyNode = pn;\n\t\t\tpn.m_polygon.length = cnt;\n\t\t\tvar op = outRec.Pts.Prev;\n\t\t\tfor (var j = 0; j < cnt; j++)\n\t\t\t{\n\t\t\t\tpn.m_polygon[j] = op.Pt;\n\t\t\t\top = op.Prev;\n\t\t\t}\n\t\t}\n\t\t//fixup PolyNode links etc ...\n\t\t//polytree.m_Childs.set_Capacity(this.m_PolyOuts.length);\n\t\tfor (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n\t\t{\n\t\t\tvar outRec = this.m_PolyOuts[i];\n\t\t\tif (outRec.PolyNode === null)\n\t\t\t\tcontinue;\n\t\t\telse if (outRec.IsOpen)\n\t\t\t{\n\t\t\t\toutRec.PolyNode.IsOpen = true;\n\t\t\t\tpolytree.AddChild(outRec.PolyNode);\n\t\t\t}\n\t\t\telse if (outRec.FirstLeft !== null && outRec.FirstLeft.PolyNode !== null)\n\t\t\t\toutRec.FirstLeft.PolyNode.AddChild(outRec.PolyNode);\n\t\t\telse\n\t\t\t\tpolytree.AddChild(outRec.PolyNode);\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.FixupOutPolyline = function (outRec)\n\t{\n\t\tvar pp = outRec.Pts;\n\t\tvar lastPP = pp.Prev;\n\t\twhile (pp !== lastPP)\n\t\t{\n\t\t\tpp = pp.Next;\n\t\t\tif (ClipperLib.IntPoint.op_Equality(pp.Pt, pp.Prev.Pt))\n\t\t\t{\n\t\t\t\tif (pp === lastPP)\n\t\t\t\t{\n\t\t\t\t\tlastPP = pp.Prev;\n\t\t\t\t}\n\t\t\t\tvar tmpPP = pp.Prev;\n\t\t\t\ttmpPP.Next = pp.Next;\n\t\t\t\tpp.Next.Prev = tmpPP;\n\t\t\t\tpp = tmpPP;\n\t\t\t}\n\t\t}\n\t\tif (pp === pp.Prev)\n\t\t{\n\t\t\toutRec.Pts = null;\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.FixupOutPolygon = function (outRec)\n\t{\n\t\t//FixupOutPolygon() - removes duplicate points and simplifies consecutive\n\t\t//parallel edges by removing the middle vertex.\n\t\tvar lastOK = null;\n\t\toutRec.BottomPt = null;\n\t\tvar pp = outRec.Pts;\n\t\tvar preserveCol = this.PreserveCollinear || this.StrictlySimple;\n\t\tfor (;;)\n\t\t{\n\t\t\tif (pp.Prev === pp || pp.Prev === pp.Next)\n\t\t\t{\n\t\t\t\toutRec.Pts = null;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//test for duplicate points and collinear edges ...\n\t\t\tif ((ClipperLib.IntPoint.op_Equality(pp.Pt, pp.Next.Pt)) || (ClipperLib.IntPoint.op_Equality(pp.Pt, pp.Prev.Pt)) || (ClipperLib.ClipperBase.SlopesEqual4(pp.Prev.Pt, pp.Pt, pp.Next.Pt, this.m_UseFullRange) && (!preserveCol || !this.Pt2IsBetweenPt1AndPt3(pp.Prev.Pt, pp.Pt, pp.Next.Pt))))\n\t\t\t{\n\t\t\t\tlastOK = null;\n\t\t\t\tpp.Prev.Next = pp.Next;\n\t\t\t\tpp.Next.Prev = pp.Prev;\n\t\t\t\tpp = pp.Prev;\n\t\t\t}\n\t\t\telse if (pp === lastOK)\n\t\t\t\tbreak;\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (lastOK === null)\n\t\t\t\t\tlastOK = pp;\n\t\t\t\tpp = pp.Next;\n\t\t\t}\n\t\t}\n\t\toutRec.Pts = pp;\n\t};\n\n\tClipperLib.Clipper.prototype.DupOutPt = function (outPt, InsertAfter)\n\t{\n\t\tvar result = new ClipperLib.OutPt();\n\t\t//result.Pt = outPt.Pt;\n\t\tresult.Pt.X = outPt.Pt.X;\n\t\tresult.Pt.Y = outPt.Pt.Y;\n\t\tif (ClipperLib.use_xyz) result.Pt.Z = outPt.Pt.Z;\n\t\tresult.Idx = outPt.Idx;\n\t\tif (InsertAfter)\n\t\t{\n\t\t\tresult.Next = outPt.Next;\n\t\t\tresult.Prev = outPt;\n\t\t\toutPt.Next.Prev = result;\n\t\t\toutPt.Next = result;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult.Prev = outPt.Prev;\n\t\t\tresult.Next = outPt;\n\t\t\toutPt.Prev.Next = result;\n\t\t\toutPt.Prev = result;\n\t\t}\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.prototype.GetOverlap = function (a1, a2, b1, b2, $val)\n\t{\n\t\tif (a1 < a2)\n\t\t{\n\t\t\tif (b1 < b2)\n\t\t\t{\n\t\t\t\t$val.Left = Math.max(a1, b1);\n\t\t\t\t$val.Right = Math.min(a2, b2);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$val.Left = Math.max(a1, b2);\n\t\t\t\t$val.Right = Math.min(a2, b1);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (b1 < b2)\n\t\t\t{\n\t\t\t\t$val.Left = Math.max(a2, b1);\n\t\t\t\t$val.Right = Math.min(a1, b2);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$val.Left = Math.max(a2, b2);\n\t\t\t\t$val.Right = Math.min(a1, b1);\n\t\t\t}\n\t\t}\n\t\treturn $val.Left < $val.Right;\n\t};\n\n\tClipperLib.Clipper.prototype.JoinHorz = function (op1, op1b, op2, op2b, Pt, DiscardLeft)\n\t{\n\t\tvar Dir1 = (op1.Pt.X > op1b.Pt.X ? ClipperLib.Direction.dRightToLeft : ClipperLib.Direction.dLeftToRight);\n\t\tvar Dir2 = (op2.Pt.X > op2b.Pt.X ? ClipperLib.Direction.dRightToLeft : ClipperLib.Direction.dLeftToRight);\n\t\tif (Dir1 === Dir2)\n\t\t\treturn false;\n\t\t//When DiscardLeft, we want Op1b to be on the Left of Op1, otherwise we\n\t\t//want Op1b to be on the Right. (And likewise with Op2 and Op2b.)\n\t\t//So, to facilitate this while inserting Op1b and Op2b ...\n\t\t//when DiscardLeft, make sure we're AT or RIGHT of Pt before adding Op1b,\n\t\t//otherwise make sure we're AT or LEFT of Pt. (Likewise with Op2b.)\n\t\tif (Dir1 === ClipperLib.Direction.dLeftToRight)\n\t\t{\n\t\t\twhile (op1.Next.Pt.X <= Pt.X &&\n\t\t\t\top1.Next.Pt.X >= op1.Pt.X && op1.Next.Pt.Y === Pt.Y)\n\t\t\t\top1 = op1.Next;\n\t\t\tif (DiscardLeft && (op1.Pt.X !== Pt.X))\n\t\t\t\top1 = op1.Next;\n\t\t\top1b = this.DupOutPt(op1, !DiscardLeft);\n\t\t\tif (ClipperLib.IntPoint.op_Inequality(op1b.Pt, Pt))\n\t\t\t{\n\t\t\t\top1 = op1b;\n\t\t\t\t//op1.Pt = Pt;\n\t\t\t\top1.Pt.X = Pt.X;\n\t\t\t\top1.Pt.Y = Pt.Y;\n\t\t\t\tif (ClipperLib.use_xyz) op1.Pt.Z = Pt.Z;\n\t\t\t\top1b = this.DupOutPt(op1, !DiscardLeft);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\twhile (op1.Next.Pt.X >= Pt.X &&\n\t\t\t\top1.Next.Pt.X <= op1.Pt.X && op1.Next.Pt.Y === Pt.Y)\n\t\t\t\top1 = op1.Next;\n\t\t\tif (!DiscardLeft && (op1.Pt.X !== Pt.X))\n\t\t\t\top1 = op1.Next;\n\t\t\top1b = this.DupOutPt(op1, DiscardLeft);\n\t\t\tif (ClipperLib.IntPoint.op_Inequality(op1b.Pt, Pt))\n\t\t\t{\n\t\t\t\top1 = op1b;\n\t\t\t\t//op1.Pt = Pt;\n\t\t\t\top1.Pt.X = Pt.X;\n\t\t\t\top1.Pt.Y = Pt.Y;\n\t\t\t\tif (ClipperLib.use_xyz) op1.Pt.Z = Pt.Z;\n\t\t\t\top1b = this.DupOutPt(op1, DiscardLeft);\n\t\t\t}\n\t\t}\n\t\tif (Dir2 === ClipperLib.Direction.dLeftToRight)\n\t\t{\n\t\t\twhile (op2.Next.Pt.X <= Pt.X &&\n\t\t\t\top2.Next.Pt.X >= op2.Pt.X && op2.Next.Pt.Y === Pt.Y)\n\t\t\t\top2 = op2.Next;\n\t\t\tif (DiscardLeft && (op2.Pt.X !== Pt.X))\n\t\t\t\top2 = op2.Next;\n\t\t\top2b = this.DupOutPt(op2, !DiscardLeft);\n\t\t\tif (ClipperLib.IntPoint.op_Inequality(op2b.Pt, Pt))\n\t\t\t{\n\t\t\t\top2 = op2b;\n\t\t\t\t//op2.Pt = Pt;\n\t\t\t\top2.Pt.X = Pt.X;\n\t\t\t\top2.Pt.Y = Pt.Y;\n\t\t\t\tif (ClipperLib.use_xyz) op2.Pt.Z = Pt.Z;\n\t\t\t\top2b = this.DupOutPt(op2, !DiscardLeft);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\twhile (op2.Next.Pt.X >= Pt.X &&\n\t\t\t\top2.Next.Pt.X <= op2.Pt.X && op2.Next.Pt.Y === Pt.Y)\n\t\t\t\top2 = op2.Next;\n\t\t\tif (!DiscardLeft && (op2.Pt.X !== Pt.X))\n\t\t\t\top2 = op2.Next;\n\t\t\top2b = this.DupOutPt(op2, DiscardLeft);\n\t\t\tif (ClipperLib.IntPoint.op_Inequality(op2b.Pt, Pt))\n\t\t\t{\n\t\t\t\top2 = op2b;\n\t\t\t\t//op2.Pt = Pt;\n\t\t\t\top2.Pt.X = Pt.X;\n\t\t\t\top2.Pt.Y = Pt.Y;\n\t\t\t\tif (ClipperLib.use_xyz) op2.Pt.Z = Pt.Z;\n\t\t\t\top2b = this.DupOutPt(op2, DiscardLeft);\n\t\t\t}\n\t\t}\n\t\tif ((Dir1 === ClipperLib.Direction.dLeftToRight) === DiscardLeft)\n\t\t{\n\t\t\top1.Prev = op2;\n\t\t\top2.Next = op1;\n\t\t\top1b.Next = op2b;\n\t\t\top2b.Prev = op1b;\n\t\t}\n\t\telse\n\t\t{\n\t\t\top1.Next = op2;\n\t\t\top2.Prev = op1;\n\t\t\top1b.Prev = op2b;\n\t\t\top2b.Next = op1b;\n\t\t}\n\t\treturn true;\n\t};\n\n\tClipperLib.Clipper.prototype.JoinPoints = function (j, outRec1, outRec2)\n\t{\n\t\tvar op1 = j.OutPt1,\n\t\t\top1b = new ClipperLib.OutPt();\n\t\tvar op2 = j.OutPt2,\n\t\t\top2b = new ClipperLib.OutPt();\n\t\t//There are 3 kinds of joins for output polygons ...\n\t\t//1. Horizontal joins where Join.OutPt1 & Join.OutPt2 are vertices anywhere\n\t\t//along (horizontal) collinear edges (& Join.OffPt is on the same horizontal).\n\t\t//2. Non-horizontal joins where Join.OutPt1 & Join.OutPt2 are at the same\n\t\t//location at the Bottom of the overlapping segment (& Join.OffPt is above).\n\t\t//3. StrictlySimple joins where edges touch but are not collinear and where\n\t\t//Join.OutPt1, Join.OutPt2 & Join.OffPt all share the same point.\n\t\tvar isHorizontal = (j.OutPt1.Pt.Y === j.OffPt.Y);\n\t\tif (isHorizontal && (ClipperLib.IntPoint.op_Equality(j.OffPt, j.OutPt1.Pt)) && (ClipperLib.IntPoint.op_Equality(j.OffPt, j.OutPt2.Pt)))\n\t\t{\n\t\t\t//Strictly Simple join ...\n\t\t\tif (outRec1 !== outRec2) return false;\n\n\t\t\top1b = j.OutPt1.Next;\n\t\t\twhile (op1b !== op1 && (ClipperLib.IntPoint.op_Equality(op1b.Pt, j.OffPt)))\n\t\t\t\top1b = op1b.Next;\n\t\t\tvar reverse1 = (op1b.Pt.Y > j.OffPt.Y);\n\t\t\top2b = j.OutPt2.Next;\n\t\t\twhile (op2b !== op2 && (ClipperLib.IntPoint.op_Equality(op2b.Pt, j.OffPt)))\n\t\t\t\top2b = op2b.Next;\n\t\t\tvar reverse2 = (op2b.Pt.Y > j.OffPt.Y);\n\t\t\tif (reverse1 === reverse2)\n\t\t\t\treturn false;\n\t\t\tif (reverse1)\n\t\t\t{\n\t\t\t\top1b = this.DupOutPt(op1, false);\n\t\t\t\top2b = this.DupOutPt(op2, true);\n\t\t\t\top1.Prev = op2;\n\t\t\t\top2.Next = op1;\n\t\t\t\top1b.Next = op2b;\n\t\t\t\top2b.Prev = op1b;\n\t\t\t\tj.OutPt1 = op1;\n\t\t\t\tj.OutPt2 = op1b;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\top1b = this.DupOutPt(op1, true);\n\t\t\t\top2b = this.DupOutPt(op2, false);\n\t\t\t\top1.Next = op2;\n\t\t\t\top2.Prev = op1;\n\t\t\t\top1b.Prev = op2b;\n\t\t\t\top2b.Next = op1b;\n\t\t\t\tj.OutPt1 = op1;\n\t\t\t\tj.OutPt2 = op1b;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (isHorizontal)\n\t\t{\n\t\t\t//treat horizontal joins differently to non-horizontal joins since with\n\t\t\t//them we're not yet sure where the overlapping is. OutPt1.Pt & OutPt2.Pt\n\t\t\t//may be anywhere along the horizontal edge.\n\t\t\top1b = op1;\n\t\t\twhile (op1.Prev.Pt.Y === op1.Pt.Y && op1.Prev !== op1b && op1.Prev !== op2)\n\t\t\t\top1 = op1.Prev;\n\t\t\twhile (op1b.Next.Pt.Y === op1b.Pt.Y && op1b.Next !== op1 && op1b.Next !== op2)\n\t\t\t\top1b = op1b.Next;\n\t\t\tif (op1b.Next === op1 || op1b.Next === op2)\n\t\t\t\treturn false;\n\t\t\t//a flat 'polygon'\n\t\t\top2b = op2;\n\t\t\twhile (op2.Prev.Pt.Y === op2.Pt.Y && op2.Prev !== op2b && op2.Prev !== op1b)\n\t\t\t\top2 = op2.Prev;\n\t\t\twhile (op2b.Next.Pt.Y === op2b.Pt.Y && op2b.Next !== op2 && op2b.Next !== op1)\n\t\t\t\top2b = op2b.Next;\n\t\t\tif (op2b.Next === op2 || op2b.Next === op1)\n\t\t\t\treturn false;\n\t\t\t//a flat 'polygon'\n\t\t\t//Op1 -. Op1b & Op2 -. Op2b are the extremites of the horizontal edges\n\n\t\t\tvar $val = {\n\t\t\t\tLeft: null,\n\t\t\t\tRight: null\n\t\t\t};\n\n\t\t\tif (!this.GetOverlap(op1.Pt.X, op1b.Pt.X, op2.Pt.X, op2b.Pt.X, $val))\n\t\t\t\treturn false;\n\t\t\tvar Left = $val.Left;\n\t\t\tvar Right = $val.Right;\n\n\t\t\t//DiscardLeftSide: when overlapping edges are joined, a spike will created\n\t\t\t//which needs to be cleaned up. However, we don't want Op1 or Op2 caught up\n\t\t\t//on the discard Side as either may still be needed for other joins ...\n\t\t\tvar Pt = new ClipperLib.IntPoint0();\n\t\t\tvar DiscardLeftSide;\n\t\t\tif (op1.Pt.X >= Left && op1.Pt.X <= Right)\n\t\t\t{\n\t\t\t\t//Pt = op1.Pt;\n\t\t\t\tPt.X = op1.Pt.X;\n\t\t\t\tPt.Y = op1.Pt.Y;\n\t\t\t\tif (ClipperLib.use_xyz) Pt.Z = op1.Pt.Z;\n\t\t\t\tDiscardLeftSide = (op1.Pt.X > op1b.Pt.X);\n\t\t\t}\n\t\t\telse if (op2.Pt.X >= Left && op2.Pt.X <= Right)\n\t\t\t{\n\t\t\t\t//Pt = op2.Pt;\n\t\t\t\tPt.X = op2.Pt.X;\n\t\t\t\tPt.Y = op2.Pt.Y;\n\t\t\t\tif (ClipperLib.use_xyz) Pt.Z = op2.Pt.Z;\n\t\t\t\tDiscardLeftSide = (op2.Pt.X > op2b.Pt.X);\n\t\t\t}\n\t\t\telse if (op1b.Pt.X >= Left && op1b.Pt.X <= Right)\n\t\t\t{\n\t\t\t\t//Pt = op1b.Pt;\n\t\t\t\tPt.X = op1b.Pt.X;\n\t\t\t\tPt.Y = op1b.Pt.Y;\n\t\t\t\tif (ClipperLib.use_xyz) Pt.Z = op1b.Pt.Z;\n\t\t\t\tDiscardLeftSide = op1b.Pt.X > op1.Pt.X;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//Pt = op2b.Pt;\n\t\t\t\tPt.X = op2b.Pt.X;\n\t\t\t\tPt.Y = op2b.Pt.Y;\n\t\t\t\tif (ClipperLib.use_xyz) Pt.Z = op2b.Pt.Z;\n\t\t\t\tDiscardLeftSide = (op2b.Pt.X > op2.Pt.X);\n\t\t\t}\n\t\t\tj.OutPt1 = op1;\n\t\t\tj.OutPt2 = op2;\n\t\t\treturn this.JoinHorz(op1, op1b, op2, op2b, Pt, DiscardLeftSide);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//nb: For non-horizontal joins ...\n\t\t\t//    1. Jr.OutPt1.Pt.Y == Jr.OutPt2.Pt.Y\n\t\t\t//    2. Jr.OutPt1.Pt > Jr.OffPt.Y\n\t\t\t//make sure the polygons are correctly oriented ...\n\t\t\top1b = op1.Next;\n\t\t\twhile ((ClipperLib.IntPoint.op_Equality(op1b.Pt, op1.Pt)) && (op1b !== op1))\n\t\t\t\top1b = op1b.Next;\n\t\t\tvar Reverse1 = ((op1b.Pt.Y > op1.Pt.Y) || !ClipperLib.ClipperBase.SlopesEqual4(op1.Pt, op1b.Pt, j.OffPt, this.m_UseFullRange));\n\t\t\tif (Reverse1)\n\t\t\t{\n\t\t\t\top1b = op1.Prev;\n\t\t\t\twhile ((ClipperLib.IntPoint.op_Equality(op1b.Pt, op1.Pt)) && (op1b !== op1))\n\t\t\t\t\top1b = op1b.Prev;\n\n\t\t\t\tif ((op1b.Pt.Y > op1.Pt.Y) || !ClipperLib.ClipperBase.SlopesEqual4(op1.Pt, op1b.Pt, j.OffPt, this.m_UseFullRange))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\top2b = op2.Next;\n\t\t\twhile ((ClipperLib.IntPoint.op_Equality(op2b.Pt, op2.Pt)) && (op2b !== op2))\n\t\t\t\top2b = op2b.Next;\n\n\t\t\tvar Reverse2 = ((op2b.Pt.Y > op2.Pt.Y) || !ClipperLib.ClipperBase.SlopesEqual4(op2.Pt, op2b.Pt, j.OffPt, this.m_UseFullRange));\n\t\t\tif (Reverse2)\n\t\t\t{\n\t\t\t\top2b = op2.Prev;\n\t\t\t\twhile ((ClipperLib.IntPoint.op_Equality(op2b.Pt, op2.Pt)) && (op2b !== op2))\n\t\t\t\t\top2b = op2b.Prev;\n\n\t\t\t\tif ((op2b.Pt.Y > op2.Pt.Y) || !ClipperLib.ClipperBase.SlopesEqual4(op2.Pt, op2b.Pt, j.OffPt, this.m_UseFullRange))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ((op1b === op1) || (op2b === op2) || (op1b === op2b) ||\n\t\t\t\t((outRec1 === outRec2) && (Reverse1 === Reverse2)))\n\t\t\t\treturn false;\n\t\t\tif (Reverse1)\n\t\t\t{\n\t\t\t\top1b = this.DupOutPt(op1, false);\n\t\t\t\top2b = this.DupOutPt(op2, true);\n\t\t\t\top1.Prev = op2;\n\t\t\t\top2.Next = op1;\n\t\t\t\top1b.Next = op2b;\n\t\t\t\top2b.Prev = op1b;\n\t\t\t\tj.OutPt1 = op1;\n\t\t\t\tj.OutPt2 = op1b;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\top1b = this.DupOutPt(op1, true);\n\t\t\t\top2b = this.DupOutPt(op2, false);\n\t\t\t\top1.Next = op2;\n\t\t\t\top2.Prev = op1;\n\t\t\t\top1b.Prev = op2b;\n\t\t\t\top2b.Next = op1b;\n\t\t\t\tj.OutPt1 = op1;\n\t\t\t\tj.OutPt2 = op1b;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t};\n\n\tClipperLib.Clipper.GetBounds = function (paths)\n\t{\n\t\tvar i = 0,\n\t\t\tcnt = paths.length;\n\t\twhile (i < cnt && paths[i].length === 0) i++;\n\t\tif (i === cnt) return new ClipperLib.IntRect(0, 0, 0, 0);\n\t\tvar result = new ClipperLib.IntRect();\n\t\tresult.left = paths[i][0].X;\n\t\tresult.right = result.left;\n\t\tresult.top = paths[i][0].Y;\n\t\tresult.bottom = result.top;\n\t\tfor (; i < cnt; i++)\n\t\t\tfor (var j = 0, jlen = paths[i].length; j < jlen; j++)\n\t\t\t{\n\t\t\t\tif (paths[i][j].X < result.left) result.left = paths[i][j].X;\n\t\t\t\telse if (paths[i][j].X > result.right) result.right = paths[i][j].X;\n\t\t\t\tif (paths[i][j].Y < result.top) result.top = paths[i][j].Y;\n\t\t\t\telse if (paths[i][j].Y > result.bottom) result.bottom = paths[i][j].Y;\n\t\t\t}\n\t\treturn result;\n\t}\n\tClipperLib.Clipper.prototype.GetBounds2 = function (ops)\n\t{\n\t\tvar opStart = ops;\n\t\tvar result = new ClipperLib.IntRect();\n\t\tresult.left = ops.Pt.X;\n\t\tresult.right = ops.Pt.X;\n\t\tresult.top = ops.Pt.Y;\n\t\tresult.bottom = ops.Pt.Y;\n\t\tops = ops.Next;\n\t\twhile (ops !== opStart)\n\t\t{\n\t\t\tif (ops.Pt.X < result.left)\n\t\t\t\tresult.left = ops.Pt.X;\n\t\t\tif (ops.Pt.X > result.right)\n\t\t\t\tresult.right = ops.Pt.X;\n\t\t\tif (ops.Pt.Y < result.top)\n\t\t\t\tresult.top = ops.Pt.Y;\n\t\t\tif (ops.Pt.Y > result.bottom)\n\t\t\t\tresult.bottom = ops.Pt.Y;\n\t\t\tops = ops.Next;\n\t\t}\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.PointInPolygon = function (pt, path)\n\t{\n\t\t//returns 0 if false, +1 if true, -1 if pt ON polygon boundary\n\t\t//See \"The Point in Polygon Problem for Arbitrary Polygons\" by Hormann & Agathos\n\t\t//http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.88.5498&rep=rep1&type=pdf\n\t\tvar result = 0,\n\t\t\tcnt = path.length;\n\t\tif (cnt < 3)\n\t\t\treturn 0;\n\t\tvar ip = path[0];\n\t\tfor (var i = 1; i <= cnt; ++i)\n\t\t{\n\t\t\tvar ipNext = (i === cnt ? path[0] : path[i]);\n\t\t\tif (ipNext.Y === pt.Y)\n\t\t\t{\n\t\t\t\tif ((ipNext.X === pt.X) || (ip.Y === pt.Y && ((ipNext.X > pt.X) === (ip.X < pt.X))))\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ((ip.Y < pt.Y) !== (ipNext.Y < pt.Y))\n\t\t\t{\n\t\t\t\tif (ip.X >= pt.X)\n\t\t\t\t{\n\t\t\t\t\tif (ipNext.X > pt.X)\n\t\t\t\t\t\tresult = 1 - result;\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar d = (ip.X - pt.X) * (ipNext.Y - pt.Y) - (ipNext.X - pt.X) * (ip.Y - pt.Y);\n\t\t\t\t\t\tif (d === 0)\n\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\telse if ((d > 0) === (ipNext.Y > ip.Y))\n\t\t\t\t\t\t\tresult = 1 - result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (ipNext.X > pt.X)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar d = (ip.X - pt.X) * (ipNext.Y - pt.Y) - (ipNext.X - pt.X) * (ip.Y - pt.Y);\n\t\t\t\t\t\tif (d === 0)\n\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\telse if ((d > 0) === (ipNext.Y > ip.Y))\n\t\t\t\t\t\t\tresult = 1 - result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tip = ipNext;\n\t\t}\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.prototype.PointInPolygon = function (pt, op)\n\t{\n\t\t//returns 0 if false, +1 if true, -1 if pt ON polygon boundary\n\t\tvar result = 0;\n\t\tvar startOp = op;\n\t\tvar ptx = pt.X,\n\t\t\tpty = pt.Y;\n\t\tvar poly0x = op.Pt.X,\n\t\t\tpoly0y = op.Pt.Y;\n\t\tdo {\n\t\t\top = op.Next;\n\t\t\tvar poly1x = op.Pt.X,\n\t\t\t\tpoly1y = op.Pt.Y;\n\t\t\tif (poly1y === pty)\n\t\t\t{\n\t\t\t\tif ((poly1x === ptx) || (poly0y === pty && ((poly1x > ptx) === (poly0x < ptx))))\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ((poly0y < pty) !== (poly1y < pty))\n\t\t\t{\n\t\t\t\tif (poly0x >= ptx)\n\t\t\t\t{\n\t\t\t\t\tif (poly1x > ptx)\n\t\t\t\t\t\tresult = 1 - result;\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar d = (poly0x - ptx) * (poly1y - pty) - (poly1x - ptx) * (poly0y - pty);\n\t\t\t\t\t\tif (d === 0)\n\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\tif ((d > 0) === (poly1y > poly0y))\n\t\t\t\t\t\t\tresult = 1 - result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (poly1x > ptx)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar d = (poly0x - ptx) * (poly1y - pty) - (poly1x - ptx) * (poly0y - pty);\n\t\t\t\t\t\tif (d === 0)\n\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\tif ((d > 0) === (poly1y > poly0y))\n\t\t\t\t\t\t\tresult = 1 - result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tpoly0x = poly1x;\n\t\t\tpoly0y = poly1y;\n\t\t} while (startOp !== op);\n\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.prototype.Poly2ContainsPoly1 = function (outPt1, outPt2)\n\t{\n\t\tvar op = outPt1;\n\t\tdo {\n\t\t\t//nb: PointInPolygon returns 0 if false, +1 if true, -1 if pt on polygon\n\t\t\tvar res = this.PointInPolygon(op.Pt, outPt2);\n\t\t\tif (res >= 0)\n\t\t\t\treturn res > 0;\n\t\t\top = op.Next;\n\t\t}\n\t\twhile (op !== outPt1)\n\t\treturn true;\n\t};\n\n\tClipperLib.Clipper.prototype.FixupFirstLefts1 = function (OldOutRec, NewOutRec)\n\t{\n\t\tvar outRec, firstLeft;\n\t\tfor (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n\t\t{\n\t\t\toutRec = this.m_PolyOuts[i];\n\t\t\tfirstLeft = ClipperLib.Clipper.ParseFirstLeft(outRec.FirstLeft);\n\t\t\tif (outRec.Pts !== null && firstLeft === OldOutRec)\n\t\t\t{\n\t\t\t\tif (this.Poly2ContainsPoly1(outRec.Pts, NewOutRec.Pts))\n\t\t\t\t\toutRec.FirstLeft = NewOutRec;\n\t\t\t}\n\t\t}\n\t}\n\n\tClipperLib.Clipper.prototype.FixupFirstLefts2 = function (innerOutRec, outerOutRec)\n\t{\n\t\t//A polygon has split into two such that one is now the inner of the other.\n\t\t//It's possible that these polygons now wrap around other polygons, so check\n\t\t//every polygon that's also contained by OuterOutRec's FirstLeft container\n\t\t//(including nil) to see if they've become inner to the new inner polygon ...\n\t\tvar orfl = outerOutRec.FirstLeft;\n\t\tvar outRec, firstLeft;\n\t\tfor (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n\t\t{\n\t\t\toutRec = this.m_PolyOuts[i];\n\t\t\tif (outRec.Pts === null || outRec === outerOutRec || outRec === innerOutRec)\n\t\t\t\tcontinue;\n\t\t\tfirstLeft = ClipperLib.Clipper.ParseFirstLeft(outRec.FirstLeft);\n\t\t\tif (firstLeft !== orfl && firstLeft !== innerOutRec && firstLeft !== outerOutRec)\n\t\t\t\tcontinue;\n\t\t\tif (this.Poly2ContainsPoly1(outRec.Pts, innerOutRec.Pts))\n\t\t\t\toutRec.FirstLeft = innerOutRec;\n\t\t\telse if (this.Poly2ContainsPoly1(outRec.Pts, outerOutRec.Pts))\n\t\t\t\toutRec.FirstLeft = outerOutRec;\n\t\t\telse if (outRec.FirstLeft === innerOutRec || outRec.FirstLeft === outerOutRec)\n\t\t\t\toutRec.FirstLeft = orfl;\n\t\t}\n\t}\n\n\tClipperLib.Clipper.prototype.FixupFirstLefts3 = function (OldOutRec, NewOutRec)\n\t{\n\t\t//same as FixupFirstLefts1 but doesn't call Poly2ContainsPoly1()\n\t\tvar outRec;\n\t\tvar firstLeft;\n\t\tfor (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n\t\t{\n\t\t\toutRec = this.m_PolyOuts[i];\n\t\t\tfirstLeft = ClipperLib.Clipper.ParseFirstLeft(outRec.FirstLeft);\n\t\t\tif (outRec.Pts !== null && firstLeft === OldOutRec)\n\t\t\t\toutRec.FirstLeft = NewOutRec;\n\t\t}\n\t}\n\n\tClipperLib.Clipper.ParseFirstLeft = function (FirstLeft)\n\t{\n\t\twhile (FirstLeft !== null && FirstLeft.Pts === null)\n\t\t\tFirstLeft = FirstLeft.FirstLeft;\n\t\treturn FirstLeft;\n\t};\n\n\tClipperLib.Clipper.prototype.JoinCommonEdges = function ()\n\t{\n\t\tfor (var i = 0, ilen = this.m_Joins.length; i < ilen; i++)\n\t\t{\n\t\t\tvar join = this.m_Joins[i];\n\t\t\tvar outRec1 = this.GetOutRec(join.OutPt1.Idx);\n\t\t\tvar outRec2 = this.GetOutRec(join.OutPt2.Idx);\n\t\t\tif (outRec1.Pts === null || outRec2.Pts === null)\n\t\t\t\tcontinue;\n\n\t\t\tif (outRec1.IsOpen || outRec2.IsOpen)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t//get the polygon fragment with the correct hole state (FirstLeft)\n\t\t\t//before calling JoinPoints() ...\n\t\t\tvar holeStateRec;\n\t\t\tif (outRec1 === outRec2)\n\t\t\t\tholeStateRec = outRec1;\n\t\t\telse if (this.OutRec1RightOfOutRec2(outRec1, outRec2))\n\t\t\t\tholeStateRec = outRec2;\n\t\t\telse if (this.OutRec1RightOfOutRec2(outRec2, outRec1))\n\t\t\t\tholeStateRec = outRec1;\n\t\t\telse\n\t\t\t\tholeStateRec = this.GetLowermostRec(outRec1, outRec2);\n\n\t\t\tif (!this.JoinPoints(join, outRec1, outRec2)) continue;\n\n\t\t\tif (outRec1 === outRec2)\n\t\t\t{\n\t\t\t\t//instead of joining two polygons, we've just created a new one by\n\t\t\t\t//splitting one polygon into two.\n\t\t\t\toutRec1.Pts = join.OutPt1;\n\t\t\t\toutRec1.BottomPt = null;\n\t\t\t\toutRec2 = this.CreateOutRec();\n\t\t\t\toutRec2.Pts = join.OutPt2;\n\t\t\t\t//update all OutRec2.Pts Idx's ...\n\t\t\t\tthis.UpdateOutPtIdxs(outRec2);\n\n\t\t\t\tif (this.Poly2ContainsPoly1(outRec2.Pts, outRec1.Pts))\n\t\t\t\t{\n\t\t\t\t\t//outRec1 contains outRec2 ...\n\t\t\t\t\toutRec2.IsHole = !outRec1.IsHole;\n\t\t\t\t\toutRec2.FirstLeft = outRec1;\n\t\t\t\t\tif (this.m_UsingPolyTree)\n\t\t\t\t\t\tthis.FixupFirstLefts2(outRec2, outRec1);\n\t\t\t\t\tif ((outRec2.IsHole ^ this.ReverseSolution) == (this.Area$1(outRec2) > 0))\n\t\t\t\t\t\tthis.ReversePolyPtLinks(outRec2.Pts);\n\t\t\t\t}\n\t\t\t\telse if (this.Poly2ContainsPoly1(outRec1.Pts, outRec2.Pts))\n\t\t\t\t{\n\t\t\t\t\t//outRec2 contains outRec1 ...\n\t\t\t\t\toutRec2.IsHole = outRec1.IsHole;\n\t\t\t\t\toutRec1.IsHole = !outRec2.IsHole;\n\t\t\t\t\toutRec2.FirstLeft = outRec1.FirstLeft;\n\t\t\t\t\toutRec1.FirstLeft = outRec2;\n\t\t\t\t\tif (this.m_UsingPolyTree)\n\t\t\t\t\t\tthis.FixupFirstLefts2(outRec1, outRec2);\n\n\t\t\t\t\tif ((outRec1.IsHole ^ this.ReverseSolution) == (this.Area$1(outRec1) > 0))\n\t\t\t\t\t\tthis.ReversePolyPtLinks(outRec1.Pts);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t//the 2 polygons are completely separate ...\n\t\t\t\t\toutRec2.IsHole = outRec1.IsHole;\n\t\t\t\t\toutRec2.FirstLeft = outRec1.FirstLeft;\n\t\t\t\t\t//fixup FirstLeft pointers that may need reassigning to OutRec2\n\t\t\t\t\tif (this.m_UsingPolyTree)\n\t\t\t\t\t\tthis.FixupFirstLefts1(outRec1, outRec2);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//joined 2 polygons together ...\n\t\t\t\toutRec2.Pts = null;\n\t\t\t\toutRec2.BottomPt = null;\n\t\t\t\toutRec2.Idx = outRec1.Idx;\n\t\t\t\toutRec1.IsHole = holeStateRec.IsHole;\n\t\t\t\tif (holeStateRec === outRec2)\n\t\t\t\t\toutRec1.FirstLeft = outRec2.FirstLeft;\n\t\t\t\toutRec2.FirstLeft = outRec1;\n\t\t\t\t//fixup FirstLeft pointers that may need reassigning to OutRec1\n\t\t\t\tif (this.m_UsingPolyTree)\n\t\t\t\t\tthis.FixupFirstLefts3(outRec2, outRec1);\n\t\t\t}\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.UpdateOutPtIdxs = function (outrec)\n\t{\n\t\tvar op = outrec.Pts;\n\t\tdo {\n\t\t\top.Idx = outrec.Idx;\n\t\t\top = op.Prev;\n\t\t}\n\t\twhile (op !== outrec.Pts)\n\t};\n\n\tClipperLib.Clipper.prototype.DoSimplePolygons = function ()\n\t{\n\t\tvar i = 0;\n\t\twhile (i < this.m_PolyOuts.length)\n\t\t{\n\t\t\tvar outrec = this.m_PolyOuts[i++];\n\t\t\tvar op = outrec.Pts;\n\t\t\tif (op === null || outrec.IsOpen)\n\t\t\t\tcontinue;\n\t\t\tdo //for each Pt in Polygon until duplicate found do ...\n\t\t\t{\n\t\t\t\tvar op2 = op.Next;\n\t\t\t\twhile (op2 !== outrec.Pts)\n\t\t\t\t{\n\t\t\t\t\tif ((ClipperLib.IntPoint.op_Equality(op.Pt, op2.Pt)) && op2.Next !== op && op2.Prev !== op)\n\t\t\t\t\t{\n\t\t\t\t\t\t//split the polygon into two ...\n\t\t\t\t\t\tvar op3 = op.Prev;\n\t\t\t\t\t\tvar op4 = op2.Prev;\n\t\t\t\t\t\top.Prev = op4;\n\t\t\t\t\t\top4.Next = op;\n\t\t\t\t\t\top2.Prev = op3;\n\t\t\t\t\t\top3.Next = op2;\n\t\t\t\t\t\toutrec.Pts = op;\n\t\t\t\t\t\tvar outrec2 = this.CreateOutRec();\n\t\t\t\t\t\toutrec2.Pts = op2;\n\t\t\t\t\t\tthis.UpdateOutPtIdxs(outrec2);\n\t\t\t\t\t\tif (this.Poly2ContainsPoly1(outrec2.Pts, outrec.Pts))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t//OutRec2 is contained by OutRec1 ...\n\t\t\t\t\t\t\toutrec2.IsHole = !outrec.IsHole;\n\t\t\t\t\t\t\toutrec2.FirstLeft = outrec;\n\t\t\t\t\t\t\tif (this.m_UsingPolyTree) this.FixupFirstLefts2(outrec2, outrec);\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (this.Poly2ContainsPoly1(outrec.Pts, outrec2.Pts))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t//OutRec1 is contained by OutRec2 ...\n\t\t\t\t\t\t\toutrec2.IsHole = outrec.IsHole;\n\t\t\t\t\t\t\toutrec.IsHole = !outrec2.IsHole;\n\t\t\t\t\t\t\toutrec2.FirstLeft = outrec.FirstLeft;\n\t\t\t\t\t\t\toutrec.FirstLeft = outrec2;\n\t\t\t\t\t\t\tif (this.m_UsingPolyTree) this.FixupFirstLefts2(outrec, outrec2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t//the 2 polygons are separate ...\n\t\t\t\t\t\t\toutrec2.IsHole = outrec.IsHole;\n\t\t\t\t\t\t\toutrec2.FirstLeft = outrec.FirstLeft;\n\t\t\t\t\t\t\tif (this.m_UsingPolyTree) this.FixupFirstLefts1(outrec, outrec2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\top2 = op;\n\t\t\t\t\t\t//ie get ready for the next iteration\n\t\t\t\t\t}\n\t\t\t\t\top2 = op2.Next;\n\t\t\t\t}\n\t\t\t\top = op.Next;\n\t\t\t}\n\t\t\twhile (op !== outrec.Pts)\n\t\t}\n\t};\n\n\tClipperLib.Clipper.Area = function (poly)\n\t{\n\t\tif (!Array.isArray(poly))\n\t\t\treturn 0;\n\t\tvar cnt = poly.length;\n\t\tif (cnt < 3)\n\t\t\treturn 0;\n\t\tvar a = 0;\n\t\tfor (var i = 0, j = cnt - 1; i < cnt; ++i)\n\t\t{\n\t\t\ta += (poly[j].X + poly[i].X) * (poly[j].Y - poly[i].Y);\n\t\t\tj = i;\n\t\t}\n\t\treturn -a * 0.5;\n\t};\n\n\tClipperLib.Clipper.prototype.Area = function (op)\n\t{\n\t\tvar opFirst = op;\n\t\tif (op === null) return 0;\n\t\tvar a = 0;\n\t\tdo {\n\t\t\ta = a + (op.Prev.Pt.X + op.Pt.X) * (op.Prev.Pt.Y - op.Pt.Y);\n\t\t\top = op.Next;\n\t\t} while (op !== opFirst); // && typeof op !== 'undefined');\n\t\treturn a * 0.5;\n\t}\n\n\tClipperLib.Clipper.prototype.Area$1 = function (outRec)\n\t{\n\t\treturn this.Area(outRec.Pts);\n\t};\n\n\tClipperLib.Clipper.SimplifyPolygon = function (poly, fillType)\n\t{\n\t\tvar result = new Array();\n\t\tvar c = new ClipperLib.Clipper(0);\n\t\tc.StrictlySimple = true;\n\t\tc.AddPath(poly, ClipperLib.PolyType.ptSubject, true);\n\t\tc.Execute(ClipperLib.ClipType.ctUnion, result, fillType, fillType);\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.SimplifyPolygons = function (polys, fillType)\n\t{\n\t\tif (typeof (fillType) === \"undefined\") fillType = ClipperLib.PolyFillType.pftEvenOdd;\n\t\tvar result = new Array();\n\t\tvar c = new ClipperLib.Clipper(0);\n\t\tc.StrictlySimple = true;\n\t\tc.AddPaths(polys, ClipperLib.PolyType.ptSubject, true);\n\t\tc.Execute(ClipperLib.ClipType.ctUnion, result, fillType, fillType);\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.DistanceSqrd = function (pt1, pt2)\n\t{\n\t\tvar dx = (pt1.X - pt2.X);\n\t\tvar dy = (pt1.Y - pt2.Y);\n\t\treturn (dx * dx + dy * dy);\n\t};\n\n\tClipperLib.Clipper.DistanceFromLineSqrd = function (pt, ln1, ln2)\n\t{\n\t\t//The equation of a line in general form (Ax + By + C = 0)\n\t\t//given 2 points (x¹,y¹) & (x²,y²) is ...\n\t\t//(y¹ - y²)x + (x² - x¹)y + (y² - y¹)x¹ - (x² - x¹)y¹ = 0\n\t\t//A = (y¹ - y²); B = (x² - x¹); C = (y² - y¹)x¹ - (x² - x¹)y¹\n\t\t//perpendicular distance of point (x³,y³) = (Ax³ + By³ + C)/Sqrt(A² + B²)\n\t\t//see http://en.wikipedia.org/wiki/Perpendicular_distance\n\t\tvar A = ln1.Y - ln2.Y;\n\t\tvar B = ln2.X - ln1.X;\n\t\tvar C = A * ln1.X + B * ln1.Y;\n\t\tC = A * pt.X + B * pt.Y - C;\n\t\treturn (C * C) / (A * A + B * B);\n\t};\n\n\tClipperLib.Clipper.SlopesNearCollinear = function (pt1, pt2, pt3, distSqrd)\n\t{\n\t\t//this function is more accurate when the point that's GEOMETRICALLY\n\t\t//between the other 2 points is the one that's tested for distance.\n\t\t//nb: with 'spikes', either pt1 or pt3 is geometrically between the other pts\n\t\tif (Math.abs(pt1.X - pt2.X) > Math.abs(pt1.Y - pt2.Y))\n\t\t{\n\t\t\tif ((pt1.X > pt2.X) === (pt1.X < pt3.X))\n\t\t\t\treturn ClipperLib.Clipper.DistanceFromLineSqrd(pt1, pt2, pt3) < distSqrd;\n\t\t\telse if ((pt2.X > pt1.X) === (pt2.X < pt3.X))\n\t\t\t\treturn ClipperLib.Clipper.DistanceFromLineSqrd(pt2, pt1, pt3) < distSqrd;\n\t\t\telse\n\t\t\t\treturn ClipperLib.Clipper.DistanceFromLineSqrd(pt3, pt1, pt2) < distSqrd;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ((pt1.Y > pt2.Y) === (pt1.Y < pt3.Y))\n\t\t\t\treturn ClipperLib.Clipper.DistanceFromLineSqrd(pt1, pt2, pt3) < distSqrd;\n\t\t\telse if ((pt2.Y > pt1.Y) === (pt2.Y < pt3.Y))\n\t\t\t\treturn ClipperLib.Clipper.DistanceFromLineSqrd(pt2, pt1, pt3) < distSqrd;\n\t\t\telse\n\t\t\t\treturn ClipperLib.Clipper.DistanceFromLineSqrd(pt3, pt1, pt2) < distSqrd;\n\t\t}\n\t}\n\n\tClipperLib.Clipper.PointsAreClose = function (pt1, pt2, distSqrd)\n\t{\n\t\tvar dx = pt1.X - pt2.X;\n\t\tvar dy = pt1.Y - pt2.Y;\n\t\treturn ((dx * dx) + (dy * dy) <= distSqrd);\n\t};\n\n\tClipperLib.Clipper.ExcludeOp = function (op)\n\t{\n\t\tvar result = op.Prev;\n\t\tresult.Next = op.Next;\n\t\top.Next.Prev = result;\n\t\tresult.Idx = 0;\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.CleanPolygon = function (path, distance)\n\t{\n\t\tif (typeof (distance) === \"undefined\") distance = 1.415;\n\t\t//distance = proximity in units/pixels below which vertices will be stripped.\n\t\t//Default ~= sqrt(2) so when adjacent vertices or semi-adjacent vertices have\n\t\t//both x & y coords within 1 unit, then the second vertex will be stripped.\n\t\tvar cnt = path.length;\n\t\tif (cnt === 0)\n\t\t\treturn new Array();\n\t\tvar outPts = new Array(cnt);\n\t\tfor (var i = 0; i < cnt; ++i)\n\t\t\toutPts[i] = new ClipperLib.OutPt();\n\t\tfor (var i = 0; i < cnt; ++i)\n\t\t{\n\t\t\toutPts[i].Pt = path[i];\n\t\t\toutPts[i].Next = outPts[(i + 1) % cnt];\n\t\t\toutPts[i].Next.Prev = outPts[i];\n\t\t\toutPts[i].Idx = 0;\n\t\t}\n\t\tvar distSqrd = distance * distance;\n\t\tvar op = outPts[0];\n\t\twhile (op.Idx === 0 && op.Next !== op.Prev)\n\t\t{\n\t\t\tif (ClipperLib.Clipper.PointsAreClose(op.Pt, op.Prev.Pt, distSqrd))\n\t\t\t{\n\t\t\t\top = ClipperLib.Clipper.ExcludeOp(op);\n\t\t\t\tcnt--;\n\t\t\t}\n\t\t\telse if (ClipperLib.Clipper.PointsAreClose(op.Prev.Pt, op.Next.Pt, distSqrd))\n\t\t\t{\n\t\t\t\tClipperLib.Clipper.ExcludeOp(op.Next);\n\t\t\t\top = ClipperLib.Clipper.ExcludeOp(op);\n\t\t\t\tcnt -= 2;\n\t\t\t}\n\t\t\telse if (ClipperLib.Clipper.SlopesNearCollinear(op.Prev.Pt, op.Pt, op.Next.Pt, distSqrd))\n\t\t\t{\n\t\t\t\top = ClipperLib.Clipper.ExcludeOp(op);\n\t\t\t\tcnt--;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\top.Idx = 1;\n\t\t\t\top = op.Next;\n\t\t\t}\n\t\t}\n\t\tif (cnt < 3)\n\t\t\tcnt = 0;\n\t\tvar result = new Array(cnt);\n\t\tfor (var i = 0; i < cnt; ++i)\n\t\t{\n\t\t\tresult[i] = new ClipperLib.IntPoint1(op.Pt);\n\t\t\top = op.Next;\n\t\t}\n\t\toutPts = null;\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.CleanPolygons = function (polys, distance)\n\t{\n\t\tvar result = new Array(polys.length);\n\t\tfor (var i = 0, ilen = polys.length; i < ilen; i++)\n\t\t\tresult[i] = ClipperLib.Clipper.CleanPolygon(polys[i], distance);\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.Minkowski = function (pattern, path, IsSum, IsClosed)\n\t{\n\t\tvar delta = (IsClosed ? 1 : 0);\n\t\tvar polyCnt = pattern.length;\n\t\tvar pathCnt = path.length;\n\t\tvar result = new Array();\n\t\tif (IsSum)\n\t\t\tfor (var i = 0; i < pathCnt; i++)\n\t\t\t{\n\t\t\t\tvar p = new Array(polyCnt);\n\t\t\t\tfor (var j = 0, jlen = pattern.length, ip = pattern[j]; j < jlen; j++, ip = pattern[j])\n\t\t\t\t\tp[j] = new ClipperLib.IntPoint2(path[i].X + ip.X, path[i].Y + ip.Y);\n\t\t\t\tresult.push(p);\n\t\t\t}\n\t\telse\n\t\t\tfor (var i = 0; i < pathCnt; i++)\n\t\t\t{\n\t\t\t\tvar p = new Array(polyCnt);\n\t\t\t\tfor (var j = 0, jlen = pattern.length, ip = pattern[j]; j < jlen; j++, ip = pattern[j])\n\t\t\t\t\tp[j] = new ClipperLib.IntPoint2(path[i].X - ip.X, path[i].Y - ip.Y);\n\t\t\t\tresult.push(p);\n\t\t\t}\n\t\tvar quads = new Array();\n\t\tfor (var i = 0; i < pathCnt - 1 + delta; i++)\n\t\t\tfor (var j = 0; j < polyCnt; j++)\n\t\t\t{\n\t\t\t\tvar quad = new Array();\n\t\t\t\tquad.push(result[i % pathCnt][j % polyCnt]);\n\t\t\t\tquad.push(result[(i + 1) % pathCnt][j % polyCnt]);\n\t\t\t\tquad.push(result[(i + 1) % pathCnt][(j + 1) % polyCnt]);\n\t\t\t\tquad.push(result[i % pathCnt][(j + 1) % polyCnt]);\n\t\t\t\tif (!ClipperLib.Clipper.Orientation(quad))\n\t\t\t\t\tquad.reverse();\n\t\t\t\tquads.push(quad);\n\t\t\t}\n\t\treturn quads;\n\t};\n\n\tClipperLib.Clipper.MinkowskiSum = function (pattern, path_or_paths, pathIsClosed)\n\t{\n\t\tif (!(path_or_paths[0] instanceof Array))\n\t\t{\n\t\t\tvar path = path_or_paths;\n\t\t\tvar paths = ClipperLib.Clipper.Minkowski(pattern, path, true, pathIsClosed);\n\t\t\tvar c = new ClipperLib.Clipper();\n\t\t\tc.AddPaths(paths, ClipperLib.PolyType.ptSubject, true);\n\t\t\tc.Execute(ClipperLib.ClipType.ctUnion, paths, ClipperLib.PolyFillType.pftNonZero, ClipperLib.PolyFillType.pftNonZero);\n\t\t\treturn paths;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar paths = path_or_paths;\n\t\t\tvar solution = new ClipperLib.Paths();\n\t\t\tvar c = new ClipperLib.Clipper();\n\t\t\tfor (var i = 0; i < paths.length; ++i)\n\t\t\t{\n\t\t\t\tvar tmp = ClipperLib.Clipper.Minkowski(pattern, paths[i], true, pathIsClosed);\n\t\t\t\tc.AddPaths(tmp, ClipperLib.PolyType.ptSubject, true);\n\t\t\t\tif (pathIsClosed)\n\t\t\t\t{\n\t\t\t\t\tvar path = ClipperLib.Clipper.TranslatePath(paths[i], pattern[0]);\n\t\t\t\t\tc.AddPath(path, ClipperLib.PolyType.ptClip, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\tc.Execute(ClipperLib.ClipType.ctUnion, solution,\n\t\t\t\tClipperLib.PolyFillType.pftNonZero, ClipperLib.PolyFillType.pftNonZero);\n\t\t\treturn solution;\n\t\t}\n\t}\n\n\tClipperLib.Clipper.TranslatePath = function (path, delta)\n\t{\n\t\tvar outPath = new ClipperLib.Path();\n\t\tfor (var i = 0; i < path.length; i++)\n\t\t\toutPath.push(new ClipperLib.IntPoint2(path[i].X + delta.X, path[i].Y + delta.Y));\n\t\treturn outPath;\n\t}\n\n\tClipperLib.Clipper.MinkowskiDiff = function (poly1, poly2)\n\t{\n\t\tvar paths = ClipperLib.Clipper.Minkowski(poly1, poly2, false, true);\n\t\tvar c = new ClipperLib.Clipper();\n\t\tc.AddPaths(paths, ClipperLib.PolyType.ptSubject, true);\n\t\tc.Execute(ClipperLib.ClipType.ctUnion, paths, ClipperLib.PolyFillType.pftNonZero, ClipperLib.PolyFillType.pftNonZero);\n\t\treturn paths;\n\t}\n\n\tClipperLib.Clipper.PolyTreeToPaths = function (polytree)\n\t{\n\t\tvar result = new Array();\n\t\t//result.set_Capacity(polytree.get_Total());\n\t\tClipperLib.Clipper.AddPolyNodeToPaths(polytree, ClipperLib.Clipper.NodeType.ntAny, result);\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.AddPolyNodeToPaths = function (polynode, nt, paths)\n\t{\n\t\tvar match = true;\n\t\tswitch (nt)\n\t\t{\n\t\tcase ClipperLib.Clipper.NodeType.ntOpen:\n\t\t\treturn;\n\t\tcase ClipperLib.Clipper.NodeType.ntClosed:\n\t\t\tmatch = !polynode.IsOpen;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t\tif (polynode.m_polygon.length > 0 && match)\n\t\t\tpaths.push(polynode.m_polygon);\n\t\tfor (var $i3 = 0, $t3 = polynode.Childs(), $l3 = $t3.length, pn = $t3[$i3]; $i3 < $l3; $i3++, pn = $t3[$i3])\n\t\t\tClipperLib.Clipper.AddPolyNodeToPaths(pn, nt, paths);\n\t};\n\n\tClipperLib.Clipper.OpenPathsFromPolyTree = function (polytree)\n\t{\n\t\tvar result = new ClipperLib.Paths();\n\t\t//result.set_Capacity(polytree.ChildCount());\n\t\tfor (var i = 0, ilen = polytree.ChildCount(); i < ilen; i++)\n\t\t\tif (polytree.Childs()[i].IsOpen)\n\t\t\t\tresult.push(polytree.Childs()[i].m_polygon);\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.ClosedPathsFromPolyTree = function (polytree)\n\t{\n\t\tvar result = new ClipperLib.Paths();\n\t\t//result.set_Capacity(polytree.Total());\n\t\tClipperLib.Clipper.AddPolyNodeToPaths(polytree, ClipperLib.Clipper.NodeType.ntClosed, result);\n\t\treturn result;\n\t};\n\n\tInherit(ClipperLib.Clipper, ClipperLib.ClipperBase);\n\tClipperLib.Clipper.NodeType = {\n\t\tntAny: 0,\n\t\tntOpen: 1,\n\t\tntClosed: 2\n\t};\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.ClipperOffset = function (miterLimit, arcTolerance)\n\t{\n\t\tif (typeof (miterLimit) === \"undefined\") miterLimit = 2;\n\t\tif (typeof (arcTolerance) === \"undefined\") arcTolerance = ClipperLib.ClipperOffset.def_arc_tolerance;\n\t\tthis.m_destPolys = new ClipperLib.Paths();\n\t\tthis.m_srcPoly = new ClipperLib.Path();\n\t\tthis.m_destPoly = new ClipperLib.Path();\n\t\tthis.m_normals = new Array();\n\t\tthis.m_delta = 0;\n\t\tthis.m_sinA = 0;\n\t\tthis.m_sin = 0;\n\t\tthis.m_cos = 0;\n\t\tthis.m_miterLim = 0;\n\t\tthis.m_StepsPerRad = 0;\n\t\tthis.m_lowest = new ClipperLib.IntPoint0();\n\t\tthis.m_polyNodes = new ClipperLib.PolyNode();\n\t\tthis.MiterLimit = miterLimit;\n\t\tthis.ArcTolerance = arcTolerance;\n\t\tthis.m_lowest.X = -1;\n\t};\n\n\tClipperLib.ClipperOffset.two_pi = 6.28318530717959;\n\tClipperLib.ClipperOffset.def_arc_tolerance = 0.25;\n\tClipperLib.ClipperOffset.prototype.Clear = function ()\n\t{\n\t\tClipperLib.Clear(this.m_polyNodes.Childs());\n\t\tthis.m_lowest.X = -1;\n\t};\n\n\tClipperLib.ClipperOffset.Round = ClipperLib.Clipper.Round;\n\tClipperLib.ClipperOffset.prototype.AddPath = function (path, joinType, endType)\n\t{\n\t\tvar highI = path.length - 1;\n\t\tif (highI < 0)\n\t\t\treturn;\n\t\tvar newNode = new ClipperLib.PolyNode();\n\t\tnewNode.m_jointype = joinType;\n\t\tnewNode.m_endtype = endType;\n\t\t//strip duplicate points from path and also get index to the lowest point ...\n\t\tif (endType === ClipperLib.EndType.etClosedLine || endType === ClipperLib.EndType.etClosedPolygon)\n\t\t\twhile (highI > 0 && ClipperLib.IntPoint.op_Equality(path[0], path[highI]))\n\t\t\t\thighI--;\n\t\t//newNode.m_polygon.set_Capacity(highI + 1);\n\t\tnewNode.m_polygon.push(path[0]);\n\t\tvar j = 0,\n\t\t\tk = 0;\n\t\tfor (var i = 1; i <= highI; i++)\n\t\t\tif (ClipperLib.IntPoint.op_Inequality(newNode.m_polygon[j], path[i]))\n\t\t\t{\n\t\t\t\tj++;\n\t\t\t\tnewNode.m_polygon.push(path[i]);\n\t\t\t\tif (path[i].Y > newNode.m_polygon[k].Y || (path[i].Y === newNode.m_polygon[k].Y && path[i].X < newNode.m_polygon[k].X))\n\t\t\t\t\tk = j;\n\t\t\t}\n\t\tif (endType === ClipperLib.EndType.etClosedPolygon && j < 2) return;\n\n\t\tthis.m_polyNodes.AddChild(newNode);\n\t\t//if this path's lowest pt is lower than all the others then update m_lowest\n\t\tif (endType !== ClipperLib.EndType.etClosedPolygon)\n\t\t\treturn;\n\t\tif (this.m_lowest.X < 0)\n\t\t\tthis.m_lowest = new ClipperLib.IntPoint2(this.m_polyNodes.ChildCount() - 1, k);\n\t\telse\n\t\t{\n\t\t\tvar ip = this.m_polyNodes.Childs()[this.m_lowest.X].m_polygon[this.m_lowest.Y];\n\t\t\tif (newNode.m_polygon[k].Y > ip.Y || (newNode.m_polygon[k].Y === ip.Y && newNode.m_polygon[k].X < ip.X))\n\t\t\t\tthis.m_lowest = new ClipperLib.IntPoint2(this.m_polyNodes.ChildCount() - 1, k);\n\t\t}\n\t};\n\n\tClipperLib.ClipperOffset.prototype.AddPaths = function (paths, joinType, endType)\n\t{\n\t\tfor (var i = 0, ilen = paths.length; i < ilen; i++)\n\t\t\tthis.AddPath(paths[i], joinType, endType);\n\t};\n\n\tClipperLib.ClipperOffset.prototype.FixOrientations = function ()\n\t{\n\t\t//fixup orientations of all closed paths if the orientation of the\n\t\t//closed path with the lowermost vertex is wrong ...\n\t\tif (this.m_lowest.X >= 0 && !ClipperLib.Clipper.Orientation(this.m_polyNodes.Childs()[this.m_lowest.X].m_polygon))\n\t\t{\n\t\t\tfor (var i = 0; i < this.m_polyNodes.ChildCount(); i++)\n\t\t\t{\n\t\t\t\tvar node = this.m_polyNodes.Childs()[i];\n\t\t\t\tif (node.m_endtype === ClipperLib.EndType.etClosedPolygon || (node.m_endtype === ClipperLib.EndType.etClosedLine && ClipperLib.Clipper.Orientation(node.m_polygon)))\n\t\t\t\t\tnode.m_polygon.reverse();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i = 0; i < this.m_polyNodes.ChildCount(); i++)\n\t\t\t{\n\t\t\t\tvar node = this.m_polyNodes.Childs()[i];\n\t\t\t\tif (node.m_endtype === ClipperLib.EndType.etClosedLine && !ClipperLib.Clipper.Orientation(node.m_polygon))\n\t\t\t\t\tnode.m_polygon.reverse();\n\t\t\t}\n\t\t}\n\t};\n\n\tClipperLib.ClipperOffset.GetUnitNormal = function (pt1, pt2)\n\t{\n\t\tvar dx = (pt2.X - pt1.X);\n\t\tvar dy = (pt2.Y - pt1.Y);\n\t\tif ((dx === 0) && (dy === 0))\n\t\t\treturn new ClipperLib.DoublePoint2(0, 0);\n\t\tvar f = 1 / Math.sqrt(dx * dx + dy * dy);\n\t\tdx *= f;\n\t\tdy *= f;\n\t\treturn new ClipperLib.DoublePoint2(dy, -dx);\n\t};\n\n\tClipperLib.ClipperOffset.prototype.DoOffset = function (delta)\n\t{\n\t\tthis.m_destPolys = new Array();\n\t\tthis.m_delta = delta;\n\t\t//if Zero offset, just copy any CLOSED polygons to m_p and return ...\n\t\tif (ClipperLib.ClipperBase.near_zero(delta))\n\t\t{\n\t\t\t//this.m_destPolys.set_Capacity(this.m_polyNodes.ChildCount);\n\t\t\tfor (var i = 0; i < this.m_polyNodes.ChildCount(); i++)\n\t\t\t{\n\t\t\t\tvar node = this.m_polyNodes.Childs()[i];\n\t\t\t\tif (node.m_endtype === ClipperLib.EndType.etClosedPolygon)\n\t\t\t\t\tthis.m_destPolys.push(node.m_polygon);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t//see offset_triginometry3.svg in the documentation folder ...\n\t\tif (this.MiterLimit > 2)\n\t\t\tthis.m_miterLim = 2 / (this.MiterLimit * this.MiterLimit);\n\t\telse\n\t\t\tthis.m_miterLim = 0.5;\n\t\tvar y;\n\t\tif (this.ArcTolerance <= 0)\n\t\t\ty = ClipperLib.ClipperOffset.def_arc_tolerance;\n\t\telse if (this.ArcTolerance > Math.abs(delta) * ClipperLib.ClipperOffset.def_arc_tolerance)\n\t\t\ty = Math.abs(delta) * ClipperLib.ClipperOffset.def_arc_tolerance;\n\t\telse\n\t\t\ty = this.ArcTolerance;\n\t\t//see offset_triginometry2.svg in the documentation folder ...\n\t\tvar steps = 3.14159265358979 / Math.acos(1 - y / Math.abs(delta));\n\t\tthis.m_sin = Math.sin(ClipperLib.ClipperOffset.two_pi / steps);\n\t\tthis.m_cos = Math.cos(ClipperLib.ClipperOffset.two_pi / steps);\n\t\tthis.m_StepsPerRad = steps / ClipperLib.ClipperOffset.two_pi;\n\t\tif (delta < 0)\n\t\t\tthis.m_sin = -this.m_sin;\n\t\t//this.m_destPolys.set_Capacity(this.m_polyNodes.ChildCount * 2);\n\t\tfor (var i = 0; i < this.m_polyNodes.ChildCount(); i++)\n\t\t{\n\t\t\tvar node = this.m_polyNodes.Childs()[i];\n\t\t\tthis.m_srcPoly = node.m_polygon;\n\t\t\tvar len = this.m_srcPoly.length;\n\t\t\tif (len === 0 || (delta <= 0 && (len < 3 || node.m_endtype !== ClipperLib.EndType.etClosedPolygon)))\n\t\t\t\tcontinue;\n\t\t\tthis.m_destPoly = new Array();\n\t\t\tif (len === 1)\n\t\t\t{\n\t\t\t\tif (node.m_jointype === ClipperLib.JoinType.jtRound)\n\t\t\t\t{\n\t\t\t\t\tvar X = 1,\n\t\t\t\t\t\tY = 0;\n\t\t\t\t\tfor (var j = 1; j <= steps; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.m_destPoly.push(new ClipperLib.IntPoint2(ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].X + X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].Y + Y * delta)));\n\t\t\t\t\t\tvar X2 = X;\n\t\t\t\t\t\tX = X * this.m_cos - this.m_sin * Y;\n\t\t\t\t\t\tY = X2 * this.m_sin + Y * this.m_cos;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar X = -1,\n\t\t\t\t\t\tY = -1;\n\t\t\t\t\tfor (var j = 0; j < 4; ++j)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.m_destPoly.push(new ClipperLib.IntPoint2(ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].X + X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].Y + Y * delta)));\n\t\t\t\t\t\tif (X < 0)\n\t\t\t\t\t\t\tX = 1;\n\t\t\t\t\t\telse if (Y < 0)\n\t\t\t\t\t\t\tY = 1;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tX = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.m_destPolys.push(this.m_destPoly);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//build m_normals ...\n\t\t\tthis.m_normals.length = 0;\n\t\t\t//this.m_normals.set_Capacity(len);\n\t\t\tfor (var j = 0; j < len - 1; j++)\n\t\t\t\tthis.m_normals.push(ClipperLib.ClipperOffset.GetUnitNormal(this.m_srcPoly[j], this.m_srcPoly[j + 1]));\n\t\t\tif (node.m_endtype === ClipperLib.EndType.etClosedLine || node.m_endtype === ClipperLib.EndType.etClosedPolygon)\n\t\t\t\tthis.m_normals.push(ClipperLib.ClipperOffset.GetUnitNormal(this.m_srcPoly[len - 1], this.m_srcPoly[0]));\n\t\t\telse\n\t\t\t\tthis.m_normals.push(new ClipperLib.DoublePoint1(this.m_normals[len - 2]));\n\t\t\tif (node.m_endtype === ClipperLib.EndType.etClosedPolygon)\n\t\t\t{\n\t\t\t\tvar k = len - 1;\n\t\t\t\tfor (var j = 0; j < len; j++)\n\t\t\t\t\tk = this.OffsetPoint(j, k, node.m_jointype);\n\t\t\t\tthis.m_destPolys.push(this.m_destPoly);\n\t\t\t}\n\t\t\telse if (node.m_endtype === ClipperLib.EndType.etClosedLine)\n\t\t\t{\n\t\t\t\tvar k = len - 1;\n\t\t\t\tfor (var j = 0; j < len; j++)\n\t\t\t\t\tk = this.OffsetPoint(j, k, node.m_jointype);\n\t\t\t\tthis.m_destPolys.push(this.m_destPoly);\n\t\t\t\tthis.m_destPoly = new Array();\n\t\t\t\t//re-build m_normals ...\n\t\t\t\tvar n = this.m_normals[len - 1];\n\t\t\t\tfor (var j = len - 1; j > 0; j--)\n\t\t\t\t\tthis.m_normals[j] = new ClipperLib.DoublePoint2(-this.m_normals[j - 1].X, -this.m_normals[j - 1].Y);\n\t\t\t\tthis.m_normals[0] = new ClipperLib.DoublePoint2(-n.X, -n.Y);\n\t\t\t\tk = 0;\n\t\t\t\tfor (var j = len - 1; j >= 0; j--)\n\t\t\t\t\tk = this.OffsetPoint(j, k, node.m_jointype);\n\t\t\t\tthis.m_destPolys.push(this.m_destPoly);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar k = 0;\n\t\t\t\tfor (var j = 1; j < len - 1; ++j)\n\t\t\t\t\tk = this.OffsetPoint(j, k, node.m_jointype);\n\t\t\t\tvar pt1;\n\t\t\t\tif (node.m_endtype === ClipperLib.EndType.etOpenButt)\n\t\t\t\t{\n\t\t\t\t\tvar j = len - 1;\n\t\t\t\t\tpt1 = new ClipperLib.IntPoint2(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_normals[j].X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_normals[j].Y * delta));\n\t\t\t\t\tthis.m_destPoly.push(pt1);\n\t\t\t\t\tpt1 = new ClipperLib.IntPoint2(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X - this.m_normals[j].X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y - this.m_normals[j].Y * delta));\n\t\t\t\t\tthis.m_destPoly.push(pt1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar j = len - 1;\n\t\t\t\t\tk = len - 2;\n\t\t\t\t\tthis.m_sinA = 0;\n\t\t\t\t\tthis.m_normals[j] = new ClipperLib.DoublePoint2(-this.m_normals[j].X, -this.m_normals[j].Y);\n\t\t\t\t\tif (node.m_endtype === ClipperLib.EndType.etOpenSquare)\n\t\t\t\t\t\tthis.DoSquare(j, k);\n\t\t\t\t\telse\n\t\t\t\t\t\tthis.DoRound(j, k);\n\t\t\t\t}\n\t\t\t\t//re-build m_normals ...\n\t\t\t\tfor (var j = len - 1; j > 0; j--)\n\t\t\t\t\tthis.m_normals[j] = new ClipperLib.DoublePoint2(-this.m_normals[j - 1].X, -this.m_normals[j - 1].Y);\n\t\t\t\tthis.m_normals[0] = new ClipperLib.DoublePoint2(-this.m_normals[1].X, -this.m_normals[1].Y);\n\t\t\t\tk = len - 1;\n\t\t\t\tfor (var j = k - 1; j > 0; --j)\n\t\t\t\t\tk = this.OffsetPoint(j, k, node.m_jointype);\n\t\t\t\tif (node.m_endtype === ClipperLib.EndType.etOpenButt)\n\t\t\t\t{\n\t\t\t\t\tpt1 = new ClipperLib.IntPoint2(ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].X - this.m_normals[0].X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].Y - this.m_normals[0].Y * delta));\n\t\t\t\t\tthis.m_destPoly.push(pt1);\n\t\t\t\t\tpt1 = new ClipperLib.IntPoint2(ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].X + this.m_normals[0].X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].Y + this.m_normals[0].Y * delta));\n\t\t\t\t\tthis.m_destPoly.push(pt1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tk = 1;\n\t\t\t\t\tthis.m_sinA = 0;\n\t\t\t\t\tif (node.m_endtype === ClipperLib.EndType.etOpenSquare)\n\t\t\t\t\t\tthis.DoSquare(0, 1);\n\t\t\t\t\telse\n\t\t\t\t\t\tthis.DoRound(0, 1);\n\t\t\t\t}\n\t\t\t\tthis.m_destPolys.push(this.m_destPoly);\n\t\t\t}\n\t\t}\n\t};\n\n\tClipperLib.ClipperOffset.prototype.Execute = function ()\n\t{\n\t\tvar a = arguments,\n\t\t\tispolytree = a[0] instanceof ClipperLib.PolyTree;\n\t\tif (!ispolytree) // function (solution, delta)\n\t\t{\n\t\t\tvar solution = a[0],\n\t\t\t\tdelta = a[1];\n\t\t\tClipperLib.Clear(solution);\n\t\t\tthis.FixOrientations();\n\t\t\tthis.DoOffset(delta);\n\t\t\t//now clean up 'corners' ...\n\t\t\tvar clpr = new ClipperLib.Clipper(0);\n\t\t\tclpr.AddPaths(this.m_destPolys, ClipperLib.PolyType.ptSubject, true);\n\t\t\tif (delta > 0)\n\t\t\t{\n\t\t\t\tclpr.Execute(ClipperLib.ClipType.ctUnion, solution, ClipperLib.PolyFillType.pftPositive, ClipperLib.PolyFillType.pftPositive);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar r = ClipperLib.Clipper.GetBounds(this.m_destPolys);\n\t\t\t\tvar outer = new ClipperLib.Path();\n\t\t\t\touter.push(new ClipperLib.IntPoint2(r.left - 10, r.bottom + 10));\n\t\t\t\touter.push(new ClipperLib.IntPoint2(r.right + 10, r.bottom + 10));\n\t\t\t\touter.push(new ClipperLib.IntPoint2(r.right + 10, r.top - 10));\n\t\t\t\touter.push(new ClipperLib.IntPoint2(r.left - 10, r.top - 10));\n\t\t\t\tclpr.AddPath(outer, ClipperLib.PolyType.ptSubject, true);\n\t\t\t\tclpr.ReverseSolution = true;\n\t\t\t\tclpr.Execute(ClipperLib.ClipType.ctUnion, solution, ClipperLib.PolyFillType.pftNegative, ClipperLib.PolyFillType.pftNegative);\n\t\t\t\tif (solution.length > 0)\n\t\t\t\t\tsolution.splice(0, 1);\n\t\t\t}\n\t\t\t//console.log(JSON.stringify(solution));\n\t\t}\n\t\telse // function (polytree, delta)\n\t\t{\n\t\t\tvar solution = a[0],\n\t\t\t\tdelta = a[1];\n\t\t\tsolution.Clear();\n\t\t\tthis.FixOrientations();\n\t\t\tthis.DoOffset(delta);\n\t\t\t//now clean up 'corners' ...\n\t\t\tvar clpr = new ClipperLib.Clipper(0);\n\t\t\tclpr.AddPaths(this.m_destPolys, ClipperLib.PolyType.ptSubject, true);\n\t\t\tif (delta > 0)\n\t\t\t{\n\t\t\t\tclpr.Execute(ClipperLib.ClipType.ctUnion, solution, ClipperLib.PolyFillType.pftPositive, ClipperLib.PolyFillType.pftPositive);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar r = ClipperLib.Clipper.GetBounds(this.m_destPolys);\n\t\t\t\tvar outer = new ClipperLib.Path();\n\t\t\t\touter.push(new ClipperLib.IntPoint2(r.left - 10, r.bottom + 10));\n\t\t\t\touter.push(new ClipperLib.IntPoint2(r.right + 10, r.bottom + 10));\n\t\t\t\touter.push(new ClipperLib.IntPoint2(r.right + 10, r.top - 10));\n\t\t\t\touter.push(new ClipperLib.IntPoint2(r.left - 10, r.top - 10));\n\t\t\t\tclpr.AddPath(outer, ClipperLib.PolyType.ptSubject, true);\n\t\t\t\tclpr.ReverseSolution = true;\n\t\t\t\tclpr.Execute(ClipperLib.ClipType.ctUnion, solution, ClipperLib.PolyFillType.pftNegative, ClipperLib.PolyFillType.pftNegative);\n\t\t\t\t//remove the outer PolyNode rectangle ...\n\t\t\t\tif (solution.ChildCount() === 1 && solution.Childs()[0].ChildCount() > 0)\n\t\t\t\t{\n\t\t\t\t\tvar outerNode = solution.Childs()[0];\n\t\t\t\t\t//solution.Childs.set_Capacity(outerNode.ChildCount);\n\t\t\t\t\tsolution.Childs()[0] = outerNode.Childs()[0];\n\t\t\t\t\tsolution.Childs()[0].m_Parent = solution;\n\t\t\t\t\tfor (var i = 1; i < outerNode.ChildCount(); i++)\n\t\t\t\t\t\tsolution.AddChild(outerNode.Childs()[i]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tsolution.Clear();\n\t\t\t}\n\t\t}\n\t};\n\n\tClipperLib.ClipperOffset.prototype.OffsetPoint = function (j, k, jointype)\n\t{\n\t\t//cross product ...\n\t\tthis.m_sinA = (this.m_normals[k].X * this.m_normals[j].Y - this.m_normals[j].X * this.m_normals[k].Y);\n\n\t\tif (Math.abs(this.m_sinA * this.m_delta) < 1.0)\n\t\t{\n\t\t\t//dot product ...\n\t\t\tvar cosA = (this.m_normals[k].X * this.m_normals[j].X + this.m_normals[j].Y * this.m_normals[k].Y);\n\t\t\tif (cosA > 0) // angle ==> 0 degrees\n\t\t\t{\n\t\t\t\tthis.m_destPoly.push(new ClipperLib.IntPoint2(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_normals[k].X * this.m_delta),\n\t\t\t\t\tClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_normals[k].Y * this.m_delta)));\n\t\t\t\treturn k;\n\t\t\t}\n\t\t\t//else angle ==> 180 degrees\n\t\t}\n\t\telse if (this.m_sinA > 1)\n\t\t\tthis.m_sinA = 1.0;\n\t\telse if (this.m_sinA < -1)\n\t\t\tthis.m_sinA = -1.0;\n\t\tif (this.m_sinA * this.m_delta < 0)\n\t\t{\n\t\t\tthis.m_destPoly.push(new ClipperLib.IntPoint2(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_normals[k].X * this.m_delta),\n\t\t\t\tClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_normals[k].Y * this.m_delta)));\n\t\t\tthis.m_destPoly.push(new ClipperLib.IntPoint1(this.m_srcPoly[j]));\n\t\t\tthis.m_destPoly.push(new ClipperLib.IntPoint2(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_normals[j].X * this.m_delta),\n\t\t\t\tClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_normals[j].Y * this.m_delta)));\n\t\t}\n\t\telse\n\t\t\tswitch (jointype)\n\t\t\t{\n\t\t\tcase ClipperLib.JoinType.jtMiter:\n\t\t\t\t{\n\t\t\t\t\tvar r = 1 + (this.m_normals[j].X * this.m_normals[k].X + this.m_normals[j].Y * this.m_normals[k].Y);\n\t\t\t\t\tif (r >= this.m_miterLim)\n\t\t\t\t\t\tthis.DoMiter(j, k, r);\n\t\t\t\t\telse\n\t\t\t\t\t\tthis.DoSquare(j, k);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase ClipperLib.JoinType.jtSquare:\n\t\t\t\tthis.DoSquare(j, k);\n\t\t\t\tbreak;\n\t\t\tcase ClipperLib.JoinType.jtRound:\n\t\t\t\tthis.DoRound(j, k);\n\t\t\t\tbreak;\n\t\t\t}\n\t\tk = j;\n\t\treturn k;\n\t};\n\n\tClipperLib.ClipperOffset.prototype.DoSquare = function (j, k)\n\t{\n\t\tvar dx = Math.tan(Math.atan2(this.m_sinA,\n\t\t\tthis.m_normals[k].X * this.m_normals[j].X + this.m_normals[k].Y * this.m_normals[j].Y) / 4);\n\t\tthis.m_destPoly.push(new ClipperLib.IntPoint2(\n\t\t\tClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_delta * (this.m_normals[k].X - this.m_normals[k].Y * dx)),\n\t\t\tClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_delta * (this.m_normals[k].Y + this.m_normals[k].X * dx))));\n\t\tthis.m_destPoly.push(new ClipperLib.IntPoint2(\n\t\t\tClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_delta * (this.m_normals[j].X + this.m_normals[j].Y * dx)),\n\t\t\tClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_delta * (this.m_normals[j].Y - this.m_normals[j].X * dx))));\n\t};\n\n\tClipperLib.ClipperOffset.prototype.DoMiter = function (j, k, r)\n\t{\n\t\tvar q = this.m_delta / r;\n\t\tthis.m_destPoly.push(new ClipperLib.IntPoint2(\n\t\t\tClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + (this.m_normals[k].X + this.m_normals[j].X) * q),\n\t\t\tClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + (this.m_normals[k].Y + this.m_normals[j].Y) * q)));\n\t};\n\n\tClipperLib.ClipperOffset.prototype.DoRound = function (j, k)\n\t{\n\t\tvar a = Math.atan2(this.m_sinA,\n\t\t\tthis.m_normals[k].X * this.m_normals[j].X + this.m_normals[k].Y * this.m_normals[j].Y);\n\n\t\tvar steps = Math.max(ClipperLib.Cast_Int32(ClipperLib.ClipperOffset.Round(this.m_StepsPerRad * Math.abs(a))), 1);\n\n\t\tvar X = this.m_normals[k].X,\n\t\t\tY = this.m_normals[k].Y,\n\t\t\tX2;\n\t\tfor (var i = 0; i < steps; ++i)\n\t\t{\n\t\t\tthis.m_destPoly.push(new ClipperLib.IntPoint2(\n\t\t\t\tClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + X * this.m_delta),\n\t\t\t\tClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + Y * this.m_delta)));\n\t\t\tX2 = X;\n\t\t\tX = X * this.m_cos - this.m_sin * Y;\n\t\t\tY = X2 * this.m_sin + Y * this.m_cos;\n\t\t}\n\t\tthis.m_destPoly.push(new ClipperLib.IntPoint2(\n\t\t\tClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_normals[j].X * this.m_delta),\n\t\t\tClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_normals[j].Y * this.m_delta)));\n\t};\n\n\tClipperLib.Error = function (message)\n\t{\n\t\ttry\n\t\t{\n\t\t\tthrow new Error(message);\n\t\t}\n\t\tcatch (err)\n\t\t{\n\t\t\talert(err.message);\n\t\t}\n\t};\n\n\t// ---------------------------------------------\n\n\t// JS extension by Timo 2013\n\tClipperLib.JS = {};\n\n\tClipperLib.JS.AreaOfPolygon = function (poly, scale)\n\t{\n\t\tif (!scale) scale = 1;\n\t\treturn ClipperLib.Clipper.Area(poly) / (scale * scale);\n\t};\n\n\tClipperLib.JS.AreaOfPolygons = function (poly, scale)\n\t{\n\t\tif (!scale) scale = 1;\n\t\tvar area = 0;\n\t\tfor (var i = 0; i < poly.length; i++)\n\t\t{\n\t\t\tarea += ClipperLib.Clipper.Area(poly[i]);\n\t\t}\n\t\treturn area / (scale * scale);\n\t};\n\n\tClipperLib.JS.BoundsOfPath = function (path, scale)\n\t{\n\t\treturn ClipperLib.JS.BoundsOfPaths([path], scale);\n\t};\n\n\tClipperLib.JS.BoundsOfPaths = function (paths, scale)\n\t{\n\t\tif (!scale) scale = 1;\n\t\tvar bounds = ClipperLib.Clipper.GetBounds(paths);\n\t\tbounds.left /= scale;\n\t\tbounds.bottom /= scale;\n\t\tbounds.right /= scale;\n\t\tbounds.top /= scale;\n\t\treturn bounds;\n\t};\n\n\t// Clean() joins vertices that are too near each other\n\t// and causes distortion to offsetted polygons without cleaning\n\tClipperLib.JS.Clean = function (polygon, delta)\n\t{\n\t\tif (!(polygon instanceof Array)) return [];\n\t\tvar isPolygons = polygon[0] instanceof Array;\n\t\tvar polygon = ClipperLib.JS.Clone(polygon);\n\t\tif (typeof delta !== \"number\" || delta === null)\n\t\t{\n\t\t\tClipperLib.Error(\"Delta is not a number in Clean().\");\n\t\t\treturn polygon;\n\t\t}\n\t\tif (polygon.length === 0 || (polygon.length === 1 && polygon[0].length === 0) || delta < 0) return polygon;\n\t\tif (!isPolygons) polygon = [polygon];\n\t\tvar k_length = polygon.length;\n\t\tvar len, poly, result, d, p, j, i;\n\t\tvar results = [];\n\t\tfor (var k = 0; k < k_length; k++)\n\t\t{\n\t\t\tpoly = polygon[k];\n\t\t\tlen = poly.length;\n\t\t\tif (len === 0) continue;\n\t\t\telse if (len < 3)\n\t\t\t{\n\t\t\t\tresult = poly;\n\t\t\t\tresults.push(result);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tresult = poly;\n\t\t\td = delta * delta;\n\t\t\t//d = Math.floor(c_delta * c_delta);\n\t\t\tp = poly[0];\n\t\t\tj = 1;\n\t\t\tfor (i = 1; i < len; i++)\n\t\t\t{\n\t\t\t\tif ((poly[i].X - p.X) * (poly[i].X - p.X) +\n\t\t\t\t\t(poly[i].Y - p.Y) * (poly[i].Y - p.Y) <= d)\n\t\t\t\t\tcontinue;\n\t\t\t\tresult[j] = poly[i];\n\t\t\t\tp = poly[i];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tp = poly[j - 1];\n\t\t\tif ((poly[0].X - p.X) * (poly[0].X - p.X) +\n\t\t\t\t(poly[0].Y - p.Y) * (poly[0].Y - p.Y) <= d)\n\t\t\t\tj--;\n\t\t\tif (j < len)\n\t\t\t\tresult.splice(j, len - j);\n\t\t\tif (result.length) results.push(result);\n\t\t}\n\t\tif (!isPolygons && results.length) results = results[0];\n\t\telse if (!isPolygons && results.length === 0) results = [];\n\t\telse if (isPolygons && results.length === 0) results = [\n\t\t\t[]\n\t\t];\n\t\treturn results;\n\t}\n\t// Make deep copy of Polygons or Polygon\n\t// so that also IntPoint objects are cloned and not only referenced\n\t// This should be the fastest way\n\tClipperLib.JS.Clone = function (polygon)\n\t{\n\t\tif (!(polygon instanceof Array)) return [];\n\t\tif (polygon.length === 0) return [];\n\t\telse if (polygon.length === 1 && polygon[0].length === 0) return [\n\t\t\t[]\n\t\t];\n\t\tvar isPolygons = polygon[0] instanceof Array;\n\t\tif (!isPolygons) polygon = [polygon];\n\t\tvar len = polygon.length,\n\t\t\tplen, i, j, result;\n\t\tvar results = new Array(len);\n\t\tfor (i = 0; i < len; i++)\n\t\t{\n\t\t\tplen = polygon[i].length;\n\t\t\tresult = new Array(plen);\n\t\t\tfor (j = 0; j < plen; j++)\n\t\t\t{\n\t\t\t\tresult[j] = {\n\t\t\t\t\tX: polygon[i][j].X,\n\t\t\t\t\tY: polygon[i][j].Y\n\t\t\t\t};\n\n\t\t\t}\n\t\t\tresults[i] = result;\n\t\t}\n\t\tif (!isPolygons) results = results[0];\n\t\treturn results;\n\t};\n\n\t// Removes points that doesn't affect much to the visual appearance.\n\t// If middle point is at or under certain distance (tolerance) of the line segment between\n\t// start and end point, the middle point is removed.\n\tClipperLib.JS.Lighten = function (polygon, tolerance)\n\t{\n\t\tif (!(polygon instanceof Array)) return [];\n\t\tif (typeof tolerance !== \"number\" || tolerance === null)\n\t\t{\n\t\t\tClipperLib.Error(\"Tolerance is not a number in Lighten().\")\n\t\t\treturn ClipperLib.JS.Clone(polygon);\n\t\t}\n\t\tif (polygon.length === 0 || (polygon.length === 1 && polygon[0].length === 0) || tolerance < 0)\n\t\t{\n\t\t\treturn ClipperLib.JS.Clone(polygon);\n\t\t}\n\t\tvar isPolygons = polygon[0] instanceof Array;\n\t\tif (!isPolygons) polygon = [polygon];\n\t\tvar i, j, poly, k, poly2, plen, A, B, P, d, rem, addlast;\n\t\tvar bxax, byay, l, ax, ay;\n\t\tvar len = polygon.length;\n\t\tvar toleranceSq = tolerance * tolerance;\n\t\tvar results = [];\n\t\tfor (i = 0; i < len; i++)\n\t\t{\n\t\t\tpoly = polygon[i];\n\t\t\tplen = poly.length;\n\t\t\tif (plen === 0) continue;\n\t\t\tfor (k = 0; k < 1000000; k++) // could be forever loop, but wiser to restrict max repeat count\n\t\t\t{\n\t\t\t\tpoly2 = [];\n\t\t\t\tplen = poly.length;\n\t\t\t\t// the first have to added to the end, if first and last are not the same\n\t\t\t\t// this way we ensure that also the actual last point can be removed if needed\n\t\t\t\tif (poly[plen - 1].X !== poly[0].X || poly[plen - 1].Y !== poly[0].Y)\n\t\t\t\t{\n\t\t\t\t\taddlast = 1;\n\t\t\t\t\tpoly.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tX: poly[0].X,\n\t\t\t\t\t\tY: poly[0].Y\n\t\t\t\t\t});\n\t\t\t\t\tplen = poly.length;\n\t\t\t\t}\n\t\t\t\telse addlast = 0;\n\t\t\t\trem = []; // Indexes of removed points\n\t\t\t\tfor (j = 0; j < plen - 2; j++)\n\t\t\t\t{\n\t\t\t\t\tA = poly[j]; // Start point of line segment\n\t\t\t\t\tP = poly[j + 1]; // Middle point. This is the one to be removed.\n\t\t\t\t\tB = poly[j + 2]; // End point of line segment\n\t\t\t\t\tax = A.X;\n\t\t\t\t\tay = A.Y;\n\t\t\t\t\tbxax = B.X - ax;\n\t\t\t\t\tbyay = B.Y - ay;\n\t\t\t\t\tif (bxax !== 0 || byay !== 0) // To avoid Nan, when A==P && P==B. And to avoid peaks (A==B && A!=P), which have lenght, but not area.\n\t\t\t\t\t{\n\t\t\t\t\t\tl = ((P.X - ax) * bxax + (P.Y - ay) * byay) / (bxax * bxax + byay * byay);\n\t\t\t\t\t\tif (l > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tax = B.X;\n\t\t\t\t\t\t\tay = B.Y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (l > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tax += bxax * l;\n\t\t\t\t\t\t\tay += byay * l;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbxax = P.X - ax;\n\t\t\t\t\tbyay = P.Y - ay;\n\t\t\t\t\td = bxax * bxax + byay * byay;\n\t\t\t\t\tif (d <= toleranceSq)\n\t\t\t\t\t{\n\t\t\t\t\t\trem[j + 1] = 1;\n\t\t\t\t\t\tj++; // when removed, transfer the pointer to the next one\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// add all unremoved points to poly2\n\t\t\t\tpoly2.push(\n\t\t\t\t{\n\t\t\t\t\tX: poly[0].X,\n\t\t\t\t\tY: poly[0].Y\n\t\t\t\t});\n\t\t\t\tfor (j = 1; j < plen - 1; j++)\n\t\t\t\t\tif (!rem[j]) poly2.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tX: poly[j].X,\n\t\t\t\t\t\tY: poly[j].Y\n\t\t\t\t\t});\n\t\t\t\tpoly2.push(\n\t\t\t\t{\n\t\t\t\t\tX: poly[plen - 1].X,\n\t\t\t\t\tY: poly[plen - 1].Y\n\t\t\t\t});\n\t\t\t\t// if the first point was added to the end, remove it\n\t\t\t\tif (addlast) poly.pop();\n\t\t\t\t// break, if there was not anymore removed points\n\t\t\t\tif (!rem.length) break;\n\t\t\t\t// else continue looping using poly2, to check if there are points to remove\n\t\t\t\telse poly = poly2;\n\t\t\t}\n\t\t\tplen = poly2.length;\n\t\t\t// remove duplicate from end, if needed\n\t\t\tif (poly2[plen - 1].X === poly2[0].X && poly2[plen - 1].Y === poly2[0].Y)\n\t\t\t{\n\t\t\t\tpoly2.pop();\n\t\t\t}\n\t\t\tif (poly2.length > 2) // to avoid two-point-polygons\n\t\t\t\tresults.push(poly2);\n\t\t}\n\t\tif (!isPolygons)\n\t\t{\n\t\t\tresults = results[0];\n\t\t}\n\t\tif (typeof (results) === \"undefined\")\n\t\t{\n\t\t\tresults = [];\n\t\t}\n\t\treturn results;\n\t}\n\n\tClipperLib.JS.PerimeterOfPath = function (path, closed, scale)\n\t{\n\t\tif (typeof (path) === \"undefined\") return 0;\n\t\tvar sqrt = Math.sqrt;\n\t\tvar perimeter = 0.0;\n\t\tvar p1, p2, p1x = 0.0,\n\t\t\tp1y = 0.0,\n\t\t\tp2x = 0.0,\n\t\t\tp2y = 0.0;\n\t\tvar j = path.length;\n\t\tif (j < 2) return 0;\n\t\tif (closed)\n\t\t{\n\t\t\tpath[j] = path[0];\n\t\t\tj++;\n\t\t}\n\t\twhile (--j)\n\t\t{\n\t\t\tp1 = path[j];\n\t\t\tp1x = p1.X;\n\t\t\tp1y = p1.Y;\n\t\t\tp2 = path[j - 1];\n\t\t\tp2x = p2.X;\n\t\t\tp2y = p2.Y;\n\t\t\tperimeter += sqrt((p1x - p2x) * (p1x - p2x) + (p1y - p2y) * (p1y - p2y));\n\t\t}\n\t\tif (closed) path.pop();\n\t\treturn perimeter / scale;\n\t};\n\n\tClipperLib.JS.PerimeterOfPaths = function (paths, closed, scale)\n\t{\n\t\tif (!scale) scale = 1;\n\t\tvar perimeter = 0;\n\t\tfor (var i = 0; i < paths.length; i++)\n\t\t{\n\t\t\tperimeter += ClipperLib.JS.PerimeterOfPath(paths[i], closed, scale);\n\t\t}\n\t\treturn perimeter;\n\t};\n\n\tClipperLib.JS.ScaleDownPath = function (path, scale)\n\t{\n\t\tvar i, p;\n\t\tif (!scale) scale = 1;\n\t\ti = path.length;\n\t\twhile (i--)\n\t\t{\n\t\t\tp = path[i];\n\t\t\tp.X = p.X / scale;\n\t\t\tp.Y = p.Y / scale;\n\t\t}\n\t};\n\n\tClipperLib.JS.ScaleDownPaths = function (paths, scale)\n\t{\n\t\tvar i, j, p;\n\t\tif (!scale) scale = 1;\n\t\ti = paths.length;\n\t\twhile (i--)\n\t\t{\n\t\t\tj = paths[i].length;\n\t\t\twhile (j--)\n\t\t\t{\n\t\t\t\tp = paths[i][j];\n\t\t\t\tp.X = p.X / scale;\n\t\t\t\tp.Y = p.Y / scale;\n\t\t\t}\n\t\t}\n\t};\n\n\tClipperLib.JS.ScaleUpPath = function (path, scale)\n\t{\n\t\tvar i, p, round = Math.round;\n\t\tif (!scale) scale = 1;\n\t\ti = path.length;\n\t\twhile (i--)\n\t\t{\n\t\t\tp = path[i];\n\t\t\tp.X = round(p.X * scale);\n\t\t\tp.Y = round(p.Y * scale);\n\t\t}\n\t};\n\n\tClipperLib.JS.ScaleUpPaths = function (paths, scale)\n\t{\n\t\tvar i, j, p, round = Math.round;\n\t\tif (!scale) scale = 1;\n\t\ti = paths.length;\n\t\twhile (i--)\n\t\t{\n\t\t\tj = paths[i].length;\n\t\t\twhile (j--)\n\t\t\t{\n\t\t\t\tp = paths[i][j];\n\t\t\t\tp.X = round(p.X * scale);\n\t\t\t\tp.Y = round(p.Y * scale);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.ExPolygons = function ()\n\t{\n\t\treturn [];\n\t}\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.ExPolygon = function ()\n\t{\n\t\tthis.outer = null;\n\t\tthis.holes = null;\n\t};\n\n\tClipperLib.JS.AddOuterPolyNodeToExPolygons = function (polynode, expolygons)\n\t{\n\t\tvar ep = new ClipperLib.ExPolygon();\n\t\tep.outer = polynode.Contour();\n\t\tvar childs = polynode.Childs();\n\t\tvar ilen = childs.length;\n\t\tep.holes = new Array(ilen);\n\t\tvar node, n, i, j, childs2, jlen;\n\t\tfor (i = 0; i < ilen; i++)\n\t\t{\n\t\t\tnode = childs[i];\n\t\t\tep.holes[i] = node.Contour();\n\t\t\t//Add outer polygons contained by (nested within) holes ...\n\t\t\tfor (j = 0, childs2 = node.Childs(), jlen = childs2.length; j < jlen; j++)\n\t\t\t{\n\t\t\t\tn = childs2[j];\n\t\t\t\tClipperLib.JS.AddOuterPolyNodeToExPolygons(n, expolygons);\n\t\t\t}\n\t\t}\n\t\texpolygons.push(ep);\n\t};\n\n\tClipperLib.JS.ExPolygonsToPaths = function (expolygons)\n\t{\n\t\tvar a, i, alen, ilen;\n\t\tvar paths = new ClipperLib.Paths();\n\t\tfor (a = 0, alen = expolygons.length; a < alen; a++)\n\t\t{\n\t\t\tpaths.push(expolygons[a].outer);\n\t\t\tfor (i = 0, ilen = expolygons[a].holes.length; i < ilen; i++)\n\t\t\t{\n\t\t\t\tpaths.push(expolygons[a].holes[i]);\n\t\t\t}\n\t\t}\n\t\treturn paths;\n\t}\n\tClipperLib.JS.PolyTreeToExPolygons = function (polytree)\n\t{\n\t\tvar expolygons = new ClipperLib.ExPolygons();\n\t\tvar node, i, childs, ilen;\n\t\tfor (i = 0, childs = polytree.Childs(), ilen = childs.length; i < ilen; i++)\n\t\t{\n\t\t\tnode = childs[i];\n\t\t\tClipperLib.JS.AddOuterPolyNodeToExPolygons(node, expolygons);\n\t\t}\n\t\treturn expolygons;\n\t};\n\n})();\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setErrorCallback = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _clipper = require('@doodle3d/clipper-lib/clipper');\n\nvar _clipper2 = _interopRequireDefault(_clipper);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar errorCallback = void 0;\nvar setErrorCallback = exports.setErrorCallback = function setErrorCallback(callback) {\n  errorCallback = callback;\n};\n_clipper2.default.Error = function (message) {\n  if (errorCallback) errorCallback(message);\n};\n\nvar CLIPPER = new _clipper2.default.Clipper();\nvar CLIPPER_OFFSET = new _clipper2.default.ClipperOffset();\n\nvar Shape = function () {\n  function Shape() {\n    var paths = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var closed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var capitalConversion = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var integerConversion = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    var removeDuplicates = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n    _classCallCheck(this, Shape);\n\n    this.paths = paths;\n    if (capitalConversion) this.paths = this.paths.map(mapLowerToCapital);\n    if (integerConversion) this.paths = this.paths.map(mapToRound);\n    if (removeDuplicates) this.paths = this.paths.map(filterPathsDuplicates);\n    this.closed = closed;\n  }\n\n  _createClass(Shape, [{\n    key: '_clip',\n    value: function _clip(type) {\n      var solution = new _clipper2.default.PolyTree();\n\n      CLIPPER.Clear();\n      CLIPPER.AddPaths(this.paths, _clipper2.default.PolyType.ptSubject, this.closed);\n\n      for (var _len = arguments.length, clipShapes = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        clipShapes[_key - 1] = arguments[_key];\n      }\n\n      for (var i = 0; i < clipShapes.length; i++) {\n        var clipShape = clipShapes[i];\n        CLIPPER.AddPaths(clipShape.paths, _clipper2.default.PolyType.ptClip, clipShape.closed);\n      }\n      CLIPPER.Execute(type, solution);\n\n      var newShape = _clipper2.default.Clipper.PolyTreeToPaths(solution);\n      return new Shape(newShape, this.closed);\n    }\n  }, {\n    key: 'union',\n    value: function union() {\n      for (var _len2 = arguments.length, clipShapes = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        clipShapes[_key2] = arguments[_key2];\n      }\n\n      return this._clip.apply(this, [_clipper2.default.ClipType.ctUnion].concat(clipShapes));\n    }\n  }, {\n    key: 'difference',\n    value: function difference() {\n      for (var _len3 = arguments.length, clipShapes = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        clipShapes[_key3] = arguments[_key3];\n      }\n\n      return this._clip.apply(this, [_clipper2.default.ClipType.ctDifference].concat(clipShapes));\n    }\n  }, {\n    key: 'intersect',\n    value: function intersect() {\n      for (var _len4 = arguments.length, clipShapes = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        clipShapes[_key4] = arguments[_key4];\n      }\n\n      return this._clip.apply(this, [_clipper2.default.ClipType.ctIntersection].concat(clipShapes));\n    }\n  }, {\n    key: 'xor',\n    value: function xor() {\n      for (var _len5 = arguments.length, clipShapes = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        clipShapes[_key5] = arguments[_key5];\n      }\n\n      return this._clip.apply(this, [_clipper2.default.ClipType.ctXor].concat(clipShapes));\n    }\n  }, {\n    key: 'offset',\n    value: function offset(_offset) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var _options$jointType = options.jointType,\n          jointType = _options$jointType === undefined ? 'jtSquare' : _options$jointType,\n          _options$endType = options.endType,\n          endType = _options$endType === undefined ? 'etClosedPolygon' : _options$endType,\n          _options$miterLimit = options.miterLimit,\n          miterLimit = _options$miterLimit === undefined ? 2.0 : _options$miterLimit,\n          _options$roundPrecisi = options.roundPrecision,\n          roundPrecision = _options$roundPrecisi === undefined ? 0.25 : _options$roundPrecisi;\n\n\n      CLIPPER_OFFSET.Clear();\n      CLIPPER_OFFSET.ArcTolerance = roundPrecision;\n      CLIPPER_OFFSET.MiterLimit = miterLimit;\n\n      var offsetPaths = new _clipper2.default.Paths();\n      CLIPPER_OFFSET.AddPaths(this.paths, _clipper2.default.JoinType[jointType], _clipper2.default.EndType[endType]);\n      CLIPPER_OFFSET.Execute(offsetPaths, _offset);\n\n      return new Shape(offsetPaths, true);\n    }\n  }, {\n    key: 'scaleUp',\n    value: function scaleUp(factor) {\n      _clipper2.default.JS.ScaleUpPaths(this.paths, factor);\n\n      return this;\n    }\n  }, {\n    key: 'scaleDown',\n    value: function scaleDown(factor) {\n      _clipper2.default.JS.ScaleDownPaths(this.paths, factor);\n\n      return this;\n    }\n  }, {\n    key: 'firstPoint',\n    value: function firstPoint() {\n      var toLower = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (this.paths.length === 0) {\n        return;\n      }\n\n      var firstPath = this.paths[0];\n      var firstPoint = firstPath[0];\n      if (toLower) {\n        return vectorToLower(firstPoint);\n      } else {\n        return firstPoint;\n      }\n    }\n  }, {\n    key: 'lastPoint',\n    value: function lastPoint() {\n      var toLower = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (this.paths.length === 0) {\n        return;\n      }\n\n      var lastPath = this.paths[this.paths.length - 1];\n      var lastPoint = this.closed ? lastPath[0] : lastPath[lastPath.length - 1];\n      if (toLower) {\n        return vectorToLower(lastPoint);\n      } else {\n        return lastPoint;\n      }\n    }\n  }, {\n    key: 'areas',\n    value: function areas() {\n      var _this = this;\n\n      var areas = this.paths.map(function (path, i) {\n        return _this.area(i);\n      });\n      return areas;\n    }\n  }, {\n    key: 'area',\n    value: function area(index) {\n      var path = this.paths[index];\n      var area = _clipper2.default.Clipper.Area(path);\n      return area;\n    }\n  }, {\n    key: 'totalArea',\n    value: function totalArea() {\n      return this.areas().reduce(function (totalArea, area) {\n        return totalArea + area;\n      }, 0);\n    }\n  }, {\n    key: 'perimeter',\n    value: function perimeter(index) {\n      var path = this.paths[index];\n      var perimeter = _clipper2.default.JS.PerimeterOfPath(path, this.closed, 1);\n      return perimeter;\n    }\n  }, {\n    key: 'perimeters',\n    value: function perimeters() {\n      var _this2 = this;\n\n      return this.paths.map(function (path) {\n        return _clipper2.default.JS.PerimeterOfPath(path, _this2.closed, 1);\n      });\n    }\n  }, {\n    key: 'totalPerimeter',\n    value: function totalPerimeter() {\n      var perimeter = _clipper2.default.JS.PerimeterOfPaths(this.paths, this.closed);\n      return perimeter;\n    }\n  }, {\n    key: 'reverse',\n    value: function reverse() {\n      _clipper2.default.Clipper.ReversePaths(this.paths);\n\n      return this;\n    }\n  }, {\n    key: 'thresholdArea',\n    value: function thresholdArea(minArea) {\n      var _arr = [].concat(_toConsumableArray(this.paths));\n\n      for (var _i = 0; _i < _arr.length; _i++) {\n        var path = _arr[_i];\n        var area = Math.abs(_clipper2.default.Clipper.Area(path));\n\n        if (area < minArea) {\n          var index = this.paths.indexOf(path);\n          this.paths.splice(index, 1);\n        }\n      }\n      return this;\n    }\n  }, {\n    key: 'join',\n    value: function join(shape) {\n      var _paths;\n\n      (_paths = this.paths).splice.apply(_paths, [this.paths.length, 0].concat(_toConsumableArray(shape.paths)));\n\n      return this;\n    }\n  }, {\n    key: 'clone',\n    value: function clone() {\n      return new Shape(_clipper2.default.JS.Clone(this.paths), this.closed);\n    }\n  }, {\n    key: 'shapeBounds',\n    value: function shapeBounds() {\n      return _clipper2.default.JS.BoundsOfPaths(this.paths);\n    }\n  }, {\n    key: 'pathBounds',\n    value: function pathBounds(index) {\n      var path = this.paths[index];\n\n      return _clipper2.default.JS.BoundsOfPath(path);\n    }\n  }, {\n    key: 'clean',\n    value: function clean(cleanDelta) {\n      return new Shape(_clipper2.default.Clipper.CleanPolygons(this.paths, cleanDelta), this.closed);\n    }\n  }, {\n    key: 'orientation',\n    value: function orientation(index) {\n      var path = this.paths[index];\n      return _clipper2.default.Clipper.Orientation(path);\n    }\n  }, {\n    key: 'pointInShape',\n    value: function pointInShape(point) {\n      var capitalConversion = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var integerConversion = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (capitalConversion) point = vectorToCapital(point);\n      if (integerConversion) point = roundVector(point);\n      for (var i = 0; i < this.paths.length; i++) {\n        var pointInPath = this.pointInPath(i, point);\n        var orientation = this.orientation(i);\n\n        if (!pointInPath && orientation || pointInPath && !orientation) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: 'pointInPath',\n    value: function pointInPath(index, point) {\n      var capitalConversion = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var integerConversion = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (capitalConversion) point = vectorToCapital(point);\n      if (integerConversion) point = roundVector(point);\n      var path = this.paths[index];\n      var intPoint = { X: Math.round(point.X), Y: Math.round(point.Y) };\n\n      return _clipper2.default.Clipper.PointInPolygon(intPoint, path) > 0;\n    }\n  }, {\n    key: 'fixOrientation',\n    value: function fixOrientation() {\n      if (!this.closed) {\n        return this;\n      }\n\n      if (this.totalArea() < 0) {\n        this.reverse();\n      }\n\n      return this;\n    }\n  }, {\n    key: 'simplify',\n    value: function simplify(fillType) {\n      if (this.closed) {\n        var shape = _clipper2.default.Clipper.SimplifyPolygons(this.paths, _clipper2.default.PolyFillType[fillType]);\n        return new Shape(shape, true);\n      } else {\n        return this;\n      }\n    }\n  }, {\n    key: 'separateShapes',\n    value: function separateShapes() {\n      var shapes = [];\n\n      if (!this.closed) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this.paths[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var path = _step.value;\n\n            shapes.push(new Shape([path], false));\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      } else {\n        var areas = new WeakMap();\n        var outlines = [];\n        var holes = [];\n\n        for (var i = 0; i < this.paths.length; i++) {\n          var _path = this.paths[i];\n          var orientation = this.orientation(i);\n\n          if (orientation) {\n            var area = this.area(i);\n            areas.set(_path, area);\n            outlines.push(_path);\n          } else {\n            holes.push(_path);\n          }\n        }\n\n        outlines.sort(function (a, b) {\n          return areas.get(a) - areas.get(b);\n        });\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = outlines[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var outline = _step2.value;\n\n            var shape = [outline];\n\n            var index = this.paths.indexOf(outline);\n\n            var _arr2 = [].concat(holes);\n\n            for (var _i2 = 0; _i2 < _arr2.length; _i2++) {\n              var hole = _arr2[_i2];\n              var pointInHole = this.pointInPath(index, hole[0]);\n              if (pointInHole) {\n                shape.push(hole);\n\n                var _index = holes.indexOf(hole);\n                holes.splice(_index, 1);\n              }\n            }\n\n            shapes.push(new Shape(shape, true));\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n\n      return shapes;\n    }\n  }, {\n    key: 'round',\n    value: function round() {\n      return new Shape(this.paths.map(mapToRound), this.closed);\n    }\n  }, {\n    key: 'removeDuplicates',\n    value: function removeDuplicates() {\n      return new Shape(this.paths.map(filterPathsDuplicates), this.closed);\n    }\n  }, {\n    key: 'mapToLower',\n    value: function mapToLower() {\n      return this.paths.map(mapCapitalToLower);\n    }\n  }]);\n\n  return Shape;\n}();\n\nexports.default = Shape;\n\n\nfunction mapCapitalToLower(path) {\n  return path.map(vectorToLower);\n}\n\nfunction vectorToLower(_ref) {\n  var X = _ref.X,\n      Y = _ref.Y;\n\n  return { x: X, y: Y };\n}\n\nfunction mapLowerToCapital(path) {\n  return path.map(vectorToCapital);\n}\n\nfunction vectorToCapital(_ref2) {\n  var x = _ref2.x,\n      y = _ref2.y;\n\n  return { X: x, Y: y };\n}\n\nfunction mapToRound(path) {\n  return path.map(roundVector);\n}\n\nfunction roundVector(_ref3) {\n  var X = _ref3.X,\n      Y = _ref3.Y;\n\n  return { X: Math.round(X), Y: Math.round(Y) };\n}\n\nfunction filterPathsDuplicates(path) {\n  return path.filter(filterPathDuplicates);\n}\n\nfunction filterPathDuplicates(point, i, array) {\n  if (i === 0) return true;\n\n  var prevPoint = array[i - 1];\n  return !(point.X === prevPoint.X && point.Y === prevPoint.Y);\n}\n//# sourceMappingURL=index.js.map"],"names":["_clipper"],"mappings":"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GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7zB,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,SAAS,CAAC,SAAS,CAAC,MAA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"}