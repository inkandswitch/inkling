{
  "version": 3,
  "sources": ["../build/engine.js", "../build/canvas.js", "../build/lib/math.js", "../build/lib/vec.js", "../build/lib/line.js", "../build/app/DrawTool.js", "../build/config.js", "../build/app/Point.js", "../build/app/LineStroke.js", "../build/app/Repeater.js", "../build/app/Page.js", "../build/app/App.js", "../build/main.js"],
  "sourcesContent": ["let eventQueue = {\n    pencil: [], // only one pencil - so a list of events\n    touches: {}, // map by touch id to a list of events\n};\n\nwindow.nativeEvent = (eventState, touches) => {\n    Object.entries(touches).forEach(([touchId, points]) => {\n        points.forEach((point) => {\n            if (point.type === \"pencil\") {\n                eventQueue.pencil.push({\n                    // there's more data in `point` that we're ignoring here\n                    type: eventState,\n                    x: point.x,\n                    y: point.y,\n                });\n            } else {\n                if (!eventQueue.touches[touchId]) {\n                    eventQueue.touches[touchId] = [];\n                }\n\n                eventQueue.touches[touchId].push({\n                    type: eventState,\n                    x: point.x,\n                    y: point.y,\n                    timestamp: point.timestamp\n                });\n            }\n        });\n    });\n};\n\n\nlet callback = null\nfunction frame(){\n    callback(eventQueue)\n\n    eventQueue.pencil = []\n    eventQueue.touches = {}\n\n    window.requestAnimationFrame(frame);\n}\n\nexport default (cb) => {\n    callback = cb\n    window.requestAnimationFrame(frame);\n}", "class Canvas {\n    constructor(dom, cb){\n        // SETUP CANVAS\n        this.canvas = document.createElement(\"canvas\")\n        dom.appendChild(this.canvas)\n        const dpr = window.devicePixelRatio\n        let bounds = dom.getBoundingClientRect()\n        this.canvas.width = bounds.width * dpr\n        this.canvas.height = bounds.height * dpr\n        this.ctx = this.canvas.getContext(\"2d\")\n        this.ctx.scale(dpr, dpr)\n\n        // this.canvas.addEventListener(\"touchstart\", e=>e.preventDefault(), false)\n\n        this.callback = cb\n        cb(this.ctx)\n    }\n\n    render(){\n        this.callback(this.ctx)\n    }\n\n}\n\nexport default Canvas", "// Math\n// The JS Math APIs aren't great. Here's a few extras that are nice to have.\n\nexport const TAU = Math.PI * 2;\n\nexport const isZero = (v) => {\n  return Number.EPSILON > Math.abs(v);\n};\n\nexport const isNonZero = (v) => {\n  return !Math.zero(v);\n};\n\nexport const avg = (a, b) => {\n  return (a + b) / 2;\n};\n\nexport const clip = (v, min = 0, max = 1) => {\n  return Math.min(Math.max(min, v), max);\n};\n\nexport const lerpN = (input, outputMin = 0, outputMax = 1, doClip = false) => {\n  input *= outputMax - outputMin;\n  input += outputMin;\n  if (doClip) input = clip(input, outputMin, outputMax);\n  return input;\n};\n\n// Prettier really screwed this one up, alas.\n// The args should be: input, inputMin, inputMax, outputMin, outputMax, doClip\nexport const lerp = (i, im = 0, iM = 1, om = 0, oM = 1, doClip = true) => {\n  if (im == iM) return om; // Avoids a divide by zero\n  if (im > iM) [im, iM, om, oM] = [iM, im, oM, om];\n  if (doClip) i = clip(i, im, iM);\n  i -= im;\n  i /= iM - im;\n  return lerpN(i, om, oM, false);\n};\n\nexport const rand = (min = -1, max = 1) => {\n  return lerpN(Math.random(), min, max);\n};\n\nexport const randInt = (min, max) => {\n  return Math.round(rand(min, max));\n};\n\nexport const roundTo = (input, precision) => {\n  // Using the reciprocal avoids floating point errors. Eg: 3/10 is fine, but 3*0.1 is wrong.\n  p = 1 / precision;\n  return Math.round(input * p) / p;\n};\n\nexport const easeInOut = (t) => {\n  let ease = (t) => Math.pow(t, 3);\n  if (t < 0.5) return lerp(ease(t * 2), 0, 1, 0, 0.5);\n  else return lerp(ease((1 - t) * 2), 1, 0, 0.5, 1);\n};", "// Vec\n// This is a port of (part of) Ivan's homemade CoffeeScript vector library.\n\nimport { isZero, roundTo, clip } from \"./math.js\";\n\n// Constructors ///////////////////////////////////////////////////////////////\n\nconst Vec = (x = 0, y = 0) => {\n  return { x, y };\n};\nexport default Vec;\n\nVec.clone = (v) => {\n  return Vec(v.x, v.y);\n};\n\nVec.fromRectXY = (r) => {\n  return Vec(r.x, r.y);\n};\n\nVec.fromRectWH = (r) => {\n  return Vec(r.w, r.h);\n};\n\nVec.fromRectRB = (r) => {\n  return Vec(r.x + r.w, r.y + r.h);\n};\n\nVec.of = (s) => {\n  return Vec(s, s);\n};\n\nVec.random = (scale = 1) => {\n  return Vec.Smul(\n    scale,\n    Vec.complement(Vec.Smul(2, Vec(Math.random(), Math.random())))\n  );\n};\n\nVec.toA = (v) => {\n  return [v.x, v.y];\n};\n\nVec.polar = (angle, length) => {\n  const angleInRadians = (angle * Math.PI) / 180;\n  return Vec(\n    length * Math.cos(angleInRadians),\n    length * Math.sin(angleInRadians)\n  );\n}\n\n// Static Vectors /////////////////////////////////////////////////////////////\n\nVec.x = Object.freeze(Vec(1));\nVec.y = Object.freeze(Vec(0, 1));\nVec.zero = Object.freeze(Vec());\n\n// FP /////////////////////////////////////////////////////////////////////////\n\nVec.map = (f, v) => {\n  return Vec(f(v.x), f(v.y));\n};\n\nVec.map2 = (f, a, b) => {\n  return Vec(f(a.x, b.x), f(a.y, b.y));\n};\n\nVec.reduce = (f, v) => {\n  return f(v.x, v.y);\n};\n\n// Vector Algebra /////////////////////////////////////////////////////////////\n\n// Not really cross product, but close enough\nVec.cross = (a, b) => {\n  return a.x * b.y - a.y * b.x\n};\n\nVec.project = (a, b) => {\n  return Vec.mulS(b, Vec.dot(a, b) / Vec.len2(b));\n};\n\nVec.reject = (a, b) => {\n  return Vec.sub(a, Vec.project(a, b));\n};\n\nVec.scalarProjection = (p, a, b) => {\n  let ap = Vec.sub(p, a)\n  let ab = Vec.normalize(Vec.sub(b, a))\n  let f = Vec.mulS(ab,  Vec.dot(ap, ab))\n  return Vec.add(a, f)\n}\n\n// Piecewise Vector Arithmetic ////////////////////////////////////////////////\n\nVec.add = (a, b) => {\n  return Vec(a.x + b.x, a.y + b.y);\n};\n\nVec.div = (a, b) => {\n  return Vec(a.x / b.x, a.y / b.y);\n};\n\nVec.mul = (a, b) => {\n  return Vec(a.x * b.x, a.y * b.y);\n};\n\nVec.sub = (a, b) => {\n  return Vec(a.x - b.x, a.y - b.y);\n};\n\n// Vector-Scalar Arithmetic ///////////////////////////////////////////////////\n\nVec.addS = (v, s) => {\n  return Vec.add(v, Vec.of(s));\n};\n\nVec.divS = (v, s) => {\n  return Vec.div(v, Vec.of(s));\n};\n\nVec.mulS = (v, s) => {\n  return Vec.mul(v, Vec.of(s));\n};\n\nVec.subS = (v, s) => {\n  return Vec.sub(v, Vec.of(s));\n};\n\n// Scalar-Vector Arithmetic ///////////////////////////////////////////////////\n\nVec.Sadd = (s, v) => {\n  return Vec.add(Vec.of(s), v);\n};\n\nVec.Sdiv = (s, v) => {\n  return Vec.div(Vec.of(s), v);\n};\n\nVec.Smul = (s, v) => {\n  return Vec.mul(Vec.of(s), v);\n};\n\nVec.Ssub = (s, v) => {\n  return Vec.sub(Vec.of(s), v);\n};\n\n// Measurement ////////////////////////////////////////////////////////////////\n\nVec.dist = (a, b) => {\n  return Vec.len(Vec.sub(a, b));\n};\n\n// Strongly recommend using Vec.dist instead of Vec.dist2 (distance-squared)\nVec.dist2 = (a, b) => {\n  return Vec.len2(Vec.sub(a, b));\n};\n\nVec.dot = (a, b) => {\n  return a.x * b.x + a.y * b.y;\n};\n\nVec.equal = (a, b) => {\n  return isZero(Vec.dist2(a, b));\n};\n\n// Strongly recommend using Vec.len instead of Vec.len2 (length-squared)\nVec.len2 = (v) => {\n  return Vec.dot(v, v);\n};\n\nVec.len = (v) => {\n  return Math.sqrt(Vec.dot(v, v));\n};\n\n// Rounding ///////////////////////////////////////////////////////////////////\n\nVec.ceil = (v) => {\n  return Vec.map(Math.ceil, v);\n};\n\nVec.floor = (v) => {\n  return Vec.map(Math.floor, v);\n};\n\nVec.round = (v) => {\n  return Vec.map(Math.round, v);\n};\n\nVec.roundTo = (v, s) => {\n  return Vec.map2(roundTo, v, Vec.of(s));\n};\n\n// Variations ///////////////////////////////////////////////////////////////////\n\nVec.complement = (v) => {\n  return Vec.Ssub(1, v);\n};\n\nVec.half = (v) => {\n  return Vec.divS(v, 2);\n};\n\nVec.normalize = (v) => {\n  return Vec.divS(v, Vec.len(v));\n};\n\nVec.recip = (v) => {\n  return Vec.Sdiv(1, v);\n};\n\n// Prettier really screwed this one up, alas.\n// The args should be: input, inputMin, inputMax, outputMin, outputMax\nVec.renormalize = (v, im, iM, om, oM) => {\n  return Vec.add(\n    Vec.mul(Vec.div(Vec.sub(v, im), Vec.sub(iM, im)), Vec.sub(oM, om)),\n    om\n  );\n};\n\n// Combinations ///////////////////////////////////////////////////////////////////\n\nVec.avg = (a, b) => {\n  return Vec.half(Vec.add(a, b));\n};\n\nVec.lerp = (a, b, t) => {\n  return Vec.add(a, Vec.Smul(t, Vec.sub(b, a)));\n};\n\nVec.max = (a, b) => {\n  return Vec.map2(Math.max, a, b);\n};\n\nVec.min = (a, b) => {\n  return Vec.map2(Math.min, a, b);\n};\n\n// Reflections ///////////////////////////////////////////////////////////////////\n\nVec.abs = (v) => {\n  return Vec.map(Math.abs, v);\n};\n\nVec.invert = (v) => {\n  return Vec(-v.x, -v.y);\n};\n\nVec.invertX = (v) => {\n  return Vec(-v.x, v.y);\n};\n\nVec.invertY = (v) => {\n  return Vec(v.x, -v.y);\n};\n\n// Rotation & angles ///////////////////////////////////////////////////////////\n\n\n// 90 degrees clockwise\nVec.rotate90CW = (v)=>{\n  return Vec(v.y, -v.x);\n}\n\n// 90 degrees counter clockwise\nVec.rotate90CCW = (v)=>{\n  return Vec(-v.y, v.x);\n}\n\n// Rotate around\nVec.rotateAround = (vector, point, angle) => {\n  // Convert angle to radians\n  const radians = (angle * Math.PI) / 180;\n\n  // Translate vector to the origin\n  const translatedVector = Vec.sub(vector, point)\n\n  // Perform rotation\n  const rotatedVector = Vec(\n    translatedVector.x * Math.cos(radians) - translatedVector.y * Math.sin(radians),\n    translatedVector.x * Math.sin(radians) + translatedVector.y * Math.cos(radians)\n  );\n\n  // Translate vector back to its original position\n  return Vec.add(rotatedVector, point)\n}\n\n\n\nVec.angle = (v) =>{\n  var angleInRadians = Math.atan2(v.y, v.x);\n  var angleInDegrees = ((angleInRadians * 180) / Math.PI)\n  if (angleInDegrees < 0) {\n    angleInDegrees += 360;\n  }\n  return angleInDegrees;\n}\n\nVec.angleBetween = (a, b) => {\n  // Calculate the dot product of the two vectors\n  const dotProduct = Vec.dot(a, b);\n\n  // Calculate the magnitudes of the two vectors\n  const magnitudeA = Vec.len(a);\n  const magnitudeB = Vec.len(b);\n\n  // Calculate the angle between the vectors using the dot product and magnitudes\n  const angleInRadians = Math.acos(dotProduct / (magnitudeA * magnitudeB));\n\n  // Convert the angle from radians to degrees\n  const angleInDegrees = (angleInRadians * 180) / Math.PI;\n\n  return angleInDegrees;\n}\n\nVec.angleBetweenClockwise = (a, b) => {\n  const dP = Vec.dot(a, b);\n  const cP = Vec.cross(a, b);\n\n  let angle = Math.atan2(dP, cP);\n\n  // Convert the angle from radians to degrees\n  let angleInDegrees = angle * (180 / Math.PI);\n  if (angleInDegrees < 0) {\n    angleInDegrees = 360 + angleInDegrees;\n  }\n\n  return angleInDegrees;\n}\n\nVec.update = (a, b) =>{\n  a.x = b.x\n  a.y = b.y\n}", "// Line\n// This is a collection of functions related to line segments written by Marcel with help of ChatGPT\n\nimport Vec from \"./vec.js\"\n\nconst Line = (a, b) =>{\n    return {a, b}\n}\nexport default Line\n\nLine.len = (l)=>{\n    return Vec.dist(l.a, l.b)\n}\n\n// Returns intersection if the line segments overlap, or null if they don't\nLine.intersect = (l1, l2) =>{\n    const { a: p1, b: p2 } = l1;\n    const { a: q1, b: q2 } = l2;\n\n    const dx1 = p2.x - p1.x;\n    const dy1 = p2.y - p1.y;\n    const dx2 = q2.x - q1.x;\n    const dy2 = q2.y - q1.y;\n\n    const determinant = dx1 * dy2 - dy1 * dx2;\n\n    if (determinant === 0) {\n        // The lines are parallel or coincident\n        return null;\n    }\n\n    const dx3 = p1.x - q1.x;\n    const dy3 = p1.y - q1.y;\n\n    const t = (dx3 * dy2 - dy3 * dx2) / determinant;\n    const u = (dx1 * dy3 - dy1 * dx3) / determinant;\n\n    if (t >= 0 && t <= 1 && u >= 0 && u <= 1) {\n        // The segments intersect at a point\n        const intersectionX = p1.x + t * dx1;\n        const intersectionY = p1.y + t * dy1;\n        return { x: intersectionX, y: intersectionY };\n    }\n\n    // The segments do not intersect\n    return null;\n}\n\n// Always returns intersection point even if the line segments don't overlap\nLine.intersectAnywhere = (l1, l2) =>{\n    const { a: p1, b: p2 } = l1;\n    const { a: q1, b: q2 } = l2;\n  \n    const dx1 = p2.x - p1.x;\n    const dy1 = p2.y - p1.y;\n    const dx2 = q2.x - q1.x;\n    const dy2 = q2.y - q1.y;\n  \n    const determinant = dx1 * dy2 - dy1 * dx2;\n  \n    if (determinant === 0) {\n      // The lines are parallel or coincident\n      return null;\n    }\n  \n    const dx3 = p1.x - q1.x;\n    const dy3 = p1.y - q1.y;\n  \n    const t = (dx3 * dy2 - dy3 * dx2) / determinant;\n    const u = (dx1 * dy3 - dy1 * dx3) / determinant;\n  \n    const intersectionX = p1.x + t * dx1;\n    const intersectionY = p1.y + t * dy1;\n  \n    return { x: intersectionX, y: intersectionY };\n}\n\n// Get point along slope\nLine.getYforX = (line, x) => {\n    // Extract the coordinates of points a and b\n    const { a, b } = line;\n    const { x: x1, y: y1 } = a;\n    const { x: x2, y: y2 } = b;\n    \n    // Calculate the slope of the line\n    const slope = (y2 - y1) / (x2 - x1);\n    \n    // Calculate the y-coordinate for the given x-coordinate\n    const y = slope * (x - x1) + y1;\n    \n    return y;\n}\n\n// Get point along slope\nLine.getXforY = (line, y) => {\n    // Extract the coordinates of points a and b\n    const { a, b } = line;\n    const { x: x1, y: y1 } = a;\n    const { x: x2, y: y2 } = b;\n\n    // Calculate the slope of the line\n    const slope = (y2 - y1) / (x2 - x1);\n\n    // Calculate the x-coordinate for the given y-coordinate\n    const x = (y - y1) / slope + x1;\n\n    return x;\n}\n\n\nLine.distToPoint = (line, point) => {\n    const { a, b } = line;\n\n    // Calculate vector AB and AP\n    const AB = Vec.sub(b, a);\n    const AP = Vec.sub(point, a);\n  \n    // Calculate the projection of AP onto AB\n    const projection = Vec.dot(AP, AB) / Vec.dot(AB, AB);\n  \n    // Check if the projection is outside the line segment\n    if (projection <= 0) {\n        // Closest point is A\n        return Vec.len(AP);\n    } else if (projection >= 1) {\n        // Closest point is B\n        return Vec.dist(point, b);\n    } else {\n        // Closest point is between A and B\n        const closestPoint = Vec.add(a, Vec.mulS(AB, projection));\n        return Vec.dist(point, closestPoint);\n    }\n}", "import Line from \"../lib/line.js\";\nimport Vec from \"../lib/vec.js\";\n\nexport default class DrawTool {\n    constructor(page){\n        this.page = page\n        this.a = null;\n        this.b = null;\n    }\n\n    pen_down(pos){\n        this.a = pos\n        this.b = Vec.clone(pos)\n    }\n\n    pen_move(pos) {\n        this.b = pos\n    }\n\n    pen_up(pos) {\n        let line = Line(this.a, this.b)\n\n        this.page.add_line(line)\n\n        this.a = null\n        this.b = null\n    }\n\n    render(ctx){\n        if(!this.a) return\n\n        ctx.lineWidth = 1.0;\n        ctx.strokeStyle = '#000000';\n        ctx.beginPath();\n        ctx.moveTo(this.a.x, this.a.y);\n        ctx.lineTo(this.b.x, this.b.y);\n        ctx.stroke();\n    }\n}", "export default {\n    filming_mode: true\n}", "import Vec from \"../lib/vec.js\";\nimport config from \"../config.js\";\n\n// Monotonically incrementing id counter\nlet nextId = 0;\nlet size = config.filming_mode ? 4: 3\n\nexport default class Point {\n    constructor(pos) {\n        this.id = nextId++;\n        this.pos = pos || Vec();\n    }\n\n    render(ctx, color = '#000000') {\n        ctx.fillStyle = color;\n        ctx.beginPath();\n        ctx.ellipse(this.pos.x, this.pos.y, size, size, 0, 0, Math.PI * 2);\n        ctx.fill();\n    }\n}", "import config from \"../config.js\";\nlet size = config.filming_mode ? 3: 1\n\n// Monotonically incrementing id counter\nlet nextId = 0;\n\n\nexport default class LineStroke {\n    constructor(a, b) {\n        this.id = nextId++;\n        this.a = a;\n        this.b = b;\n    }\n\n    render(ctx, color = '#000000') {\n        ctx.lineWidth = size;\n        ctx.strokeStyle = color;\n        ctx.beginPath();\n        ctx.moveTo(this.a.pos.x, this.a.pos.y);\n        ctx.lineTo(this.b.pos.x, this.b.pos.y);\n        ctx.stroke();\n    }\n}", "import Vec from \"../lib/vec.js\"\nimport LineStroke from \"./LineStroke.js\"\nimport Point from \"./Point.js\"\n\nexport default class Repeater {\n    constructor(strokes){\n        // normalize strokes\n        this.root = strokes[0].a.pos\n        this.default_translate = Vec.sub(strokes[strokes.length-1].b.pos, this.root)\n        this.translate = this.default_translate\n        this.rotate = 0\n\n        this.baked_translate = Vec(0,0)\n        this.baked_rotate = 0\n\n        this.pattern = strokes.map(stroke=>{\n            return {\n                a: stroke.a.pos,\n                b: stroke.b.pos\n            }\n        })\n\n        this.first = strokes\n        this.repetitions = 1\n        this.repetiton_rotation = 1\n        this.repetiton_rotation_acc = 0\n\n        this.transform(Vec(0,0), 0)\n \n    }\n\n    transform(translate, rotate) {\n        this.translate = Vec.add(this.baked_translate, Vec.add(this.default_translate, translate))\n        this.rotate = this.baked_rotate + rotate\n        this.update()\n    }\n\n    update(){\n        this.copies = []\n        this.repetitions = Math.round(this.repetiton_rotation)\n        let offset_translate = this.translate\n        let offset_rotate = this.rotate\n\n        for (let i = 0; i < this.repetitions; i++) {\n            let copy = {points: [], strokes: []}\n            this.pattern.forEach(line=>{\n                let a = new Point(Vec.add(line.a, offset_translate))\n                copy.points.push(a)\n                let b = new Point(Vec.add(line.b, offset_translate))\n                copy.points.push(b)\n                let stroke = new LineStroke(a, b)\n                copy.strokes.push(stroke)\n            })\n\n            // Compute centroid\n            let center = copy.strokes[0].a.pos\n            // let center = Vec(0,0)\n            // copy.points.forEach(pt=>{\n            //     center = Vec.add(center, pt.pos)\n            // })\n            // center = Vec.divS(center, copy.points.length)\n\n            //console.log(\"center\", center);\n            // Rotate point around center\n            copy.points.forEach(pt=>{\n                Vec.update(pt.pos, Vec.rotateAround(pt.pos, center, offset_rotate))\n            })\n\n            let old_offset = offset_translate\n            \n            offset_translate = Vec.add(offset_translate, this.translate)//Vec.sub(copy.strokes[copy.strokes.length-1].b.pos, this.root)\n            offset_translate = Vec.rotateAround(offset_translate, old_offset, offset_rotate)\n            \n            offset_rotate += this.rotate\n            this.copies.push(copy)\n        }\n    }\n\n    bake(){\n        this.baked_translate = this.translate\n        this.baked_rotate = this.rotate\n    }\n\n    update_repetitions(delta){\n        this.repetiton_rotation_acc = delta * 0.05\n    }\n\n\n    render(ctx) {\n        // animate\n        this.repetiton_rotation += this.repetiton_rotation_acc\n        this.repetiton_rotation_acc *= 0.9\n        if(this.repetitions  != Math.round(this.repetiton_rotation)) {\n            this.update()\n        }\n\n\n        ctx.lineWidth = 1.0;\n\n        this.copies.forEach((copy, i)=>{\n            copy.strokes.forEach(stroke=>{\n                stroke.render(ctx, i==0?'#F81ED5':\"#000000\")\n            })\n    \n            copy.points.forEach(point=>{\n                point.render(ctx, i==0?'#F81ED5':\"#000000\")\n            })\n        })\n\n        //ctx.set\n        ctx.fillStyle = \"#00000044\";\n        ctx.save()\n        \n        ctx.translate(40, 40);\n        ctx.rotate(this.repetiton_rotation)\n        ctx.beginPath();\n        ctx.ellipse(0, 0, 80, 80, 0, 0, Math.PI * 2);\n        ctx.fill();\n        let seg = (Math.PI*2) / 16\n        for (let i = 0; i < 16; i++) {\n            ctx.beginPath();\n            ctx.ellipse(Math.sin(seg*i)*70, Math.cos(seg*i)*70, 5, 5, 0, 0, Math.PI * 2);\n            ctx.fill();\n            \n        }\n        \n        ctx.restore()\n\n        ctx.fillStyle = \"#000000\";\n        ctx.font = \"30px Arial\";\n        ctx.fillText(this.repetitions+1, 40, 60)\n    }\n}", "import Point from \"./Point.js\";\nimport LineStroke from \"./LineStroke.js\";\nimport Vec from \"../lib/vec.js\";\nimport Line from \"../lib/line.js\";\nimport Repeater from \"./Repeater.js\";\n\nexport default class Page {\n    constructor(){\n        this.points = []\n        this.strokes = []\n\n        this.repeater = null\n\n        // Selection and movement\n        this.selection = {\n            points: {},\n            strokes: {}\n        }\n\n        this.last_tap_time = null\n\n        this.transform = {\n            finger_a: null,\n            finger_b: null,\n            empty_space: false,\n            dragging: false,\n            finger_a_down: null,\n            finger_b_down: null,\n            finger_a_move: null,\n            finger_b_move: null,\n            points_down: {}\n        }\n\n        this.repeater_interaction = null\n        this.repeater_old_rotation = 0\n\n    }\n\n    // TOUCH EVENTS\n    touch_down(pos, id, timestamp){\n\n        if(this.repeater && Vec.dist(Vec(40, 40), pos) < 80) {\n            this.repeater_interaction = pos\n            this.repeater_old_rotation = this.repeater.repetiton_rotation\n        }\n\n        if(Vec.dist(Vec(10, 10), pos) < 50) {\n            let strokes = Object.keys(this.selection.strokes).sort().map(id=>this.selection.strokes[id])\n            this.repeater = new Repeater(strokes)\n            this.selection = {\n                points: {},\n                strokes: {}\n            }\n            //this.repeater.mid.points.forEach(pt=>this.selection.points[pt.id] = pt)\n            //this.repeater.mid.strokes.forEach(st=>this.selection.strokes[st.id] = st)\n\n            return\n        }\n        \n        if(this.transform.finger_a == null) { // First finger\n            this.empty_space = true\n            this.last_tap_time = timestamp\n\n            \n\n            // Add to selection\n            const found = this.find_point_near(pos);\n            if(found) {\n                this.selection.points[found.id] = found;\n                this.empty_space = false\n            } else {\n                const found_line = this.find_stroke_near(pos);\n                if(found_line) {\n                    this.selection.strokes[found_line.id] = found_line;\n                    this.selection.points[found_line.a.id] = found_line.a;\n                    this.selection.points[found_line.b.id] = found_line.b;\n                    this.empty_space = false\n                }\n            }\n\n            \n            // Drag move\n            this.transform.dragging = true\n            \n            this.transform.finger_a = id\n            this.transform.finger_a_down = pos\n            this.transform.finger_a_move = pos\n            this.transform.points_down = {}\n            Object.keys(this.selection.points).forEach(id=>{\n                this.transform.points_down[id] = Vec.clone(this.selection.points[id].pos)\n            })\n\n        } else {\n            // Second finger\n            this.transform.finger_b = id\n            this.transform.finger_b_down = pos\n            this.transform.finger_b_move = pos\n            this.transform.finger_a_down = this.transform.finger_a_move\n            this.transform.points_down = {}\n            Object.keys(this.selection.points).forEach(id=>{\n                this.transform.points_down[id] = Vec.clone(this.selection.points[id].pos)\n            })\n        }\n\n    }\n\n    touch_move(pos, id, timestamp){\n\n        if(this.repeater_interaction) {\n            let delta = pos.y - this.repeater_interaction.y\n            this.repeater_interaction = pos\n            this.repeater.update_repetitions(delta)\n            return\n        }\n\n        if(!this.transform.dragging) return\n\n        if(this.transform.finger_b) {\n            if(id == this.transform.finger_a) {\n                this.transform.finger_a_move = pos\n            }\n\n            if(id == this.transform.finger_b) {\n                this.transform.finger_b_move = pos\n            }\n\n            let midpoint_down = Vec.mulS(Vec.add(this.transform.finger_a_down, this.transform.finger_b_down), 0.5)\n            let midpoint_move = Vec.mulS(Vec.add(this.transform.finger_a_move, this.transform.finger_b_move), 0.5)\n            let translate_delta = Vec.sub(midpoint_move, midpoint_down)\n\n            let angle_down = Vec.angle(Vec.sub(this.transform.finger_a_down, this.transform.finger_b_down))\n            let angle_move =  Vec.angle(Vec.sub(this.transform.finger_a_move, this.transform.finger_b_move))\n            let angle_delta = angle_move - angle_down\n\n            if(this.repeater) {\n                this.repeater.transform(translate_delta, angle_delta)\n            } else {\n                // Translate points and compute centroid\n                let center = Vec(0,0)\n                Object.keys(this.selection.points).forEach(id=>{\n                    this.selection.points[id].pos = Vec.add(this.transform.points_down[id], translate_delta)\n                    center = Vec.add(center, this.selection.points[id].pos)\n                })\n                center = Vec.divS(center, Object.keys(this.selection.points).length)\n\n                // Rotate point around center\n                Object.keys(this.selection.points).forEach(id=>{\n                    this.selection.points[id].pos = Vec.rotateAround(this.selection.points[id].pos, center, angle_delta)\n                })\n            }\n            \n        } else {\n            if(id == this.transform.finger_a) {\n                this.finger_a_moved = pos\n                let delta = Vec.sub(pos, this.transform.finger_a_down)\n                if(this.repeater) {\n                    this.repeater.transform(delta, 0)\n                } else {\n                    Object.keys(this.selection.points).forEach(id=>{\n                        this.selection.points[id].pos = Vec.add(this.transform.points_down[id], delta)\n                    })\n                }\n            }\n        }\n    }\n\n    touch_up(pos, id, timestamp) {\n        if(this.repeater) this.repeater.bake()\n\n        this.transform.dragging = false\n        this.repeater_interaction = null\n\n        if(this.transform.finger_a == id) {\n            this.transform.finger_a = null\n        }\n        if(this.transform.finger_b == id) {\n            this.transform.finger_b = null\n        }\n        console.log(this.transform.finger_a);\n        \n        // Handle taps \n        if(timestamp - this.last_tap_time < 0.2) {\n            // Tap in empty space, clear selection\n            if(this.empty_space) {\n                \n                if(this.repeater) {\n                    this.repeater.copies.forEach(copy=>{\n                        copy.points.forEach(point=>{\n                            this.points.push(point)\n                        })\n                        copy.strokes.forEach(stroke=>{\n                            this.strokes.push(stroke)\n                        })\n                    })\n                    this.repeater = null\n                }\n\n                this.selection = {\n                    points: {},\n                    strokes: {}\n                }\n                this.last_tap_time = null\n                return\n            }\n        } else {\n            if(!this.empty_space && (Object.keys(this.selection.points).length == 1 || Object.keys(this.selection.strokes).length == 1)) {\n            \n                this.selection = {\n                    points: {},\n                    strokes: {}\n                }\n            }\n        }\n\n\n    }\n\n    // FIND ELEMENTS\n    find_point_near(pos) {\n        return this.points.find(point => Vec.dist(point.pos, pos) < 20);\n    }\n\n    find_stroke_near(pos) {\n        return this.strokes.find(stroke=> {\n            const dist = Line.distToPoint(Line(stroke.a.pos, stroke.b.pos), pos);\n            return dist < 20;\n        })\n    }\n\n    // ADD NEW\n    add_line(line) {\n        let a = new Point(line.a)\n        let b = new Point(line.b)\n\n        this.points.push(a)\n        this.points.push(b)\n        this.strokes.push(new LineStroke(a, b))\n    }\n\n    render(ctx){\n\n        if(!this.repeater) {\n            ctx.beginPath();\n            ctx.ellipse(30, 30, 20, 20, 0, 0, Math.PI * 2);\n            ctx.stroke();\n        }\n        \n\n        this.strokes.forEach(stroke=>{\n            stroke.render(ctx, this.selection.strokes[stroke.id] ? '#F81ED5': (this.repeater ? '#AAAAAA':'#000000'))\n        })\n\n        this.points.forEach(point=>{\n            point.render(ctx, this.selection.points[point.id] ? '#F81ED5': (this.repeater ? '#AAAAAA':'#000000'))\n        })\n\n        if(this.repeater) {\n            this.repeater.render(ctx)\n        }\n    }\n}", "import Vec from \"../lib/vec.js\";\nimport DrawTool from \"./DrawTool.js\";\nimport Page from \"./Page.js\";\n\n\nexport default class App {\n    constructor(){\n        this.page = new Page();\n\n        this.draw_tool = new DrawTool(this.page);\n    }\n\n    update(events){\n        // Handle pencil input\n        events.pencil.forEach(event => {\n            const pos = Vec(event.x, event.y);\n            if (event.type === 'began') {\n                this.draw_tool.pen_down(pos);\n            } else if (event.type === 'moved') {\n                this.draw_tool.pen_move(pos);\n            } else if (event.type === 'ended') {\n                this.draw_tool.pen_up(pos);\n            }\n        })\n\n        // Handle touch input\n        Object.entries(events.touches).forEach(([touchId, events]) => {\n            events.forEach(event => {\n                const pos = Vec(event.x, event.y);\n                if (event.type === 'began') {\n                    this.page.touch_down(pos, touchId, event.timestamp);\n                } else if (event.type === 'moved') {\n                    this.page.touch_move(pos, touchId, event.timestamp);\n                } else if (event.type === 'ended') {\n                    this.page.touch_up(pos, touchId, event.timestamp);\n                }\n            })\n        })\n    }\n\n    render(ctx){\n        this.draw_tool.render(ctx)\n        this.page.render(ctx)\n    }\n}", "import engine from './engine.js';\nimport Canvas from './canvas.js';\nimport App from './app/App.js';\n\n\nconst app = new App();\n\nconsole.log(\"hello world\");\n\nconst canvas = new Canvas(document.body, ctx => {\n  ctx.clearRect(0,0, window.innerWidth, window.innerHeight);\n  app.render(ctx);\n});\n\nengine((events) => {\n  app.update(events);\n  //relax();\n  canvas.render();\n});"],
  "mappings": "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",
  "names": []
}
