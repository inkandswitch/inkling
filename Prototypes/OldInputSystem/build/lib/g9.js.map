{
  "version": 3,
  "sources": ["/Users/admin/Work/Inkling/Prototypes/OldInputSystem/src/lib/g9.ts"],
  "sourcesContent": ["// Lifted from https://github.com/bijection/g9/blob/master/src/minimize.js\n\n/* eslint-disable */\n\nfunction norm2(x) {\n  return Math.sqrt(x.reduce((a, b) => a + b * b, 0));\n}\n\nfunction identity(n) {\n  const ret = Array(n);\n  for (let i = 0; i < n; i++) {\n    ret[i] = Array(n);\n    for (let j = 0; j < n; j++) {\n      ret[i][j] = +(i == j);\n    }\n  }\n  return ret;\n}\n\nfunction neg(x) {\n  return x.map(a => -a);\n}\n\nfunction dot(a, b) {\n  if (typeof a[0] !== 'number') {\n    return a.map(x => dot(x, b));\n  }\n  return a.reduce((x, y, i) => x + y * b[i], 0);\n}\n\nfunction sub(a, b) {\n  if (typeof a[0] !== 'number') {\n    return a.map((c, i) => sub(c, b[i]));\n  }\n  return a.map((c, i) => c - b[i]);\n}\n\nfunction add(a, b) {\n  if (typeof a[0] !== 'number') {\n    return a.map((c, i) => add(c, b[i]));\n  }\n  return a.map((c, i) => c + b[i]);\n}\n\nfunction div(a, b) {\n  return a.map(c => c.map(d => d / b));\n}\n\nfunction mul(a, b) {\n  if (typeof a[0] !== 'number') {\n    return a.map(c => mul(c, b));\n  }\n  return a.map(c => c * b);\n}\n\nfunction ten(a, b) {\n  return a.map((c, i) => mul(b, c));\n}\n\n// function isZero(a) {\n//   for (let i = 0; i < a.length; i++) {\n//     if (a[i] !== 0) {\n//       return false;\n//     }\n//   }\n//   return true;\n// }\n\n// Adapted from the numeric.js gradient and uncmin functions\n// Numeric Javascript\n// Copyright (C) 2011 by S\u00E9bastien Loisel\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport function gradient(f: (x: number[]) => number, x: number[]): number[] {\n  const dim = x.length,\n    f1 = f(x);\n  if (isNaN(f1)) {\n    throw new Error('The gradient at [' + x.join(' ') + '] is NaN!');\n  }\n  const { max, abs, min } = Math;\n  const tempX = x.slice(0),\n    grad = Array(dim);\n  for (let i = 0; i < dim; i++) {\n    let delta = max(1e-6 * f1, 1e-8);\n    for (let k = 0; ; k++) {\n      if (k == 20) {\n        throw new Error(\n          'Gradient failed at index ' + i + ' of [' + x.join(' ') + ']'\n        );\n      }\n      tempX[i] = x[i] + delta;\n      const f0 = f(tempX);\n      tempX[i] = x[i] - delta;\n      const f2 = f(tempX);\n      tempX[i] = x[i];\n      if (!(isNaN(f0) || isNaN(f2))) {\n        grad[i] = (f0 - f2) / (2 * delta);\n        const t0 = x[i] - delta;\n        const t1 = x[i];\n        const t2 = x[i] + delta;\n        const d1 = (f0 - f1) / delta;\n        const d2 = (f1 - f2) / delta;\n        const err = min(\n          max(abs(d1 - grad[i]), abs(d2 - grad[i]), abs(d1 - d2)),\n          delta\n        );\n        const normalize = max(\n          abs(grad[i]),\n          abs(f0),\n          abs(f1),\n          abs(f2),\n          abs(t0),\n          abs(t1),\n          abs(t2),\n          1e-8\n        );\n        if (err / normalize < 1e-3) {\n          break;\n        } //break if this index is done\n      }\n      delta /= 16;\n    }\n  }\n  return grad;\n}\n\nexport function minimize(\n  f: (x: number[]) => number,\n  x0: number[],\n  maxit = 1000,\n  tol = 1e-8,\n  end_on_line_search = false\n): {\n  solution: number[];\n  f: number;\n  gradient: number[];\n  invHessian: number[][];\n  iterations: number;\n  message: string;\n} {\n  tol = Math.max(tol, 2e-16);\n  const grad = (a: number[]) => gradient(f, a);\n\n  x0 = x0.slice(0);\n  let g0 = grad(x0);\n  let f0 = f(x0);\n  if (isNaN(f0)) {\n    throw new Error('minimize: f(x0) is a NaN!');\n  }\n  const n = x0.length;\n  let H1 = identity(n);\n\n  for (var it = 0; it < maxit; it++) {\n    if (!g0.every(isFinite)) {\n      var msg = 'Gradient has Infinity or NaN';\n      break;\n    }\n    const step = neg(dot(H1, g0));\n    if (!step.every(isFinite)) {\n      var msg = 'Search direction has Infinity or NaN';\n      break;\n    }\n    const nstep = norm2(step);\n    if (nstep < tol) {\n      var msg = 'Newton step smaller than tol';\n      break;\n    }\n    let t = 1;\n    const df0 = dot(g0, step);\n    // line search\n    let x1 = x0;\n    var s;\n    for (; it < maxit && t * nstep >= tol; it++) {\n      s = mul(step, t);\n      x1 = add(x0, s);\n      var f1 = f(x1);\n      if (!(f1 - f0 >= 0.1 * t * df0 || isNaN(f1))) {\n        break;\n      }\n      t *= 0.5;\n    }\n    if (t * nstep < tol && end_on_line_search) {\n      var msg = 'Line search step size smaller than tol';\n      break;\n    }\n    if (it === maxit) {\n      var msg = 'maxit reached during line search';\n      break;\n    }\n    const g1 = grad(x1);\n    const y = sub(g1, g0);\n    const ys = dot(y, s);\n    const Hy = dot(H1, y);\n    H1 = sub(\n      add(H1, mul(ten(s, s), (ys + dot(y, Hy)) / (ys * ys))),\n      div(add(ten(Hy, s), ten(s, Hy)), ys)\n    );\n    x0 = x1;\n    f0 = f1;\n    g0 = g1;\n  }\n\n  return {\n    solution: x0,\n    f: f0,\n    gradient: g0,\n    invHessian: H1,\n    iterations: it,\n    message: msg,\n  };\n}\n"],
  "mappings": "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",
  "names": []
}
