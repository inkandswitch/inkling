{
  "version": 3,
  "sources": ["/Users/admin/Work/Inkling/Prototypes/OldInputSystem/src/app/strokes/ArcSegment.ts"],
  "sourcesContent": ["import { Position } from '../../lib/types';\nimport { generateId } from '../../lib/helpers';\nimport Vec from '../../lib/vec';\nimport SVG from '../Svg';\nimport Handle from './Handle';\n\nexport default class ArcSegment {\n  readonly id = generateId();\n  readonly a: Handle;\n  readonly b: Handle;\n  readonly c: Handle;\n\n  private selected = false;\n  private path = '';\n  private readonly elements: { normal: SVGElement; selected: SVGElement };\n  private needsRerender = true;\n\n  constructor(aPos: Position, bPos: Position, cPos: Position) {\n    this.a = Handle.create('formal', aPos, this);\n    this.b = Handle.create('formal', bPos, this);\n    this.c = Handle.create('formal', cPos, this);\n\n    this.updatePath();\n\n    const attrs = { d: this.path, fill: 'none' };\n    this.elements = {\n      normal: SVG.add('path', {\n        ...attrs,\n        'stroke-width': 1,\n        stroke: 'black',\n      }),\n      selected: SVG.add('path', {\n        ...attrs,\n        'stroke-width': 7,\n        stroke: 'none',\n      }),\n    };\n  }\n\n  updatePath() {\n    const radius = Vec.dist(this.a.position, this.c.position);\n    const isLargeArc = 0; // more than 180\n    const clockwise = 1; // clockwise or counterclockwise\n    const xAxisRotation = 0;\n\n    //           M   start_x              start_y            A   radius_x   radius_y  x-axis-rotation  more-than-180 clockwise    end_x                end_y\n    this.path = `M ${this.a.position.x} ${this.a.position.y} A ${radius}  ${radius} ${xAxisRotation} ${isLargeArc} ${clockwise} ${this.b.position.x} ${this.b.position.y}`;\n  }\n\n  select() {\n    this.selected = true;\n    this.needsRerender = true;\n  }\n\n  deselect() {\n    this.selected = false;\n    this.needsRerender = true;\n  }\n\n  onHandleMoved() {\n    this.needsRerender = true;\n  }\n\n  render() {\n    if (!this.needsRerender) {\n      return;\n    }\n\n    this.updatePath();\n    const commonAttributes = { d: this.path };\n    SVG.update(this.elements.normal, commonAttributes);\n    SVG.update(this.elements.selected, {\n      ...commonAttributes,\n      stroke: this.selected ? 'rgba(180, 134, 255, 0.42)' : 'none',\n    });\n\n    this.needsRerender = false;\n  }\n}\n"],
  "mappings": "AACA;AACA;AACA;AACA;AAEA,gCAAgC;AAAA,EAW9B,YAAY,MAAgB,MAAgB,MAAgB;AAVnD,cAAK;AAKN,oBAAW;AACX,gBAAO;AAEP,yBAAgB;AAGtB,SAAK,IAAI,OAAO,OAAO,UAAU,MAAM;AACvC,SAAK,IAAI,OAAO,OAAO,UAAU,MAAM;AACvC,SAAK,IAAI,OAAO,OAAO,UAAU,MAAM;AAEvC,SAAK;AAEL,UAAM,QAAQ,CAAE,GAAG,KAAK,MAAM,MAAM;AACpC,SAAK,WAAW;AAAA,MACd,QAAQ,IAAI,IAAI,QAAQ;AAAA,WACnB;AAAA,QACH,gBAAgB;AAAA,QAChB,QAAQ;AAAA;AAAA,MAEV,UAAU,IAAI,IAAI,QAAQ;AAAA,WACrB;AAAA,QACH,gBAAgB;AAAA,QAChB,QAAQ;AAAA;AAAA;AAAA;AAAA,EAKd,aAAa;AACX,UAAM,SAAS,IAAI,KAAK,KAAK,EAAE,UAAU,KAAK,EAAE;AAChD,UAAM,aAAa;AACnB,UAAM,YAAY;AAClB,UAAM,gBAAgB;AAGtB,SAAK,OAAO,KAAK,KAAK,EAAE,SAAS,KAAK,KAAK,EAAE,SAAS,OAAO,WAAW,UAAU,iBAAiB,cAAc,aAAa,KAAK,EAAE,SAAS,KAAK,KAAK,EAAE,SAAS;AAAA;AAAA,EAGrK,SAAS;AACP,SAAK,WAAW;AAChB,SAAK,gBAAgB;AAAA;AAAA,EAGvB,WAAW;AACT,SAAK,WAAW;AAChB,SAAK,gBAAgB;AAAA;AAAA,EAGvB,gBAAgB;AACd,SAAK,gBAAgB;AAAA;AAAA,EAGvB,SAAS;AACP,QAAI,CAAC,KAAK,eAAe;AACvB;AAAA;AAGF,SAAK;AACL,UAAM,mBAAmB,CAAE,GAAG,KAAK;AACnC,QAAI,OAAO,KAAK,SAAS,QAAQ;AACjC,QAAI,OAAO,KAAK,SAAS,UAAU;AAAA,SAC9B;AAAA,MACH,QAAQ,KAAK,WAAW,8BAA8B;AAAA;AAGxD,SAAK,gBAAgB;AAAA;AAAA;",
  "names": []
}
