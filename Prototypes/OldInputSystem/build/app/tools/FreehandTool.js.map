{
  "version": 3,
  "sources": ["/Users/admin/Work/Inkling/Prototypes/OldInputSystem/src/app/tools/FreehandTool.ts"],
  "sourcesContent": ["import { PositionWithPressure } from '../../lib/types';\nimport Page from '../Page';\nimport SVG from '../Svg';\nimport FreehandStroke from '../strokes/FreehandStroke';\nimport Tool from './Tool';\n\ntype ModeInfo =\n  | { mode: 'unistroke' }\n  | {\n      mode: 'multistroke';\n      accumulatedStrokes: FreehandStroke[];\n      multistrokeModeDotElement: SVGElement;\n    };\n\nexport default class FreehandTool extends Tool<FreehandStroke> {\n  private modeInfo: ModeInfo = { mode: 'unistroke' };\n\n  constructor(label: string, buttonX: number, buttonY: number, page: Page) {\n    super(label, buttonX, buttonY, page, FreehandStroke);\n  }\n\n  startStroke(point: PositionWithPressure) {\n    super.startStroke(point);\n    if (this.modeInfo.mode === 'multistroke') {\n      this.modeInfo.accumulatedStrokes.push(this.stroke!);\n    }\n  }\n\n  onAction() {\n    this.toggleModes();\n  }\n\n  onDeselected() {\n    super.onDeselected();\n    this.setMode('unistroke');\n  }\n\n  private toggleModes() {\n    this.setMode(\n      this.modeInfo.mode === 'unistroke' ? 'multistroke' : 'unistroke'\n    );\n  }\n\n  private setMode(mode: ModeInfo['mode']) {\n    switch (mode) {\n      case 'multistroke':\n        if (this.modeInfo.mode !== 'multistroke') {\n          this.modeInfo = {\n            mode: 'multistroke',\n            accumulatedStrokes: [],\n            multistrokeModeDotElement: SVG.add('circle', {\n              cx: this.buttonX,\n              cy: this.buttonY,\n              r: 17,\n              stroke: '#fff',\n              fill: 'none',\n            }),\n          };\n        }\n        break;\n      case 'unistroke':\n        if (this.modeInfo.mode !== 'unistroke') {\n          this.addStrokeGroupForAccumulatedStrokes(\n            this.modeInfo.accumulatedStrokes\n          );\n          this.modeInfo.multistrokeModeDotElement.remove();\n          this.modeInfo = { mode: 'unistroke' };\n        }\n        break;\n      default:\n        throw new Error('unsupported mode: ' + mode);\n    }\n  }\n\n  private addStrokeGroupForAccumulatedStrokes(\n    accumulatedStrokes: FreehandStroke[]\n  ) {\n    accumulatedStrokes = accumulatedStrokes.filter(stroke => !stroke.group);\n    if (accumulatedStrokes.length > 0) {\n      this.page.addStrokeGroup(new Set(accumulatedStrokes));\n    }\n  }\n}\n"],
  "mappings": "AAEA;AACA;AACA;AAUA,0CAA0C,KAAqB;AAAA,EAG7D,YAAY,OAAe,SAAiB,SAAiB,MAAY;AACvE,UAAM,OAAO,SAAS,SAAS,MAAM;AAH/B,oBAAqB,CAAE,MAAM;AAAA;AAAA,EAMrC,YAAY,OAA6B;AACvC,UAAM,YAAY;AAClB,QAAI,KAAK,SAAS,SAAS,eAAe;AACxC,WAAK,SAAS,mBAAmB,KAAK,KAAK;AAAA;AAAA;AAAA,EAI/C,WAAW;AACT,SAAK;AAAA;AAAA,EAGP,eAAe;AACb,UAAM;AACN,SAAK,QAAQ;AAAA;AAAA,EAGP,cAAc;AACpB,SAAK,QACH,KAAK,SAAS,SAAS,cAAc,gBAAgB;AAAA;AAAA,EAIjD,QAAQ,MAAwB;AACtC,YAAQ;AAAA,WACD;AACH,YAAI,KAAK,SAAS,SAAS,eAAe;AACxC,eAAK,WAAW;AAAA,YACd,MAAM;AAAA,YACN,oBAAoB;AAAA,YACpB,2BAA2B,IAAI,IAAI,UAAU;AAAA,cAC3C,IAAI,KAAK;AAAA,cACT,IAAI,KAAK;AAAA,cACT,GAAG;AAAA,cACH,QAAQ;AAAA,cACR,MAAM;AAAA;AAAA;AAAA;AAIZ;AAAA,WACG;AACH,YAAI,KAAK,SAAS,SAAS,aAAa;AACtC,eAAK,oCACH,KAAK,SAAS;AAEhB,eAAK,SAAS,0BAA0B;AACxC,eAAK,WAAW,CAAE,MAAM;AAAA;AAE1B;AAAA;AAEA,cAAM,IAAI,MAAM,uBAAuB;AAAA;AAAA;AAAA,EAIrC,oCACN,oBACA;AACA,yBAAqB,mBAAmB,OAAO,YAAU,CAAC,OAAO;AACjE,QAAI,mBAAmB,SAAS,GAAG;AACjC,WAAK,KAAK,eAAe,IAAI,IAAI;AAAA;AAAA;AAAA;",
  "names": []
}
